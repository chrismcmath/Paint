!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASCIICapable	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		ASCIICapable = 1,$/;"	e	enum:UIInput.KeyboardType	file:
Above	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^		Above,$/;"	e	enum:UIPopupList.Position	file:
Action	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	public enum Action$/;"	g	class:UIWidgetInspector
Action	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	public enum Action$/;"	g	class:UIKeyBinding
Activate	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static void Activate (Transform t) { Activate(t, true); }$/;"	m	class:NGUITools	file:
Activate	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static void Activate (Transform t, bool compatibilityMode)$/;"	m	class:NGUITools	file:
ActivateDeactivate	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static void ActivateDeactivate()$/;"	m	class:NGUISelectionTools	file:
ActiveAnimation	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^public class ActiveAnimation : MonoBehaviour$/;"	c
ActiveAnimationEditor	Assets/Addons/NGUI/Scripts/Editor/ActiveAnimationEditor.cs	/^public class ActiveAnimationEditor : Editor$/;"	c
ActiveMission	Assets/Scripts/Grid/ActiveMission.cs	/^        public ActiveMission(Mission mission, List<IntVect2> path, Source source) {$/;"	m	class:Shanghai.Grid.ActiveMission
ActiveMission	Assets/Scripts/Grid/ActiveMission.cs	/^    public class ActiveMission {$/;"	c	namespace:Shanghai.Grid
ActiveMissions	Assets/Scripts/GameModel.cs	/^        public List<ActiveMission> ActiveMissions {$/;"	p	class:Shanghai.GameModel
Add	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static void Add (Transform root, Transform child)$/;"	m	class:NGUISnap	file:
Add	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static void Add (Transform root, Transform child, Vector3[] local)$/;"	m	class:NGUISnap	file:
Add	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public void Add (T item) { mList.Add(item); }$/;"	m	class:BetterList
Add	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public void Add (List<EventDelegate> list, Callback callback) { Add(list, callback, false); }$/;"	m	class:EventDelegate
Add	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public void Add (List<EventDelegate> list, Callback callback, bool oneShot)$/;"	m	class:EventDelegate
Add	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public void Add (List<EventDelegate> list, EventDelegate ev) { Add(list, ev, ev.oneShot); }$/;"	m	class:EventDelegate
Add	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public void Add (List<EventDelegate> list, EventDelegate ev, bool oneShot)$/;"	m	class:EventDelegate
Add	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected void Add (string text, bool updateVisible)$/;"	m	class:UITextList
Add	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public void Add (string text) { Add(text, true); }$/;"	m	class:UITextList
Add10	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add10 () { AddIfMissing<UIKeyBinding>(); }$/;"	m	class:NGUIMenu
Add10a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add10a () { AddIfMissing<UIKeyNavigation>(); }$/;"	m	class:NGUIMenu
Add11	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add11 () { AddIfMissing<UIPlayTween>(); }$/;"	m	class:NGUIMenu
Add12	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add12 () { AddIfMissing<UIPlayAnimation>(); }$/;"	m	class:NGUIMenu
Add13	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add13 () { AddIfMissing<UIPlaySound>(); }$/;"	m	class:NGUIMenu
Add14	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add14 () { AddIfMissing<UILocalize>(); }$/;"	m	class:NGUIMenu
Add2DSprite	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public UI2DSprite Add2DSprite (GameObject go)$/;"	m	class:NGUISettings
Add3	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add3 () { AddIfMissing<UIButton>(); }$/;"	m	class:NGUIMenu
Add4	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add4 () { AddIfMissing<UIToggle>(); }$/;"	m	class:NGUIMenu
Add5	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add5 () { AddIfMissing<UISlider>(); }$/;"	m	class:NGUIMenu
Add6	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add6 () { AddIfMissing<UIScrollBar>(); }$/;"	m	class:NGUIMenu
Add7	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add7 () { AddIfMissing<UIProgressBar>(); }$/;"	m	class:NGUIMenu
Add8	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add8 () { AddIfMissing<UIPopupList>(); }$/;"	m	class:NGUIMenu
Add9	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Add9 () { AddIfMissing<UIInput>(); }$/;"	m	class:NGUIMenu
AddAnchor2	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void AddAnchor2 () { Add<UIAnchor>(); }$/;"	m	class:NGUIMenu	file:
AddBorder	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Color32[] AddBorder (Color32[] colors, int width, int height)$/;"	m	class:NGUIEditorTools
AddBreaker123	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void AddBreaker123 () {}$/;"	m	class:NGUIMenu	file:
AddCSV	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static void AddCSV (BetterList<string> values)$/;"	m	class:Localization	file:
AddChild	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void AddChild (object obj)$/;"	m	class:NGUIContextMenu
AddChild	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public GameObject AddChild (GameObject parent) { return AddChild(parent, true); }$/;"	m	class:NGUITools
AddChild	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public GameObject AddChild (GameObject parent, GameObject prefab)$/;"	m	class:NGUITools
AddChild	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public GameObject AddChild (GameObject parent, bool undo)$/;"	m	class:NGUITools
AddChildWidget	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void AddChildWidget (string item, bool isChecked, AddFunc callback)$/;"	m	class:NGUIContextMenu
AddClampedBorder	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void AddClampedBorder (UISpriteData sprite)$/;"	m	class:UIAtlasInspector	file:
AddCollider	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void AddCollider ()$/;"	m	class:NGUIMenu
AddCommonItems	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void AddCommonItems (GameObject target)$/;"	m	class:NGUIContextMenu
AddDepth	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void AddDepth (Color32[] colors, int width, int height, Color shadow)$/;"	m	class:NGUIEditorTools
AddDisabledItem	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void AddDisabledItem (string item)$/;"	m	class:NGUIContextMenu
AddFunc	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	public delegate UIWidget AddFunc (GameObject go);$/;"	m	class:NGUIContextMenu
AddGrid	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void AddGrid () { Add<UIGrid>(); }$/;"	m	class:NGUIMenu	file:
AddHelp	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void AddHelp (GameObject go, bool addSeparator)$/;"	m	class:NGUIContextMenu
AddItem	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void AddItem (string item, bool isChecked, GenericMenu.MenuFunction2 callback, object param)$/;"	m	class:NGUIContextMenu
AddLabel	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void AddLabel ()$/;"	m	class:NGUIMenu
AddLabel	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public UILabel AddLabel (GameObject go)$/;"	m	class:NGUISettings
AddListener	Assets/Addons/Messenger/Messenger.cs	/^        static public void AddListener(string eventType, Callback handler) {$/;"	m	class:Messenger
AddListener	Assets/Addons/Messenger/Messenger.cs	/^        static public void AddListener(string eventType, Callback<T, U, V> handler) {$/;"	m	class:Messenger
AddListener	Assets/Addons/Messenger/Messenger.cs	/^        static public void AddListener(string eventType, Callback<T, U> handler) {$/;"	m	class:Messenger
AddListener	Assets/Addons/Messenger/Messenger.cs	/^        static public void AddListener(string eventType, Callback<T> handler) {$/;"	m	class:Messenger
AddOnFinished	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void AddOnFinished (EventDelegate del) { EventDelegate.Add(onFinished, del); }$/;"	m	class:UITweener
AddOnFinished	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void AddOnFinished (EventDelegate.Callback del) { EventDelegate.Add(onFinished, del); }$/;"	m	class:UITweener
AddOrUpdate	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public void AddOrUpdate (UIAtlas atlas, SpriteEntry se)$/;"	m	class:UIAtlasMaker
AddOrUpdate	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public void AddOrUpdate (UIAtlas atlas, Texture2D tex)$/;"	m	class:UIAtlasMaker
AddOutline	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void AddOutline (UISpriteData sprite)$/;"	m	class:UIAtlasInspector	file:
AddPanel	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void AddPanel (object obj)$/;"	m	class:NGUIContextMenu	file:
AddPanel	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void AddPanel ()$/;"	m	class:NGUIMenu	file:
AddPanel	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public UIPanel AddPanel (GameObject go)$/;"	m	class:NGUISettings
AddScrollView	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void AddScrollView (object obj)$/;"	m	class:NGUIContextMenu	file:
AddScrollView	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void AddScrollView ()$/;"	m	class:NGUIMenu	file:
AddSeparator	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void AddSeparator (string path)$/;"	m	class:NGUIContextMenu
AddShadow	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void AddShadow (Color32[] colors, int width, int height, Color shadow)$/;"	m	class:NGUIEditorTools
AddShadow	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void AddShadow (UISpriteData sprite)$/;"	m	class:UIAtlasInspector	file:
AddSibling	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void AddSibling (object obj)$/;"	m	class:NGUIContextMenu
AddSiblingWidget	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void AddSiblingWidget (string item, bool isChecked, AddFunc callback)$/;"	m	class:NGUIContextMenu
AddSprite	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void AddSprite ()$/;"	m	class:NGUIMenu
AddSprite	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public UISprite AddSprite (GameObject go)$/;"	m	class:NGUISettings
AddSprite	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public UISpriteData AddSprite (List<UISpriteData> sprites, SpriteEntry se)$/;"	m	class:UIAtlasMaker
AddSprite	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public UISprite AddSprite (GameObject go, UIAtlas atlas, string spriteName)$/;"	m	class:NGUITools
AddSprite2D	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void AddSprite2D ()$/;"	m	class:NGUIMenu
AddSymbol	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public void AddSymbol (string sequence, string spriteName)$/;"	m	class:UIFont
AddTable	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void AddTable () { Add<UITable>(); }$/;"	m	class:NGUIMenu	file:
AddTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void AddTexture ()$/;"	m	class:NGUIMenu
AddTexture	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public UITexture AddTexture (GameObject go)$/;"	m	class:NGUISettings
AddTiledBorder	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void AddTiledBorder (UISpriteData sprite)$/;"	m	class:UIAtlasInspector	file:
AddTransparentBorder	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void AddTransparentBorder (UISpriteData sprite)$/;"	m	class:UIAtlasInspector	file:
AddWidget	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void AddWidget ()$/;"	m	class:NGUIMenu
AddWidget	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public UIWidget AddWidget (GameObject go)$/;"	m	class:NGUISettings
AddWidget	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public void AddWidget (UIWidget w)$/;"	m	class:UIPanel
AddWidgetCollider	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public BoxCollider AddWidgetCollider (GameObject go) { return AddWidgetCollider(go, false); }$/;"	m	class:NGUITools
AddWidgetCollider	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public BoxCollider AddWidgetCollider (GameObject go, bool considerInactive)$/;"	m	class:NGUITools
Added	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Added,$/;"	e	enum:InvStat.Modifier	file:
AdjustByDPI	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public int AdjustByDPI (float height)$/;"	m	class:NGUIMath
AdjustClipping	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	void AdjustClipping (UIPanel p, Vector3 startLocalPos, Vector4 startCR, Vector3 worldDelta, UIWidget.Pivot pivot)$/;"	m	class:UIPanelInspector	file:
AdjustClipping	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	void AdjustClipping (UIPanel p, Vector4 cr, int left, int top, int right, int bottom)$/;"	m	class:UIPanelInspector	file:
AdjustDepth	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public int AdjustDepth (GameObject go, int adjustment)$/;"	m	class:NGUITools
AdjustWidget	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public void AdjustWidget (UIWidget w, float left, float bottom, float right, float top)$/;"	m	class:NGUIMath
AdjustWidget	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public void AdjustWidget (UIWidget w, float left, float bottom, float right, float top, int minWidth, int minHeight)$/;"	m	class:NGUIMath
AdjustWidget	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public void AdjustWidget (UIWidget w, float left, float bottom, float right, float top,$/;"	m	class:NGUIMath
AdvanceTowardsPosition	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	protected virtual void AdvanceTowardsPosition ()$/;"	m	class:SpringPanel
Advanced	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^		Advanced,$/;"	e	enum:UIRectEditor.AnchorType	file:
Advanced	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Advanced,$/;"	e	enum:UISprite.Type	file:
Advanced3D	Assets/Addons/NGUI/Scripts/Editor/UICreateNewUIWizard.cs	/^		Advanced3D,$/;"	e	enum:UICreateNewUIWizard.CameraType	file:
AdvancedFill	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected void AdvancedFill (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:UISprite
AdvancedType	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public enum AdvancedType$/;"	g	class:UISprite
Affects	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool Affects (UIWidget w)$/;"	m	class:UIPanel
Agility	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Agility,$/;"	e	enum:InvStat.Identifier	file:
Align	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public void Align (BetterList<Vector3> verts, int indexOffset, float printedWidth)$/;"	m	class:NGUIText
Alignment	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	public enum Alignment$/;"	g	class:NGUIText
All	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^		All = 7,$/;"	e	enum:NGUITransformInspector.Axes	file:
AllPanels	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^		AllPanels,$/;"	e	enum:UIDrawCallViewer.ShowFilter	file:
AlphaCurve	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		AlphaCurve,$/;"	e	enum:UIFontInspector.Effect	file:
Alphabetic	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^		Alphabetic,$/;"	e	enum:UIGrid.Sorting	file:
Alphabetic	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^		Alphabetic,$/;"	e	enum:UITable.Sorting	file:
Alphanumeric	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		Alphanumeric,$/;"	e	enum:UIInput.Validation	file:
Alt	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^		Alt,$/;"	e	enum:UIKeyBinding.Modifier	file:
Always	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		Always,$/;"	e	enum:UIScrollView.ShowCondition	file:
Always	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		Always,$/;"	e	enum:UICamera.ClickNotification	file:
Always	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		Always,$/;"	e	enum:UILabel.Crispness	file:
AnchorPoint	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public AnchorPoint () { }$/;"	m	class:UIRect.AnchorPoint
AnchorPoint	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public AnchorPoint (float relative) { this.relative = relative; }$/;"	m	class:UIRect.AnchorPoint
AnchorPoint	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public class AnchorPoint$/;"	c	class:UIRect
AnchorType	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected enum AnchorType$/;"	g	class:UIRectEditor
AnchorUpdate	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public enum AnchorUpdate$/;"	g	class:UIRect
Animate	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void Animate (UIWidget widget, bool placeAbove, float bottom)$/;"	m	class:UIPopupList	file:
AnimateColor	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void AnimateColor (UIWidget widget)$/;"	m	class:UIPopupList	file:
AnimatePosition	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void AnimatePosition (UIWidget widget, bool placeAbove, float bottom)$/;"	m	class:UIPopupList	file:
AnimateScale	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void AnimateScale (UIWidget widget, bool placeAbove, float bottom)$/;"	m	class:UIPopupList	file:
AnimatedAlpha	Assets/Addons/NGUI/Scripts/Tweening/AnimatedAlpha.cs	/^public class AnimatedAlpha : MonoBehaviour$/;"	c
AnimatedColor	Assets/Addons/NGUI/Scripts/Tweening/AnimatedColor.cs	/^public class AnimatedColor : MonoBehaviour$/;"	c
AnimationOrTween	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^namespace AnimationOrTween$/;"	n
ApplyDelta	Assets/Addons/NGUI/Examples/Scripts/Other/Spin.cs	/^	public void ApplyDelta (float delta)$/;"	m	class:Spin
ApplyEffect	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	void ApplyEffect (Effect effect, Color foreground, Color background)$/;"	m	class:UIFontInspector	file:
ApplyOffset	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	protected Vector2 ApplyOffset (BetterList<Vector3> verts, int start)$/;"	m	class:UILabel
ApplyPMA	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Color ApplyPMA (Color c)$/;"	m	class:NGUITools
ApplyShadow	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	void ApplyShadow (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols, int start, int end, float x, float y)$/;"	m	class:UILabel	file:
ApplyTransform	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	public void ApplyTransform (Matrix4x4 widgetToPanel)$/;"	m	class:UIGeometry
Armor	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Armor,$/;"	e	enum:InvStat.Identifier	file:
Arrangement	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public enum Arrangement$/;"	g	class:UIGrid
Ascii	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		Ascii,		\/\/ Character IDs 32 through 127$/;"	e	enum:UIFontMaker.CharacterMap	file:
AspectRatioSource	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public enum AspectRatioSource$/;"	g	class:UIWidget
AssetEntry	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	class AssetEntry$/;"	c	class:NGUISelectionTools
AssumeNaturalSize	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public void AssumeNaturalSize ()$/;"	m	class:UILabel
Atlas	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Atlas,$/;"	e	enum:UIFontInspector.View	file:
AtlasType	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	enum AtlasType$/;"	g	class:UIAtlasInspector
Attach	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvAttachmentPoint.cs	/^	public GameObject Attach (GameObject prefab)$/;"	m	class:InvAttachmentPoint
Attach	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void Attach (object obj)$/;"	m	class:NGUIContextMenu	file:
AttachCollider	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void AttachCollider (object obj)$/;"	m	class:NGUIContextMenu	file:
Auto	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^		Auto,$/;"	e	enum:UIPopupList.Position	file:
AutoCorrect	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		AutoCorrect,$/;"	e	enum:UIInput.InputType	file:
Automatic	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		Automatic,$/;"	e	enum:NGUIText.Alignment	file:
Automatic	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^		Automatic,$/;"	e	enum:UIPanel.RenderQueue	file:
Awake	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	void Awake () { instance = this; }$/;"	m	class:UICursor	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	void Awake () { if (!mInitDone) OnInit(); }$/;"	m	class:UIButtonColor	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UIDragCamera.cs	/^	void Awake ()$/;"	m	class:UIDragCamera	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	void Awake ()$/;"	m	class:UIDraggableCamera	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void Awake ()$/;"	m	class:UIPlayAnimation	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void Awake ()$/;"	m	class:UIPlayTween	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^	void Awake ()$/;"	m	class:UISavedOption	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	void Awake ()$/;"	m	class:UIScrollView	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UISoundVolume.cs	/^	void Awake ()$/;"	m	class:UISoundVolume	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UIToggledComponents.cs	/^	void Awake ()$/;"	m	class:UIToggledComponents	file:
Awake	Assets/Addons/NGUI/Scripts/Interaction/UIToggledObjects.cs	/^	void Awake ()$/;"	m	class:UIToggledObjects	file:
Awake	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	void Awake ()$/;"	m	class:Localization	file:
Awake	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected virtual void Awake ()$/;"	m	class:UIWidget
Awake	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	void Awake () { mRect = GetComponent<UIRect>(); }$/;"	m	class:TweenPosition	file:
Awake	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	void Awake ()$/;"	m	class:UIAnchor	file:
Awake	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void Awake ()$/;"	m	class:UICamera	file:
Awake	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	void Awake ()$/;"	m	class:UIPanel	file:
Awake	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	protected virtual void Awake () { mTrans = transform; }$/;"	m	class:UIRoot
Awake	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	void Awake ()$/;"	m	class:UIStretch	file:
Awake	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	void Awake () { mInstance = this; }$/;"	m	class:UITooltip	file:
Awake	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	void Awake()$/;"	m	class:retinaProAtlasController	file:
Awake	Assets/Addons/RetinaPro/retinaProUtil.cs	/^	void Awake()$/;"	m	class:retinaProUtil	file:
Awake	Assets/Scripts/Controllers/ClientController.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Controllers.ClientController
Awake	Assets/Scripts/Controllers/ClientsController.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Controllers.ClientsController
Awake	Assets/Scripts/Controllers/MoneyController.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Controllers.MoneyController
Awake	Assets/Scripts/Controllers/PlayGridController.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Controllers.PlayGridController
Awake	Assets/Scripts/Controllers/SourceRowController.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Controllers.SourceRowController
Awake	Assets/Scripts/Controllers/TargetController.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Controllers.TargetController
Awake	Assets/Scripts/Controllers/TargetsController.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Controllers.TargetsController
Awake	Assets/Scripts/Controllers/TelegramController.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Controllers.TelegramController
Awake	Assets/Scripts/Controllers/TelegramMachineController.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Controllers.TelegramMachineController
Awake	Assets/Scripts/GameModel.cs	/^        public void Awake() {$/;"	m	class:Shanghai.GameModel
Awake	Assets/Scripts/Path/PathDrawer.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Path.PathDrawer
Awake	Assets/Scripts/Shanghai.cs	/^        public void Awake() {$/;"	m	class:Shanghai.Shanghai
Awake	Assets/Scripts/ShanghaiConfig.cs	/^        public void Awake() {$/;"	m	class:Shanghai.ShanghaiConfig
Axes	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	enum Axes : int$/;"	g	class:NGUITransformInspector
BMFont	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^public class BMFont$/;"	c
BMFontReader	Assets/Addons/NGUI/Scripts/Editor/BMFontReader.cs	/^public static class BMFontReader$/;"	c
BMGlyph	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^public class BMGlyph$/;"	c
BMSymbol	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^public class BMSymbol$/;"	c
BOTTOM	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
BUILDER_CAPACITY	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int BUILDER_CAPACITY = 2000;$/;"	f	class:NGUIJson	file:
BackgroundCurve	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		BackgroundCurve,$/;"	e	enum:UIFontInspector.Effect	file:
BackgroundSprite	Assets/Scripts/Controllers/ClientController.cs	/^        public UISprite BackgroundSprite;$/;"	f	class:Shanghai.Controllers.ClientController
BackgroundSprite	Assets/Scripts/Controllers/TargetController.cs	/^        public UISprite BackgroundSprite;$/;"	f	class:Shanghai.Controllers.TargetController
BackgroundSprite	Assets/Scripts/Controllers/TelegramController.cs	/^        public UISprite BackgroundSprite;$/;"	f	class:Shanghai.Controllers.TelegramController
BasedOnDelta	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		BasedOnDelta,$/;"	e	enum:UICamera.ClickNotification	file:
BasedOnHeight	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		BasedOnHeight,$/;"	e	enum:UIWidget.AspectRatioSource	file:
BasedOnHeight	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^		BasedOnHeight,$/;"	e	enum:UIStretch.Style	file:
BasedOnWidth	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		BasedOnWidth,$/;"	e	enum:UIWidget.AspectRatioSource	file:
BeautifyString	Assets/Scripts/ShanghaiUtils.cs	/^        public static string BeautifyString(string str) {$/;"	m	class:Shanghai.ShanghaiUtils
Begin	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	static public SpringPanel Begin (GameObject go, Vector3 pos, float strength)$/;"	m	class:SpringPanel
Begin	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	static public SpringPosition Begin (GameObject go, Vector3 pos, float strength)$/;"	m	class:SpringPosition
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	static public TweenAlpha Begin (GameObject go, float duration, float alpha)$/;"	m	class:TweenAlpha
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	static public TweenColor Begin (GameObject go, float duration, Color color)$/;"	m	class:TweenColor
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	static public TweenFOV Begin (GameObject go, float duration, float to)$/;"	m	class:TweenFOV
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	static public TweenHeight Begin (UIWidget widget, float duration, int height)$/;"	m	class:TweenHeight
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	static public TweenOrthoSize Begin (GameObject go, float duration, float to)$/;"	m	class:TweenOrthoSize
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	static public TweenPosition Begin (GameObject go, float duration, Vector3 pos)$/;"	m	class:TweenPosition
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	static public TweenRotation Begin (GameObject go, float duration, Quaternion rot)$/;"	m	class:TweenRotation
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	static public TweenScale Begin (GameObject go, float duration, Vector3 scale)$/;"	m	class:TweenScale
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	static public TweenTransform Begin (GameObject go, float duration, Transform from, Transform to)$/;"	m	class:TweenTransform
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	static public TweenTransform Begin (GameObject go, float duration, Transform to) { return Begin(go, duration, null, to); }$/;"	m	class:TweenTransform
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	static public TweenVolume Begin (GameObject go, float duration, float targetVolume)$/;"	m	class:TweenVolume
Begin	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	static public TweenWidth Begin (UIWidget widget, float duration, int width)$/;"	m	class:TweenWidth
BeginContents	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void BeginContents ()$/;"	m	class:NGUIEditorTools
Below	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^		Below,$/;"	e	enum:UIPopupList.Position	file:
BetterList	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^public class BetterList<T>$/;"	c
BiDirectional	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^		BiDirectional,$/;"	e	enum:PropertyBinding.Direction	file:
Bitmap	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Bitmap,$/;"	e	enum:UIFontInspector.FontType	file:
Bitmap	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		Bitmap,		\/\/ Bitmap font, created from a dynamic font using FreeType$/;"	e	enum:UIFontMaker.Create	file:
Bitmap	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^		Bitmap,$/;"	e	enum:UIPopupListInspector.FontType	file:
Blue	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^		Blue,$/;"	e	enum:NGUISettings.ColorMode	file:
Body	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^		Body,$/;"	e	enum:InvBaseItem.Slot	file:
BoolDelegate	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public delegate void BoolDelegate (GameObject go, bool state);$/;"	m	class:UIEventListener
Boots	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^		Boots,$/;"	e	enum:InvBaseItem.Slot	file:
Border	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Border,$/;"	e	enum:UIFontInspector.Effect	file:
Both	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Both,$/;"	e	enum:UISprite.Flip	file:
Both	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^		Both,$/;"	e	enum:UIStretch.Style	file:
Bottom	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		Bottom,$/;"	e	enum:UIWidget.Pivot	file:
Bottom	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^		Bottom,$/;"	e	enum:UIAnchor.Side	file:
BottomLeft	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		BottomLeft,$/;"	e	enum:UIWidget.Pivot	file:
BottomLeft	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^		BottomLeft,$/;"	e	enum:UIAnchor.Side	file:
BottomRight	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		BottomRight,$/;"	e	enum:UIWidget.Pivot	file:
BottomRight	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^		BottomRight,$/;"	e	enum:UIAnchor.Side	file:
BottomToTop	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^		BottomToTop,$/;"	e	enum:UIProgressBar.FillDirection	file:
BounceIn	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^		BounceIn,$/;"	e	enum:UITweener.Method	file:
BounceLogic	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	float BounceLogic (float val)$/;"	m	class:UITweener	file:
BounceOut	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^		BounceOut,$/;"	e	enum:UITweener.Method	file:
Bounty	Assets/Scripts/Grid/PlayableCell.cs	/^        public int Bounty = 0;$/;"	f	class:Shanghai.Grid.PlayableCell
Bounty	Assets/Scripts/Grid/Source.cs	/^        public int Bounty = 0;$/;"	f	class:Shanghai.Grid.Source
BountyDeviance	Assets/Scripts/ShanghaiConfig.cs	/^        public int BountyDeviance = 1000;$/;"	f	class:Shanghai.ShanghaiConfig
BountyLabel	Assets/Scripts/Controllers/CellController.cs	/^        public UILabel BountyLabel;$/;"	f	class:Shanghai.Controllers.CellController
BountyLabel	Assets/Scripts/Controllers/SourceController.cs	/^        public UILabel BountyLabel;$/;"	f	class:Shanghai.Controllers.SourceController
BountyLabel	Assets/Scripts/Controllers/TelegramController.cs	/^        public UILabel BountyLabel;$/;"	f	class:Shanghai.Controllers.TelegramController
BountyMedium	Assets/Scripts/ShanghaiConfig.cs	/^        public int BountyMedium = 1000;$/;"	f	class:Shanghai.ShanghaiConfig
Bracers	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^		Bracers,$/;"	e	enum:InvBaseItem.Slot	file:
Breaker	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Breaker () { }$/;"	m	class:NGUIMenu	file:
BringForward	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void BringForward ()$/;"	m	class:NGUIMenu
BringForward	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void BringForward (GameObject go)$/;"	m	class:NGUITools
BringForward2	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void BringForward2 ()$/;"	m	class:NGUIMenu
BringForward2Validation	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool BringForward2Validation () { return (Selection.activeGameObject != null); }$/;"	m	class:NGUIMenu
BringForwardValidation	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool BringForwardValidation () { return (Selection.activeGameObject != null); }$/;"	m	class:NGUIMenu
Broadcast	Assets/Addons/Messenger/Messenger.cs	/^        static public void Broadcast(string eventType) {$/;"	m	class:Messenger
Broadcast	Assets/Addons/Messenger/Messenger.cs	/^        static public void Broadcast(string eventType, MessengerMode mode) {$/;"	m	class:Messenger
Broadcast	Assets/Addons/Messenger/Messenger.cs	/^        static public void Broadcast(string eventType, T arg1) {$/;"	m	class:Messenger
Broadcast	Assets/Addons/Messenger/Messenger.cs	/^        static public void Broadcast(string eventType, T arg1, MessengerMode mode) {$/;"	m	class:Messenger
Broadcast	Assets/Addons/Messenger/Messenger.cs	/^        static public void Broadcast(string eventType, T arg1, U arg2) {$/;"	m	class:Messenger
Broadcast	Assets/Addons/Messenger/Messenger.cs	/^        static public void Broadcast(string eventType, T arg1, U arg2, MessengerMode mode) {$/;"	m	class:Messenger
Broadcast	Assets/Addons/Messenger/Messenger.cs	/^        static public void Broadcast(string eventType, T arg1, U arg2, V arg3) {$/;"	m	class:Messenger
Broadcast	Assets/Addons/Messenger/Messenger.cs	/^        static public void Broadcast(string eventType, T arg1, U arg2, V arg3, MessengerMode mode) {$/;"	m	class:Messenger
Broadcast	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void Broadcast (string funcName)$/;"	m	class:NGUITools
Broadcast	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void Broadcast (string funcName, object param)$/;"	m	class:NGUITools
Broadcast	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	static public void Broadcast (string funcName)$/;"	m	class:UIRoot
Broadcast	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	static public void Broadcast (string funcName, object param)$/;"	m	class:UIRoot
BroadcastException	Assets/Addons/Messenger/Messenger.cs	/^                public BroadcastException(string msg)$/;"	m	class:MessengerInternal.BroadcastException
BroadcastException	Assets/Addons/Messenger/Messenger.cs	/^        public class BroadcastException : Exception {$/;"	c	class:MessengerInternal
Broken	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Broken,$/;"	e	enum:InvGameItem.Quality	file:
Button	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		Button,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
ByteReader	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	public ByteReader (TextAsset asset) { mBuffer = asset.bytes; }$/;"	m	class:ByteReader
ByteReader	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	public ByteReader (byte[] bytes) { mBuffer = bytes; }$/;"	m	class:ByteReader
ByteReader	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^public class ByteReader$/;"	c
CELL_NAME_FORMAT	Assets/Scripts/Controllers/PlayGridController.cs	/^        public const string CELL_NAME_FORMAT = "y{0}_x{1}";$/;"	f	class:Shanghai.Controllers.PlayGridController
CELL_PATH	Assets/Scripts/Controllers/PlayGridController.cs	/^        public static readonly string CELL_PATH = "prefabs\/cell";$/;"	f	class:Shanghai.Controllers.PlayGridController
CLIENT_PATH	Assets/Scripts/Controllers/ClientsController.cs	/^        public static readonly string CLIENT_PATH = "prefabs\/client";$/;"	f	class:Shanghai.Controllers.ClientsController
CLIENT_PREFIX	Assets/Scripts/Controllers/CellController.cs	/^        public static readonly string CLIENT_PREFIX = "mission";$/;"	f	class:Shanghai.Controllers.CellController
CLIENT_PREFIX	Assets/Scripts/Controllers/ClientController.cs	/^        public static readonly string CLIENT_PREFIX = "embassy";$/;"	f	class:Shanghai.Controllers.ClientController
Cache	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	void Cache ()$/;"	m	class:EventDelegate	file:
Cache	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	bool Cache ()$/;"	m	class:PropertyReference	file:
Cache	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	void Cache ()$/;"	m	class:TweenColor	file:
CacheScrollView	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	protected bool CacheScrollView ()$/;"	m	class:UIWrapContent
CalculateAbsoluteWidgetBounds	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Bounds CalculateAbsoluteWidgetBounds (Transform trans)$/;"	m	class:NGUIMath
CalculateBounds	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public Bounds CalculateBounds () { return CalculateBounds(null); }$/;"	m	class:UIWidget
CalculateBounds	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public Bounds CalculateBounds (Transform relativeParent)$/;"	m	class:UIWidget
CalculateConstrainOffset	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	Vector3 CalculateConstrainOffset ()$/;"	m	class:UIDraggableCamera	file:
CalculateConstrainOffset	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public virtual Vector3 CalculateConstrainOffset (Vector2 min, Vector2 max)$/;"	m	class:UIPanel
CalculateCumulativeAlpha	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public float CalculateCumulativeAlpha (int frameID)$/;"	m	class:UIWidget
CalculateFinalAlpha	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public abstract float CalculateFinalAlpha (int frameID);$/;"	m	class:UIRect
CalculateFinalAlpha	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public override float CalculateFinalAlpha (int frameID)$/;"	m	class:UIWidget
CalculateFinalAlpha	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public override float CalculateFinalAlpha (int frameID)$/;"	m	class:UIPanel
CalculateNextDepth	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public int CalculateNextDepth (GameObject go)$/;"	m	class:NGUITools
CalculateNextDepth	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public int CalculateNextDepth (GameObject go, bool ignoreChildrenWithColliders)$/;"	m	class:NGUITools
CalculateOffsetToFit	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public int CalculateOffsetToFit (string text)$/;"	m	class:NGUIText
CalculateOffsetToFit	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int CalculateOffsetToFit (string text)$/;"	m	class:UILabel
CalculatePrintedSize	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public Vector2 CalculatePrintedSize (string text)$/;"	m	class:NGUIText
CalculateRaycastDepth	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public int CalculateRaycastDepth (GameObject go)$/;"	m	class:NGUITools
CalculateRelativeWidgetBounds	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Bounds CalculateRelativeWidgetBounds (Transform relativeTo, Transform content)$/;"	m	class:NGUIMath
CalculateRelativeWidgetBounds	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Bounds CalculateRelativeWidgetBounds (Transform relativeTo, Transform content, bool considerInactive)$/;"	m	class:NGUIMath
CalculateRelativeWidgetBounds	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Bounds CalculateRelativeWidgetBounds (Transform trans)$/;"	m	class:NGUIMath
CalculateRelativeWidgetBounds	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Bounds CalculateRelativeWidgetBounds (Transform trans, bool considerInactive)$/;"	m	class:NGUIMath
CalculateStats	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public List<InvStat> CalculateStats ()$/;"	m	class:InvGameItem
CallCreatePanel	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static void CallCreatePanel (Transform t)$/;"	m	class:NGUITools	file:
Callback	Assets/Addons/Messenger/Callback.cs	/^public delegate void Callback();$/;"	m
Callback	Assets/Addons/Messenger/Callback.cs	/^public delegate void Callback<T, U, V>(T arg1, U arg2, V arg3);$/;"	m
Callback	Assets/Addons/Messenger/Callback.cs	/^public delegate void Callback<T, U>(T arg1, U arg2);$/;"	m
Callback	Assets/Addons/Messenger/Callback.cs	/^public delegate void Callback<T>(T arg1);$/;"	m
Callback	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	public delegate void Callback (string sprite);$/;"	m	class:SpriteSelector
Callback	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public delegate void Callback();$/;"	m	class:EventDelegate
CameraType	Assets/Addons/NGUI/Scripts/Editor/UICreateNewUIWizard.cs	/^	public enum CameraType$/;"	g	class:UICreateNewUIWizard
CanDraw	Assets/Scripts/GameModel.cs	/^        public bool CanDraw {$/;"	p	class:Shanghai.GameModel
CancelMovement	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public void CancelMovement ()$/;"	m	class:UIDragObject
CancelSpring	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public void CancelSpring ()$/;"	m	class:UIDragObject
CellController	Assets/Scripts/Controllers/CellController.cs	/^    public class CellController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
CellFillPerSecond	Assets/Scripts/ShanghaiConfig.cs	/^        public float CellFillPerSecond = 0.5f; \/\/the amount a cell is filled per second (1 is full)$/;"	f	class:Shanghai.ShanghaiConfig
CellInPath	Assets/Scripts/Grid/Grid.cs	/^        private bool CellInPath(IntVect2 key, List<IntVect2> path) {$/;"	m	class:Shanghai.Grid.Grid	file:
CellIsConnected	Assets/Scripts/Grid/Grid.cs	/^        private bool CellIsConnected(IntVect2 key, List<IntVect2> path) {$/;"	m	class:Shanghai.Grid.Grid	file:
CellKey	Assets/Scripts/Grid/Mission.cs	/^        public IntVect2 CellKey;$/;"	f	class:Shanghai.Grid.Mission
CellProgressed	Assets/Scripts/Grid/Grid.cs	/^        public void CellProgressed(IntVect2 cellKey, float progress) {$/;"	m	class:Shanghai.Grid.Grid
Cells	Assets/Scripts/Grid/Grid.cs	/^        public List<List<PlayableCell>> Cells {$/;"	p	class:Shanghai.Grid.Grid
Center	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		Center,$/;"	e	enum:NGUIText.Alignment	file:
Center	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		Center,$/;"	e	enum:UIWidget.Pivot	file:
Center	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^		Center,$/;"	e	enum:UIAnchor.Side	file:
CenterOn	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	public void CenterOn (Transform target)$/;"	m	class:UICenterOnChild
CenterOn	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	void CenterOn (Transform target, Vector3 panelCenter)$/;"	m	class:UICenterOnChild	file:
ChanceCells	Assets/Scripts/Grid/ChanceCell.cs	/^        public ChanceCells(IntVect2 key) : base(key) {$/;"	m	class:Shanghai.Grid.ChanceCells
ChanceCells	Assets/Scripts/Grid/ChanceCell.cs	/^    public class ChanceCells : GridCell {$/;"	c	namespace:Shanghai.Grid
ChangeSelection	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	System.Collections.IEnumerator ChangeSelection ()$/;"	m	class:UICamera	file:
ChangeSymbolSprite	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	void ChangeSymbolSprite (string spriteName)$/;"	m	class:UIFontInspector	file:
CharacterMap	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	enum CharacterMap$/;"	g	class:UIFontMaker
Chat	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^		Chat,$/;"	e	enum:UITextList.Style	file:
ChatInput	Assets/Addons/NGUI/Examples/Scripts/Other/ChatInput.cs	/^public class ChatInput : MonoBehaviour$/;"	c
CheckDifference	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	Axes CheckDifference (SerializedProperty property)$/;"	m	class:NGUITransformInspector	file:
CheckDifference	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	Axes CheckDifference (Transform t, Vector3 original)$/;"	m	class:NGUITransformInspector	file:
CheckForEndGame	Assets/Scripts/Shanghai.cs	/^        public void CheckForEndGame() {$/;"	m	class:Shanghai.Shanghai
CheckIfRelated	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	static public bool CheckIfRelated (UIAtlas a, UIAtlas b)$/;"	m	class:UIAtlas
CheckIfRelated	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	static public bool CheckIfRelated (UIFont a, UIFont b)$/;"	m	class:UIFont
CheckLayer	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public void CheckLayer ()$/;"	m	class:UIWidget
CheckPrevCellPositions	Assets/Scripts/Grid/Grid.cs	/^        private bool CheckPrevCellPositions(IntVect2 key, List<IntVect2> path) {$/;"	m	class:Shanghai.Grid.Grid	file:
ChooseBest	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static void ChooseBest (ref Vector2 best, Vector3 diff)$/;"	m	class:NGUISnap	file:
ClampContent	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		ClampContent,$/;"	e	enum:UILabel.Overflow	file:
ClampIndex	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public int ClampIndex (int val, int max) { return (val < 0) ? 0 : (val < max ? val : max - 1); }$/;"	m	class:NGUIMath
Cleanup	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected virtual void Cleanup ()$/;"	m	class:UIInput
Clear	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	static public void Clear ()$/;"	m	class:UICursor
Clear	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void Clear ()$/;"	m	class:NGUIContextMenu
Clear	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public void Clear ()$/;"	m	class:BMFont
Clear	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public void Clear () { mList.Clear(); }$/;"	m	class:BetterList
Clear	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public void Clear ()$/;"	m	class:EventDelegate
Clear	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public void Clear ()$/;"	m	class:PropertyReference
Clear	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	public void Clear ()$/;"	m	class:UIGeometry
Clear	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public void Clear ()$/;"	m	class:UITextList
ClearAll	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static public void ClearAll ()$/;"	m	class:UIDrawCall
ClearLocalTransform	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static void ClearLocalTransform()$/;"	m	class:NGUISelectionTools	file:
ClickNotification	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public enum ClickNotification$/;"	g	class:UICamera
Client	Assets/Scripts/Entities/Client.cs	/^        public Client() {}$/;"	m	class:Shanghai.Entities.Client
Client	Assets/Scripts/Entities/Client.cs	/^        public Client(string key) : base (key) {$/;"	m	class:Shanghai.Entities.Client
Client	Assets/Scripts/Entities/Client.cs	/^    public class Client : Entity {$/;"	c	namespace:Shanghai.Entities
ClientController	Assets/Scripts/Controllers/ClientController.cs	/^    public class ClientController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
ClientID	Assets/Scripts/Grid/Mission.cs	/^        public string ClientID;$/;"	f	class:Shanghai.Grid.Mission
ClientID	Assets/Scripts/Grid/PlayableCell.cs	/^        public string ClientID = "";$/;"	f	class:Shanghai.Grid.PlayableCell
ClientSprite	Assets/Scripts/Controllers/CellController.cs	/^        public UISprite ClientSprite;$/;"	f	class:Shanghai.Controllers.CellController
Clients	Assets/Scripts/GameModel.cs	/^        public Dictionary<string, Client> Clients {$/;"	p	class:Shanghai.GameModel
ClientsController	Assets/Scripts/Controllers/ClientsController.cs	/^    public class ClientsController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
ClientsController	Assets/Scripts/Shanghai.cs	/^        public ClientsController ClientsController;$/;"	f	class:Shanghai.Shanghai
ClipArgs	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static string[] ClipArgs =$/;"	f	class:UIDrawCall	file:
ClipRange	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static string[] ClipRange =$/;"	f	class:UIDrawCall	file:
Clipping	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public enum Clipping : int$/;"	g	class:UIDrawCall
Close	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public void Close ()$/;"	m	class:UIPopupList
ColorMode	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	public enum ColorMode$/;"	g	class:NGUISettings
ColorToInt	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public int ColorToInt (Color c)$/;"	m	class:NGUIMath
Colored	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		Colored,$/;"	e	enum:NGUIText.SymbolStyle	file:
Combine	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static UIWidget.Pivot Combine (UIWidget.Pivot horizontal, UIWidget.Pivot vertical)$/;"	m	class:UIWidgetInspector	file:
CommonIntervalLength	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	int CommonIntervalLength (int i1start, int i1end, int i2start, int i2end)$/;"	m	class:UITexturePacker	file:
Compare	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static int Compare (SpriteEntry a, SpriteEntry b)$/;"	m	class:UIAtlasMaker	file:
Compare	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	static int Compare (Entry a, Entry b)$/;"	m	class:UIPanelTool	file:
CompareArmor	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^	static public int CompareArmor (InvStat a, InvStat b)$/;"	m	class:InvStat
CompareFunc	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static int CompareFunc (UICamera a, UICamera b)$/;"	m	class:UICamera	file:
CompareFunc	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static public int CompareFunc (UIPanel a, UIPanel b)$/;"	m	class:UIPanel
CompareSprites	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	static int CompareSprites (UISpriteData a, UISpriteData b) { return a.name.CompareTo(b.name); }$/;"	m	class:NGUIJson	file:
CompareWeapon	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^	static public int CompareWeapon (InvStat a, InvStat b)$/;"	m	class:InvStat
Component	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public List<T> FindAll<T> () where T : Component$/;"	p	class:NGUIEditorTools
Component	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Exists<T> () where T : Component$/;"	p	class:NGUIMenu
Component	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void AddIfMissing<T> () where T : Component$/;"	p	class:NGUIMenu
Component	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public T AddChild<T> (GameObject parent) where T : Component$/;"	p	class:NGUITools
Component	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public T AddChild<T> (GameObject parent, bool undo) where T : Component$/;"	p	class:NGUITools
Component	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public T AddMissingComponent<T> (this GameObject go) where T : Component$/;"	p	class:NGUITools
Component	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public T FindInParents<T> (GameObject go) where T : Component$/;"	p	class:NGUITools
Component	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public T FindInParents<T> (Transform trans) where T : Component$/;"	p	class:NGUITools
Component	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public T[] FindActive<T> () where T : Component$/;"	p	class:NGUITools
ComponentSelector	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^public class ComponentSelector : ScriptableWizard$/;"	c
Constitution	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Constitution,$/;"	e	enum:InvStat.Identifier	file:
ConstrainButDontClip	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^		ConstrainButDontClip = 4,	\/\/ No actual clipping, but does have an area$/;"	e	enum:UIDrawCall.Clipping	file:
ConstrainRect	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Vector2 ConstrainRect (Vector2 minRect, Vector2 maxRect, Vector2 minArea, Vector2 maxArea)$/;"	m	class:NGUIMath
ConstrainTargetToBounds	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool ConstrainTargetToBounds (Transform target, bool immediate)$/;"	m	class:UIPanel
ConstrainTargetToBounds	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool ConstrainTargetToBounds (Transform target, ref Bounds targetBounds, bool immediate)$/;"	m	class:UIPanel
ConstrainToBounds	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public bool ConstrainToBounds (bool immediate)$/;"	m	class:UIDraggableCamera
Constraint	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	public enum Constraint$/;"	g	class:UIKeyNavigation
ContactPointScoreNode	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	int ContactPointScoreNode (int x, int y, int width, int height)$/;"	m	class:UITexturePacker	file:
Contains	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public bool Contains (T item) { return mList.Contains(item); }$/;"	m	class:BetterList
Continue	Assets/Addons/NGUI/Scripts/Editor/UIPlayAnimationEditor.cs	/^		Continue,$/;"	e	enum:UIPlayAnimationEditor.ResetOnPlay	file:
Continue	Assets/Addons/NGUI/Scripts/Editor/UIPlayTweenEditor.cs	/^		Continue,$/;"	e	enum:UIPlayTweenEditor.ResetOnPlay	file:
Control	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^		Control,$/;"	e	enum:UIKeyBinding.Modifier	file:
ControlScheme	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public enum ControlScheme$/;"	g	class:UICamera
Controller	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		Controller,$/;"	e	enum:UICamera.ControlScheme	file:
Convert	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	bool Convert (ref object value)$/;"	m	class:PropertyReference	file:
Convert	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	static public bool Convert (Type from, Type to)$/;"	m	class:PropertyReference
Convert	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	static public bool Convert (object value, Type to)$/;"	m	class:PropertyReference
Convert	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	static public bool Convert (ref object value, Type from, Type to)$/;"	m	class:PropertyReference
ConvertToPixels	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Rect ConvertToPixels (Rect rect, int width, int height, bool round)$/;"	m	class:NGUIMath
ConvertToTexCoords	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Rect ConvertToTexCoords (Rect rect, int width, int height)$/;"	m	class:NGUIMath
Coordinates	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	enum Coordinates$/;"	g	class:UIAtlas
CopyBorderFrom	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public void CopyBorderFrom (UISpriteData sd)$/;"	m	class:UISpriteData
CopyFrom	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public void CopyFrom (UISpriteData sd)$/;"	m	class:UISpriteData
CopyLabel	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static void CopyLabel (UILabel lbl)$/;"	m	class:NGUISettings	file:
CopySprite	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static void CopySprite (UISprite sp)$/;"	m	class:NGUISettings	file:
CopyStyle	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void CopyStyle (MenuCommand command) { NGUISettings.CopyWidget(command.context as UIWidget); }$/;"	m	class:NGUIContextMenu	file:
CopyWidget	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public void CopyWidget (UIWidget widget)$/;"	m	class:NGUISettings
Count	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static public int Count (UIPanel panel)$/;"	m	class:UIDrawCall
Crafted	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Crafted,$/;"	e	enum:InvGameItem.Quality	file:
Create	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	enum Create$/;"	g	class:UIFontMaker
Create	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static UIDrawCall Create (string name)$/;"	m	class:UIDrawCall	file:
Create	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static UIDrawCall Create (string name, UIPanel pan, Material mat, Texture tex, Shader shader)$/;"	m	class:UIDrawCall	file:
Create	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static public UIDrawCall Create (UIPanel panel, Material mat, Texture tex, Shader shader)$/;"	m	class:UIDrawCall
Create2D	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Create2D () { UICreateNewUIWizard.CreateNewUI(UICreateNewUIWizard.CameraType.Simple2D); }$/;"	m	class:NGUIMenu	file:
Create2Da	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Create2Da () { return UIRoot.list.Count == 0 || UICamera.list.size == 0 || !UICamera.list[0].camera.isOrthoGraphic; }$/;"	m	class:NGUIMenu	file:
Create3D	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Create3D () { UICreateNewUIWizard.CreateNewUI(UICreateNewUIWizard.CameraType.Advanced3D); }$/;"	m	class:NGUIMenu	file:
Create3Da	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Create3Da () { return UIRoot.list.Count == 0 || UICamera.list.size == 0 || UICamera.list[0].camera.isOrthoGraphic; }$/;"	m	class:NGUIMenu	file:
CreateAssets	Assets/Scripts/Shanghai.cs	/^        public void CreateAssets() {$/;"	m	class:Shanghai.Shanghai
CreateBroadcastSignatureException	Assets/Addons/Messenger/Messenger.cs	/^        static public BroadcastException CreateBroadcastSignatureException(string eventType) {$/;"	m	class:MessengerInternal
CreateButton	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreateButton (GameObject go)$/;"	m	class:UICreateWidgetWizard	file:
CreateCheckerTex	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static Texture2D CreateCheckerTex (Color c0, Color c1)$/;"	m	class:NGUIEditorTools	file:
CreateDummyTex	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static Texture2D CreateDummyTex ()$/;"	m	class:NGUIEditorTools	file:
CreateFont	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static public bool CreateFont (Font ttf, int size, int faceIndex, string characters, out BMFont font, out Texture2D tex)$/;"	m	class:FreeType
CreateGradientTex	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static Texture2D CreateGradientTex ()$/;"	m	class:NGUIEditorTools	file:
CreateImageButton	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreateImageButton (GameObject go)$/;"	m	class:UICreateWidgetWizard	file:
CreateInput	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreateInput (GameObject go)$/;"	m	class:UICreateWidgetWizard	file:
CreateInstance	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^	static public void CreateInstance ()$/;"	m	class:NGUIDebug
CreateLabel	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreateLabel (GameObject go)$/;"	m	class:UICreateWidgetWizard	file:
CreateLocalGameObject	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static void CreateLocalGameObject ()$/;"	m	class:NGUISelectionTools	file:
CreateMaterial	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	void CreateMaterial ()$/;"	m	class:UIDrawCall	file:
CreateNewUI	Assets/Addons/NGUI/Scripts/Editor/UICreateNewUIWizard.cs	/^	static public GameObject CreateNewUI (CameraType type)$/;"	m	class:UICreateNewUIWizard
CreatePanel	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public UIPanel CreatePanel ()$/;"	m	class:UIWidget
CreatePopup	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreatePopup (GameObject go, bool isDropDown)$/;"	m	class:UICreateWidgetWizard	file:
CreateScrollBar	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreateScrollBar (GameObject go)$/;"	m	class:UICreateWidgetWizard	file:
CreateSimpleTexture	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreateSimpleTexture (GameObject go)$/;"	m	class:UICreateWidgetWizard	file:
CreateSlider	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreateSlider (GameObject go, bool slider)$/;"	m	class:UICreateWidgetWizard	file:
CreateSprite	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreateSprite (GameObject go)$/;"	m	class:UICreateWidgetWizard	file:
CreateSprites	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public List<SpriteEntry> CreateSprites (List<Texture> textures)$/;"	m	class:UIAtlasMaker
CreateTable	Assets/Scripts/Controllers/ClientsController.cs	/^        public void CreateTable(Dictionary<string,Client> clients) {$/;"	m	class:Shanghai.Controllers.ClientsController
CreateTable	Assets/Scripts/Controllers/PlayGridController.cs	/^        public void CreateTable(int size) {$/;"	m	class:Shanghai.Controllers.PlayGridController
CreateTable	Assets/Scripts/Controllers/SourceRowController.cs	/^        public void CreateTable(int size) {$/;"	m	class:Shanghai.Controllers.SourceRowController
CreateTable	Assets/Scripts/Controllers/TargetsController.cs	/^        public void CreateTable(Dictionary<string,Target> targets) {$/;"	m	class:Shanghai.Controllers.TargetsController
CreateToggle	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void CreateToggle (GameObject go)$/;"	m	class:UICreateWidgetWizard	file:
CreateUI	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public UIPanel CreateUI (Transform trans, bool advanced3D, int layer)$/;"	m	class:NGUITools
CreateUI	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public UIPanel CreateUI (bool advanced3D) { return CreateUI(null, advanced3D, -1); }$/;"	m	class:NGUITools
CreateUI	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public UIPanel CreateUI (bool advanced3D, int layer) { return CreateUI(null, advanced3D, layer); }$/;"	m	class:NGUITools
CreateWidgetWizard	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void CreateWidgetWizard ()$/;"	m	class:NGUIMenu
Crispness	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public enum Crispness$/;"	g	class:UILabel
Crit	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Crit,$/;"	e	enum:InvStat.Identifier	file:
Crop	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Crop,$/;"	e	enum:UIFontInspector.Effect	file:
CropBorder	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void CropBorder (UISpriteData sprite)$/;"	m	class:UIAtlasInspector	file:
CurrentCellID	Assets/Scripts/Grid/ActiveMission.cs	/^        private int CurrentCellID = 0;$/;"	f	class:Shanghai.Grid.ActiveMission	file:
CurrentCellProgress	Assets/Scripts/Grid/ActiveMission.cs	/^        private float CurrentCellProgress = 0.0f;$/;"	f	class:Shanghai.Grid.ActiveMission	file:
CurrentSource	Assets/Scripts/Controllers/TelegramMachineController.cs	/^        public Source CurrentSource;$/;"	f	class:Shanghai.Controllers.TelegramMachineController
Cursed	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Cursed,$/;"	e	enum:InvGameItem.Quality	file:
Custom	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		Custom,		\/\/ Only explicitly specified characters will be included$/;"	e	enum:UIFontMaker.CharacterMap	file:
Custom	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^		Custom,$/;"	e	enum:UIGrid.Sorting	file:
Custom	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^		Custom,$/;"	e	enum:UIPlaySound.Trigger	file:
Custom	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		Custom,$/;"	e	enum:UIScrollView.Movement	file:
Custom	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^		Custom,$/;"	e	enum:UITable.Sorting	file:
DASH	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char DASH   = '-';$/;"	f	class:XMLParser	file:
DEFAULT_MODE	Assets/Addons/Messenger/Messenger.cs	/^        static public readonly MessengerMode DEFAULT_MODE = MessengerMode.REQUIRE_LISTENER;$/;"	f	class:MessengerInternal
DONT_REQUIRE_LISTENER	Assets/Addons/Messenger/Messenger.cs	/^        DONT_REQUIRE_LISTENER,$/;"	e	enum:MessengerMode	file:
DYNAMIC_FONT	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^#define DYNAMIC_FONT$/;"	d	file:
DYNAMIC_FONT	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^#define DYNAMIC_FONT$/;"	d	file:
DYNAMIC_FONT	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^#define DYNAMIC_FONT$/;"	d	file:
DYNAMIC_FONT	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^#define DYNAMIC_FONT$/;"	d	file:
DYNAMIC_FONT	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^#define DYNAMIC_FONT$/;"	d	file:
DYNAMIC_FONT	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^#define DYNAMIC_FONT$/;"	d	file:
DYNAMIC_FONT	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^#define DYNAMIC_FONT$/;"	d	file:
Damage	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Damage,$/;"	e	enum:InvStat.Identifier	file:
Damaged	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Damaged,$/;"	e	enum:InvGameItem.Quality	file:
Deactivate	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static void Deactivate (Transform t)$/;"	m	class:NGUITools	file:
DebugLabel	Assets/Scripts/Shanghai.cs	/^        public UILabel DebugLabel;$/;"	f	class:Shanghai.Shanghai
DecimalToHex	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public string DecimalToHex (int num)$/;"	m	class:NGUIMath
DecimalToHexChar	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public char DecimalToHexChar (int num)$/;"	m	class:NGUIMath
Default	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		Default = 0,$/;"	e	enum:UIInput.KeyboardType	file:
DeleteSprite	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	void DeleteSprite (object obj)$/;"	m	class:SpriteSelector	file:
DepthEntry	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	struct DepthEntry$/;"	s	class:UICamera
Destroy	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void Destroy (UnityEngine.Object obj)$/;"	m	class:NGUITools
Destroy	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static public void Destroy (UIDrawCall dc)$/;"	m	class:UIDrawCall
Destroy	Assets/Scripts/Controllers/TelegramController.cs	/^        public void Destroy() {$/;"	m	class:Shanghai.Controllers.TelegramController
DestroyImmediate	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void DestroyImmediate (UnityEngine.Object obj)$/;"	m	class:NGUITools
Differs	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	static bool Differs (float a, float b) { return Mathf.Abs(a - b) > 0.0001f; }$/;"	m	class:NGUITransformInspector	file:
Direction	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	enum Direction$/;"	g	class:UIScrollBar
Direction	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	enum Direction$/;"	g	class:UISlider
Direction	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public enum Direction$/;"	g	class:UITable
Direction	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^	public enum Direction$/;"	g	namespace:AnimationOrTween
Direction	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	public enum Direction$/;"	g	class:PropertyBinding
DisableAfterForward	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		DisableAfterForward = 1,$/;"	e	enum:AnimationOrTween.DisableCondition	file:
DisableAfterReverse	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		DisableAfterReverse = -1,$/;"	e	enum:AnimationOrTween.DisableCondition	file:
DisableCondition	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^	public enum DisableCondition$/;"	g	namespace:AnimationOrTween
DisableSpring	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public void DisableSpring ()$/;"	m	class:UIScrollView
Disabled	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^		Disabled,$/;"	e	enum:UIButtonColor.State	file:
DistancePointToLineSegment	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static float DistancePointToLineSegment (Vector2 point, Vector2 a, Vector2 b)$/;"	m	class:NGUIMath	file:
DistanceToRectangle	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public float DistanceToRectangle (Vector2[] screenPoints, Vector2 mousePos)$/;"	m	class:NGUIMath
DistanceToRectangle	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public float DistanceToRectangle (Vector3[] worldPoints, Vector2 mousePos, Camera cam)$/;"	m	class:NGUIMath
DoNotDisable	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		DoNotDisable = 0,$/;"	e	enum:AnimationOrTween.DisableCondition	file:
DoNothing	Assets/Addons/NGUI/Scripts/Editor/UIButtonEditor.cs	/^		DoNothing,$/;"	e	enum:UIButtonEditor.Highlight	file:
DoNothing	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		DoNothing = 0,$/;"	e	enum:AnimationOrTween.EnableCondition	file:
DockHealth	Assets/Scripts/Entities/Target.cs	/^        public void DockHealth() {$/;"	m	class:Shanghai.Entities.Target
DockReputation	Assets/Scripts/Entities/Client.cs	/^        public void DockReputation() {$/;"	m	class:Shanghai.Entities.Client
Down	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^		Down,$/;"	e	enum:UITable.Direction	file:
DownloadTexture	Assets/Addons/NGUI/Examples/Scripts/Other/DownloadTexture.cs	/^public class DownloadTexture : MonoBehaviour$/;"	c
Drag	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public void Drag (Vector2 delta)$/;"	m	class:UIDraggableCamera
Drag	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public void Drag ()$/;"	m	class:UIScrollView
DragEffect	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public enum DragEffect$/;"	g	class:UIDragObject
DragEffect	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public enum DragEffect$/;"	g	class:UIScrollView
DrainClients	Assets/Scripts/Shanghai.cs	/^        public void DrainClients(float delta) {$/;"	m	class:Shanghai.Shanghai
DrainReputation	Assets/Scripts/Entities/Client.cs	/^        public void DrainReputation(float delta) {$/;"	m	class:Shanghai.Entities.Client
DrawAdvancedList	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public string DrawAdvancedList (string field, string[] list, string selection, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawAdvancedSpriteField	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawAdvancedSpriteField (UIAtlas atlas, string spriteName, SpriteSelector.Callback callback, bool editable,$/;"	m	class:NGUIEditorTools
DrawAnchor	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected void DrawAnchor (int index, bool targetSelection)$/;"	m	class:UIRectEditor
DrawAnchorHandle	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public void DrawAnchorHandle (UIRect.AnchorPoint anchor, Transform myTrans, Vector3[] myCorners, int side, int id)$/;"	m	class:UIWidgetInspector
DrawAtlas	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	void DrawAtlas()$/;"	m	class:UIPopupListInspector	file:
DrawBackground	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Rect DrawBackground (Texture2D tex, float ratio)$/;"	m	class:NGUIEditorTools
DrawBounds	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^	static public void DrawBounds (Bounds b)$/;"	m	class:NGUIDebug
DrawButton	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	static bool DrawButton (string title, string tooltip, bool enabled, float width)$/;"	m	class:NGUITransformInspector	file:
DrawCenteredLabel	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public void DrawCenteredLabel (Vector2 screenPos, string text) { DrawCenteredLabel(screenPos, text, 60f); }$/;"	m	class:NGUIHandles
DrawCenteredLabel	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public void DrawCenteredLabel (Vector2 screenPos, string text, float width)$/;"	m	class:NGUIHandles
DrawCenteredLabel	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public void DrawCenteredLabel (Vector3 worldPos, string text) { DrawCenteredLabel(worldPos, text, 60f); }$/;"	m	class:NGUIHandles
DrawCenteredLabel	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public void DrawCenteredLabel (Vector3 worldPos, string text, float width)$/;"	m	class:NGUIHandles
DrawColors	Assets/Addons/NGUI/Scripts/Editor/UIButtonColorEditor.cs	/^	protected void DrawColors ()$/;"	m	class:UIButtonColorEditor
DrawCommonProperties	Assets/Addons/NGUI/Scripts/Editor/UITweenerEditor.cs	/^	protected void DrawCommonProperties ()$/;"	m	class:UITweenerEditor
DrawCustomProperties	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected virtual void DrawCustomProperties () { }$/;"	m	class:UIRectEditor
DrawCustomProperties	Assets/Addons/NGUI/Scripts/Editor/UISpriteInspector.cs	/^	protected override void DrawCustomProperties ()$/;"	m	class:UISpriteInspector
DrawCustomProperties	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	protected override void DrawCustomProperties ()$/;"	m	class:UIWidgetInspector
DrawDepth	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	void DrawDepth (bool isPrefab)$/;"	m	class:UIWidgetInspector	file:
DrawDimensions	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	void DrawDimensions (bool isPrefab)$/;"	m	class:UIWidgetInspector	file:
DrawEvents	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawEvents (string text, Object undoObject, List<EventDelegate> list)$/;"	m	class:NGUIEditorTools
DrawEvents	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawEvents (string text, Object undoObject, List<EventDelegate> list, string noTarget, string notValid)$/;"	m	class:NGUIEditorTools
DrawEvents	Assets/Addons/NGUI/Scripts/Editor/UIEventTriggerEditor.cs	/^	void DrawEvents (string key, string text, List<EventDelegate> list)$/;"	m	class:UIEventTriggerEditor	file:
DrawFinalProperties	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	protected override void DrawFinalProperties ()$/;"	m	class:UIPanelInspector
DrawFinalProperties	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected virtual void DrawFinalProperties ()$/;"	m	class:UIRectEditor
DrawFont	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	void DrawFont ()$/;"	m	class:UIPopupListInspector	file:
DrawHeader	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool DrawHeader (string text) { return DrawHeader(text, text, false); }$/;"	m	class:NGUIEditorTools
DrawHeader	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool DrawHeader (string text, bool forceOn) { return DrawHeader(text, text, forceOn); }$/;"	m	class:NGUIEditorTools
DrawHeader	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool DrawHeader (string text, string key) { return DrawHeader(text, key, false); }$/;"	m	class:NGUIEditorTools
DrawHeader	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool DrawHeader (string text, string key, bool forceOn)$/;"	m	class:NGUIEditorTools
DrawKnob	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	void DrawKnob (Vector4 point, int id, bool canResize)$/;"	m	class:UIPanelInspector	file:
DrawKnob	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public void DrawKnob (Vector3 point, bool selected, bool canResize, int id)$/;"	m	class:UIWidgetInspector
DrawLegacyFields	Assets/Addons/NGUI/Scripts/Editor/UIProgressBarEditor.cs	/^	protected virtual void DrawLegacyFields()$/;"	m	class:UIProgressBarEditor
DrawLegacyFields	Assets/Addons/NGUI/Scripts/Editor/UIScrollBarEditor.cs	/^	protected override void DrawLegacyFields ()$/;"	m	class:UIScrollBarEditor
DrawLine	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public void DrawLine (Plane p, Vector2 v0, Vector2 v1)$/;"	m	class:NGUIHandles
DrawList	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public string DrawList (string field, string[] list, string selection, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawObject	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	bool DrawObject (Object obj)$/;"	m	class:ComponentSelector	file:
DrawOption	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	static bool DrawOption (bool state, string text, params GUILayoutOption[] options)$/;"	m	class:UIFontMaker	file:
DrawOutline	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawOutline (Rect rect)$/;"	m	class:NGUIEditorTools
DrawOutline	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawOutline (Rect rect, Color color)$/;"	m	class:NGUIEditorTools
DrawOutline	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawOutline (Rect rect, Rect outer, Rect inner)$/;"	m	class:NGUIEditorTools
DrawOutline	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawOutline (Rect rect, Rect relative)$/;"	m	class:NGUIEditorTools
DrawOutline	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawOutline (Rect rect, Rect relative, Color color)$/;"	m	class:NGUIEditorTools
DrawPaddedProperty	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public SerializedProperty DrawPaddedProperty (SerializedObject serializedObject, string property, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawPaddedProperty	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public SerializedProperty DrawPaddedProperty (string label, SerializedObject serializedObject, string property, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawPaddedSpriteField	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawPaddedSpriteField (string label, UIAtlas atlas, string spriteName, SpriteSelector.Callback callback, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawPivot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	void DrawPivot ()$/;"	m	class:UIWidgetInspector	file:
DrawPosition	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	void DrawPosition ()$/;"	m	class:NGUITransformInspector	file:
DrawPrefixButton	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool DrawPrefixButton (string text)$/;"	m	class:NGUIEditorTools
DrawPrefixButton	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool DrawPrefixButton (string text, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawPrefixList	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public int DrawPrefixList (int index, string[] list, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawPrefixList	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public int DrawPrefixList (string text, int index, string[] list, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawProperties	Assets/Addons/NGUI/Scripts/Editor/UIButtonColorEditor.cs	/^	protected virtual void DrawProperties ()$/;"	m	class:UIButtonColorEditor
DrawProperties	Assets/Addons/NGUI/Scripts/Editor/UIButtonEditor.cs	/^	protected override void DrawProperties ()$/;"	m	class:UIButtonEditor
DrawProperty	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public SerializedProperty DrawProperty (SerializedObject serializedObject, string property, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawProperty	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public SerializedProperty DrawProperty (string label, SerializedObject serializedObject, string property, bool padding, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawProperty	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public SerializedProperty DrawProperty (string label, SerializedObject serializedObject, string property, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawProperty	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawProperty (string label, SerializedProperty sp, bool padding, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawProperty	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawProperty (string label, SerializedProperty sp, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawRotation	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	void DrawRotation (bool isWidget)$/;"	m	class:NGUITransformInspector	file:
DrawRow	Assets/Addons/NGUI/Scripts/Editor/UICameraTool.cs	/^	void DrawRow (Camera cam)$/;"	m	class:UICameraTool	file:
DrawRow	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	bool DrawRow (Entry ent, UIPanel selected, bool isChecked)$/;"	m	class:UIPanelTool	file:
DrawScale	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	void DrawScale (bool isWidget)$/;"	m	class:NGUITransformInspector	file:
DrawSeparator	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawSeparator ()$/;"	m	class:NGUIEditorTools
DrawShadowedLine	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public void DrawShadowedLine (Plane p, Vector2 screenPos0, Vector2 screenPos1, Color c)$/;"	m	class:NGUIHandles
DrawShadowedLine	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public void DrawShadowedLine (Plane p, Vector3 worldPos0, Vector3 worldPos1, Color c)$/;"	m	class:NGUIHandles
DrawShadowedLine	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public void DrawShadowedLine (Vector3[] corners, Vector3 worldPos0, Vector3 worldPos1, Color c)$/;"	m	class:NGUIHandles
DrawSingleAnchorSelection	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected SerializedProperty DrawSingleAnchorSelection ()$/;"	m	class:UIRectEditor
DrawSize	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public void DrawSize (Vector3[] worldPos, int width, int height)$/;"	m	class:NGUIHandles
DrawSprite	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvDatabaseInspector.cs	/^	public Rect DrawSprite (Texture2D tex, Rect sprite, Material mat) { return DrawSprite(tex, sprite, mat, true, 0); }$/;"	m	class:InvDatabaseInspector
DrawSprite	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvDatabaseInspector.cs	/^	public Rect DrawSprite (Texture2D tex, Rect sprite, Material mat, bool addPadding)$/;"	m	class:InvDatabaseInspector
DrawSprite	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvDatabaseInspector.cs	/^	public Rect DrawSprite (Texture2D tex, Rect sprite, Material mat, bool addPadding, int maxSize)$/;"	m	class:InvDatabaseInspector
DrawSprite	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawSprite (Texture2D tex, Rect drawRect, UISpriteData sprite, Color color, Material mat)$/;"	m	class:NGUIEditorTools
DrawSprite	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawSprite (Texture2D tex, Rect rect, UISpriteData sprite, Color color)$/;"	m	class:NGUIEditorTools
DrawSpriteField	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool DrawSpriteField (UIAtlas atlas, string spriteName, SpriteSelector.Callback callback, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawSpriteField	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawSpriteField (string label, SerializedObject ob, SerializedProperty atlas, SerializedProperty sprite, bool removable, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawSpriteField	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawSpriteField (string label, SerializedObject ob, SerializedProperty atlas, SerializedProperty sprite, float width, bool padded, bool removable, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawSpriteField	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawSpriteField (string label, SerializedObject ob, SerializedProperty atlas, SerializedProperty sprite, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawSpriteField	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawSpriteField (string label, SerializedObject ob, string spriteField, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawSpriteField	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawSpriteField (string label, UIAtlas atlas, string spriteName, SpriteSelector.Callback callback, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawSpriteField	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawSpriteField (string label, string caption, UIAtlas atlas, string spriteName, SpriteSelector.Callback callback, params GUILayoutOption[] options)$/;"	m	class:NGUIEditorTools
DrawTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	public static void DrawTexture (Texture2D tex, Rect rect, Rect uv, Color color)$/;"	m	class:NGUIEditorTools
DrawTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	public static void DrawTexture (Texture2D tex, Rect rect, Rect uv, Color color, Material mat)$/;"	m	class:NGUIEditorTools
DrawTiledTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void DrawTiledTexture (Rect rect, Texture tex)$/;"	m	class:NGUIEditorTools
DrawTransition	Assets/Addons/NGUI/Scripts/Editor/UIButtonColorEditor.cs	/^	protected void DrawTransition ()$/;"	m	class:UIButtonColorEditor
DrawVector3	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	static Vector3 DrawVector3 (Vector3 value)$/;"	m	class:NGUITransformInspector	file:
DuplicateSprite	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public SpriteEntry DuplicateSprite (UIAtlas atlas, string spriteName)$/;"	m	class:UIAtlasMaker
Dynamic	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Dynamic,$/;"	e	enum:UIFontInspector.FontType	file:
Dynamic	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		Dynamic,			\/\/ Dynamic font, used as-is$/;"	e	enum:UIFontMaker.FontType	file:
Dynamic	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		Dynamic,	\/\/ Dynamic font, used as-is$/;"	e	enum:UIFontMaker.Create	file:
Dynamic	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^		Dynamic,$/;"	e	enum:UIPopupListInspector.FontType	file:
END_GAME	Assets/Scripts/Shanghai.cs	/^        public enum GameState {START=0, PLAY, END_GAME};$/;"	e	enum:Shanghai.Shanghai.GameState	file:
EQUALS	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char EQUALS = '=';$/;"	f	class:XMLParser	file:
EVENT_CELL_DRAGGED	Assets/Scripts/Controllers/CellController.cs	/^        public static readonly string EVENT_CELL_DRAGGED = "EVENT_CELL_DRAGGED";$/;"	f	class:Shanghai.Controllers.CellController
EVENT_CELL_DRAG_END	Assets/Scripts/Controllers/CellController.cs	/^        public static readonly string EVENT_CELL_DRAG_END = "EVENT_CELL_DRAG_END";$/;"	f	class:Shanghai.Controllers.CellController
EVENT_CELL_PROGRESSED	Assets/Scripts/Grid/ActiveMission.cs	/^        public static readonly string EVENT_CELL_PROGRESSED = "EVENT_CELL_PROGRESSED";$/;"	f	class:Shanghai.Grid.ActiveMission
EVENT_CELL_UPDATED	Assets/Scripts/Grid/PlayableCell.cs	/^        public static readonly string EVENT_CELL_UPDATED = "EVENT_CELL_UPDATED";$/;"	f	class:Shanghai.Grid.PlayableCell
EVENT_CLIENT_UPDATED	Assets/Scripts/Entities/Client.cs	/^        public static readonly string EVENT_CLIENT_UPDATED = "EVENT_CLIENT_UPDATED";$/;"	f	class:Shanghai.Entities.Client
EVENT_CLIENT_UPDATED	Assets/Scripts/GameModel.cs	/^        public static readonly string EVENT_CLIENT_UPDATED = "EVENT_CLIENT_UPDATED";$/;"	f	class:Shanghai.GameModel
EVENT_GAME_START	Assets/Scripts/Shanghai.cs	/^        public static readonly string EVENT_GAME_START = "EVENT_GAME_START";$/;"	f	class:Shanghai.Shanghai
EVENT_GRID_UPDATED	Assets/Scripts/Grid/Grid.cs	/^        public static readonly string EVENT_GRID_UPDATED = "EVENT_GRID_UPDATED";$/;"	f	class:Shanghai.Grid.Grid
EVENT_MISSION_CHANGED	Assets/Scripts/GameModel.cs	/^        public static readonly string EVENT_MISSION_CHANGED = "EVENT_MISSION_CHANGED";$/;"	f	class:Shanghai.GameModel
EVENT_MISSION_CREATED	Assets/Scripts/EventGenerator.cs	/^        public static readonly string EVENT_MISSION_CREATED = "EVENT_MISSION_CREATED";$/;"	f	class:Shanghai.EventGenerator
EVENT_MISSION_FAILED	Assets/Scripts/Grid/Grid.cs	/^        public static readonly string EVENT_MISSION_FAILED = "EVENT_MISSION_FAILED";$/;"	f	class:Shanghai.Grid.Grid
EVENT_MONEY_CHANGED	Assets/Scripts/GameModel.cs	/^        public static readonly string EVENT_MONEY_CHANGED = "EVENT_MONEY_CHANGED";$/;"	f	class:Shanghai.GameModel
EVENT_PACKAGE_DELIVERED	Assets/Scripts/Grid/ActiveMission.cs	/^        public static readonly string EVENT_PACKAGE_DELIVERED = "EVENT_PACKAGE_DELIVERED";$/;"	f	class:Shanghai.Grid.ActiveMission
EVENT_SET_PATH	Assets/Scripts/Grid/Grid.cs	/^        public static readonly string EVENT_SET_PATH = "EVENT_SET_PATH";$/;"	f	class:Shanghai.Grid.Grid
EVENT_SOURCE_CELL_UPDATED	Assets/Scripts/Grid/SourceCell.cs	/^        public static readonly string EVENT_SOURCE_CELL_UPDATED = "EVENT_SOURCE_CELL_UPDATED";$/;"	f	class:Shanghai.Grid.SourceCell
EVENT_SOURCE_CHANGED	Assets/Scripts/GameModel.cs	/^        public static readonly string EVENT_SOURCE_CHANGED = "EVENT_SOURCE_CHANGED";$/;"	f	class:Shanghai.GameModel
EVENT_SOURCE_CREATED	Assets/Scripts/EventGenerator.cs	/^        public static readonly string EVENT_SOURCE_CREATED = "EVENT_SOURCE_CREATED";$/;"	f	class:Shanghai.EventGenerator
EVENT_TARGET_UPDATED	Assets/Scripts/Entities/Target.cs	/^        public static readonly string EVENT_TARGET_UPDATED = "EVENT_TARGET_UPDATED";$/;"	f	class:Shanghai.Entities.Target
EVENT_TARGET_UPDATED	Assets/Scripts/GameModel.cs	/^        public static readonly string EVENT_TARGET_UPDATED = "EVENT_TARGET_UPDATED";$/;"	f	class:Shanghai.GameModel
EVENT_TELEGRAM_DROPPED	Assets/Scripts/Controllers/TelegramController.cs	/^        public static readonly string EVENT_TELEGRAM_DROPPED = "EVENT_TELEGRAM_DROPPED";$/;"	f	class:Shanghai.Controllers.TelegramController
EVENT_TELEGRAM_END_DRAG	Assets/Scripts/Controllers/TelegramController.cs	/^        public static readonly string EVENT_TELEGRAM_END_DRAG = "EVENT_TELEGRAM_END_DRAG";$/;"	f	class:Shanghai.Controllers.TelegramController
EVENT_TELEGRAM_OVER	Assets/Scripts/Controllers/SourceController.cs	/^        public static readonly string EVENT_TELEGRAM_OVER = "EVENT_TELEGRAM_OVER";$/;"	f	class:Shanghai.Controllers.SourceController
EXCLAMATION	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char EXCLAMATION = '!';$/;"	f	class:XMLParser	file:
EaseIn	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^		EaseIn,$/;"	e	enum:UITweener.Method	file:
EaseInOut	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^		EaseInOut,$/;"	e	enum:UITweener.Method	file:
EaseOut	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^		EaseOut,$/;"	e	enum:UITweener.Method	file:
EditSprite	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	void EditSprite (object obj)$/;"	m	class:SpriteSelector	file:
EducationColour	Assets/Scripts/ShanghaiConfig.cs	/^        public Color EducationColour = new Color(0.0f, 0.0f, 0.0f);$/;"	f	class:Shanghai.ShanghaiConfig
Effect	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	enum Effect$/;"	g	class:UIFontInspector
Effect	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public enum Effect$/;"	g	class:UILabel
EmailAddress	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		EmailAddress = 7,$/;"	e	enum:UIInput.KeyboardType	file:
EnableCondition	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^	public enum EnableCondition$/;"	g	namespace:AnimationOrTween
EnableThenPlay	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		EnableThenPlay,$/;"	e	enum:AnimationOrTween.EnableCondition	file:
Enchanted	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Enchanted,$/;"	e	enum:InvGameItem.Quality	file:
EncodeColor	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public string EncodeColor (Color c)$/;"	m	class:NGUIText
EncodeColor	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public string EncodeColor (Color c) { return NGUIText.EncodeColor(c); }$/;"	m	class:NGUITools
EndContents	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void EndContents ()$/;"	m	class:NGUIEditorTools
EndGame	Assets/Scripts/Shanghai.cs	/^        private void EndGame() {$/;"	m	class:Shanghai.Shanghai	file:
EndLine	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public void EndLine (ref StringBuilder s)$/;"	m	class:NGUIText
Entity	Assets/Scripts/Entities/Entity.cs	/^        public Entity() {}$/;"	m	class:Shanghai.Entities.Entity
Entity	Assets/Scripts/Entities/Entity.cs	/^        public Entity(string key) {$/;"	m	class:Shanghai.Entities.Entity
Entity	Assets/Scripts/Entities/Entity.cs	/^    public class Entity {$/;"	c	namespace:Shanghai.Entities
Entity	Assets/Scripts/GameModel.cs	/^        private void AddEntityToCollection<T>(string key, Dictionary<string, T> collection) where T : Entity, new() {$/;"	f	class:Shanghai.GameModel	file:
Entry	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^	public class Entry$/;"	c	class:PropertyReferenceDrawer
Entry	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	class Entry$/;"	c	class:UIPanelTool
EnvelopContent	Assets/Addons/NGUI/Examples/Scripts/Other/EnvelopContent.cs	/^public class EnvelopContent : MonoBehaviour$/;"	c
EnvironmentColour	Assets/Scripts/ShanghaiConfig.cs	/^        public Color EnvironmentColour = new Color(0.0f, 0.0f, 0.0f);$/;"	f	class:Shanghai.ShanghaiConfig
Epic	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Epic,$/;"	e	enum:InvGameItem.Quality	file:
Equals	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public override bool Equals (object obj)$/;"	m	class:EventDelegate
Equals	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public override bool Equals (object obj)$/;"	m	class:PropertyReference
Equip	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	public InvGameItem Equip (InvGameItem item)$/;"	m	class:InvEquipment
EquipItems	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/EquipItems.cs	/^public class EquipItems : MonoBehaviour$/;"	c
EquipRandomItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/EquipRandomItem.cs	/^public class EquipRandomItem : MonoBehaviour$/;"	c
Err_Bad_Argument	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Bad_Argument = 132;$/;"	f	class:FreeType
Err_CMap_Table_Missing	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_CMap_Table_Missing = 146;$/;"	f	class:FreeType
Err_Cannot_Open_Resource	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Cannot_Open_Resource = 1;$/;"	f	class:FreeType
Err_Cannot_Open_Stream	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Cannot_Open_Stream = 81;$/;"	f	class:FreeType
Err_Cannot_Render_Glyph	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Cannot_Render_Glyph = 19;$/;"	f	class:FreeType
Err_Code_Overflow	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Code_Overflow = 131;$/;"	f	class:FreeType
Err_Could_Not_Find_Context	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Could_Not_Find_Context = 153;$/;"	f	class:FreeType
Err_Debug_OpCode	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Debug_OpCode = 135;$/;"	f	class:FreeType
Err_Divide_By_Zero	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Divide_By_Zero = 133;$/;"	f	class:FreeType
Err_ENDF_In_Exec_Stream	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_ENDF_In_Exec_Stream = 136;$/;"	f	class:FreeType
Err_Execution_Too_Long	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Execution_Too_Long = 139;$/;"	f	class:FreeType
Err_Hmtx_Table_Missing	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Hmtx_Table_Missing = 147;$/;"	f	class:FreeType
Err_Horiz_Header_Missing	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Horiz_Header_Missing = 143;$/;"	f	class:FreeType
Err_Ignore	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Ignore = 162;$/;"	f	class:FreeType
Err_Invalid_Argument	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Argument = 6;$/;"	f	class:FreeType
Err_Invalid_Cache_Handle	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Cache_Handle = 39;$/;"	f	class:FreeType
Err_Invalid_CharMap_Format	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_CharMap_Format = 150;$/;"	f	class:FreeType
Err_Invalid_CharMap_Handle	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_CharMap_Handle = 38;$/;"	f	class:FreeType
Err_Invalid_Character_Code	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Character_Code = 17;$/;"	f	class:FreeType
Err_Invalid_CodeRange	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_CodeRange = 138;$/;"	f	class:FreeType
Err_Invalid_Composite	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Composite = 21;$/;"	f	class:FreeType
Err_Invalid_Driver_Handle	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Driver_Handle = 34;$/;"	f	class:FreeType
Err_Invalid_Face_Handle	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Face_Handle = 35;$/;"	f	class:FreeType
Err_Invalid_File_Format	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_File_Format = 3;$/;"	f	class:FreeType
Err_Invalid_Frame_Operation	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Frame_Operation = 86;$/;"	f	class:FreeType
Err_Invalid_Frame_Read	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Frame_Read = 88;$/;"	f	class:FreeType
Err_Invalid_Glyph_Format	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Glyph_Format = 18;$/;"	f	class:FreeType
Err_Invalid_Glyph_Index	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Glyph_Index = 16;$/;"	f	class:FreeType
Err_Invalid_Handle	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Handle = 32;$/;"	f	class:FreeType
Err_Invalid_Horiz_Metrics	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Horiz_Metrics = 149;$/;"	f	class:FreeType
Err_Invalid_Library_Handle	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Library_Handle = 33;$/;"	f	class:FreeType
Err_Invalid_Offset	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Offset = 9;$/;"	f	class:FreeType
Err_Invalid_Opcode	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Opcode = 128;$/;"	f	class:FreeType
Err_Invalid_Outline	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Outline = 20;$/;"	f	class:FreeType
Err_Invalid_PPem	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_PPem = 151;$/;"	f	class:FreeType
Err_Invalid_Pixel_Size	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Pixel_Size = 23;$/;"	f	class:FreeType
Err_Invalid_Post_Table	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Post_Table = 155;$/;"	f	class:FreeType
Err_Invalid_Post_Table_Format	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Post_Table_Format = 154;$/;"	f	class:FreeType
Err_Invalid_Reference	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Reference = 134;$/;"	f	class:FreeType
Err_Invalid_Size_Handle	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Size_Handle = 36;$/;"	f	class:FreeType
Err_Invalid_Slot_Handle	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Slot_Handle = 37;$/;"	f	class:FreeType
Err_Invalid_Stream_Handle	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Stream_Handle = 40;$/;"	f	class:FreeType
Err_Invalid_Stream_Operation	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Stream_Operation = 85;$/;"	f	class:FreeType
Err_Invalid_Stream_Read	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Stream_Read = 84;$/;"	f	class:FreeType
Err_Invalid_Stream_Seek	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Stream_Seek = 82;$/;"	f	class:FreeType
Err_Invalid_Stream_Skip	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Stream_Skip = 83;$/;"	f	class:FreeType
Err_Invalid_Table	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Table = 8;$/;"	f	class:FreeType
Err_Invalid_Version	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Version = 4;$/;"	f	class:FreeType
Err_Invalid_Vert_Metrics	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Invalid_Vert_Metrics = 152;$/;"	f	class:FreeType
Err_Locations_Missing	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Locations_Missing = 144;$/;"	f	class:FreeType
Err_Lower_Module_Version	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Lower_Module_Version = 5;$/;"	f	class:FreeType
Err_Missing_Bbx_Field	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Missing_Bbx_Field = 182;$/;"	f	class:FreeType
Err_Missing_Chars_Field	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Missing_Chars_Field = 179;$/;"	f	class:FreeType
Err_Missing_Encoding_Field	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Missing_Encoding_Field = 181;$/;"	f	class:FreeType
Err_Missing_Font_Field	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Missing_Font_Field = 177;$/;"	f	class:FreeType
Err_Missing_Size_Field	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Missing_Size_Field = 178;$/;"	f	class:FreeType
Err_Missing_Startchar_Field	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Missing_Startchar_Field = 180;$/;"	f	class:FreeType
Err_Missing_Startfont_Field	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Missing_Startfont_Field = 176;$/;"	f	class:FreeType
Err_Name_Table_Missing	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Name_Table_Missing = 145;$/;"	f	class:FreeType
Err_Nested_DEFS	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Nested_DEFS = 137;$/;"	f	class:FreeType
Err_Nested_Frame_Access	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Nested_Frame_Access = 87;$/;"	f	class:FreeType
Err_Out_Of_Memory	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Out_Of_Memory = 64;$/;"	f	class:FreeType
Err_Post_Table_Missing	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Post_Table_Missing = 148;$/;"	f	class:FreeType
Err_Raster_Corrupted	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Raster_Corrupted = 97;$/;"	f	class:FreeType
Err_Raster_Negative_Height	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Raster_Negative_Height = 99;$/;"	f	class:FreeType
Err_Raster_Overflow	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Raster_Overflow = 98;$/;"	f	class:FreeType
Err_Raster_Uninitialized	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Raster_Uninitialized = 96;$/;"	f	class:FreeType
Err_Stack_Overflow	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Stack_Overflow = 130;$/;"	f	class:FreeType
Err_Stack_Underflow	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Stack_Underflow = 161;$/;"	f	class:FreeType
Err_Syntax_Error	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Syntax_Error = 160;$/;"	f	class:FreeType
Err_Table_Missing	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Table_Missing = 142;$/;"	f	class:FreeType
Err_Too_Few_Arguments	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Too_Few_Arguments = 129;$/;"	f	class:FreeType
Err_Too_Many_Caches	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Too_Many_Caches = 112;$/;"	f	class:FreeType
Err_Too_Many_Drivers	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Too_Many_Drivers = 48;$/;"	f	class:FreeType
Err_Too_Many_Extensions	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Too_Many_Extensions = 49;$/;"	f	class:FreeType
Err_Too_Many_Function_Defs	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Too_Many_Function_Defs = 140;$/;"	f	class:FreeType
Err_Too_Many_Hints	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Too_Many_Hints = 22;$/;"	f	class:FreeType
Err_Too_Many_Instruction_Defs	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Too_Many_Instruction_Defs = 141;$/;"	f	class:FreeType
Err_Unimplemented_Feature	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Unimplemented_Feature = 7;$/;"	f	class:FreeType
Err_Unknown_File_Format	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Unknown_File_Format = 2;$/;"	f	class:FreeType
Err_Unlisted_Object	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int Err_Unlisted_Object = 65;$/;"	f	class:FreeType
EventDelegate	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public EventDelegate () { }$/;"	m	class:EventDelegate
EventDelegate	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public EventDelegate (Callback call) { Set(call); }$/;"	m	class:EventDelegate
EventDelegate	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public EventDelegate (MonoBehaviour target, string methodName) { Set(target, methodName); }$/;"	m	class:EventDelegate
EventDelegate	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^public class EventDelegate$/;"	c
EventDelegateEditor	Assets/Addons/NGUI/Scripts/Editor/EventDelegateEditor.cs	/^public static class EventDelegateEditor$/;"	c
EventGenerator	Assets/Scripts/EventGenerator.cs	/^        public EventGenerator() {$/;"	m	class:Shanghai.EventGenerator
EventGenerator	Assets/Scripts/EventGenerator.cs	/^    public class EventGenerator {$/;"	c	namespace:Shanghai
EventType	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public enum EventType$/;"	g	class:UICamera
ExampleDragDropItem	Assets/Addons/NGUI/Examples/Scripts/Other/ExampleDragDropItem.cs	/^public class ExampleDragDropItem : UIDragDropItem$/;"	c
ExampleDragDropSurface	Assets/Addons/NGUI/Examples/Scripts/Other/ExampleDragDropSurface.cs	/^public class ExampleDragDropSurface : MonoBehaviour$/;"	c
Execute	Assets/Addons/NGUI/Examples/Scripts/Other/EnvelopContent.cs	/^	public void Execute ()$/;"	m	class:EnvelopContent
Execute	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public bool Execute ()$/;"	m	class:EventDelegate
Execute	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public void Execute (List<EventDelegate> list)$/;"	m	class:EventDelegate
ExecuteOnChange	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected void ExecuteOnChange ()$/;"	m	class:UIInput
Exists	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public bool Exists (string key)$/;"	m	class:Localization
Explicit	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^		Explicit,$/;"	e	enum:UIKeyNavigation.Constraint	file:
Explicit	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^		Explicit,$/;"	e	enum:UIPanel.RenderQueue	file:
ExtractSprite	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static SpriteEntry ExtractSprite (UISpriteData es, Color32[] oldPixels, int oldWidth, int oldHeight)$/;"	m	class:UIAtlasMaker	file:
ExtractSprite	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static SpriteEntry ExtractSprite (UISpriteData es, Texture2D tex)$/;"	m	class:UIAtlasMaker	file:
ExtractSprite	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public SpriteEntry ExtractSprite (UIAtlas atlas, string spriteName)$/;"	m	class:UIAtlasMaker
ExtractSprites	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public void ExtractSprites (UIAtlas atlas, List<SpriteEntry> finalSprites)$/;"	m	class:UIAtlasMaker
FLAG_PREFIX	Assets/Scripts/Controllers/ClientController.cs	/^        public static readonly string FLAG_PREFIX = "flag";$/;"	f	class:Shanghai.Controllers.ClientController
FT_BBox	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_BBox$/;"	s	class:FreeType
FT_Bitmap	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_Bitmap$/;"	s	class:FreeType
FT_Done_Face	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern int FT_Done_Face (IntPtr face);$/;"	m	class:FreeType	file:
FT_Done_FreeType	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern int FT_Done_FreeType (IntPtr library);$/;"	m	class:FreeType	file:
FT_FaceRec	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_FaceRec$/;"	s	class:FreeType
FT_GLYPH_FORMAT_BITMAP	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_GLYPH_FORMAT_BITMAP = 1651078259,$/;"	e	enum:FreeType.FT_Glyph_Format	file:
FT_GLYPH_FORMAT_COMPOSITE	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_GLYPH_FORMAT_COMPOSITE = 1668246896,$/;"	e	enum:FreeType.FT_Glyph_Format	file:
FT_GLYPH_FORMAT_NONE	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_GLYPH_FORMAT_NONE,$/;"	e	enum:FreeType.FT_Glyph_Format	file:
FT_GLYPH_FORMAT_OUTLINE	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_GLYPH_FORMAT_OUTLINE = 1869968492,$/;"	e	enum:FreeType.FT_Glyph_Format	file:
FT_GLYPH_FORMAT_PLOTTER	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_GLYPH_FORMAT_PLOTTER = 1886154612$/;"	e	enum:FreeType.FT_Glyph_Format	file:
FT_Generic	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_Generic$/;"	s	class:FreeType
FT_Get_Char_Index	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern uint FT_Get_Char_Index (IntPtr face, uint charcode);$/;"	m	class:FreeType	file:
FT_Get_Kerning	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern int FT_Get_Kerning (IntPtr face, uint left, uint right, uint kern_mode, out FT_Vector kerning);$/;"	m	class:FreeType	file:
FT_GlyphSlotRec	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_GlyphSlotRec$/;"	s	class:FreeType
FT_Glyph_Format	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public enum FT_Glyph_Format$/;"	g	class:FreeType
FT_Glyph_Metrics	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_Glyph_Metrics$/;"	s	class:FreeType
FT_Init_FreeType	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern int FT_Init_FreeType (out IntPtr library);$/;"	m	class:FreeType	file:
FT_LOAD_CROP_BITMAP	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_CROP_BITMAP = 64;$/;"	f	class:FreeType
FT_LOAD_DEFAULT	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_DEFAULT = 0;$/;"	f	class:FreeType
FT_LOAD_FORCE_AUTOHINT	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_FORCE_AUTOHINT = 32;$/;"	f	class:FreeType
FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH = 512;$/;"	f	class:FreeType
FT_LOAD_IGNORE_TRANSFORM	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_IGNORE_TRANSFORM = 2048;$/;"	f	class:FreeType
FT_LOAD_LINEAR_DESIGN	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_LINEAR_DESIGN = 8192;$/;"	f	class:FreeType
FT_LOAD_MONOCHROME	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_MONOCHROME = 4096;$/;"	f	class:FreeType
FT_LOAD_NO_BITMAP	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_NO_BITMAP = 8;$/;"	f	class:FreeType
FT_LOAD_NO_HINTING	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_NO_HINTING = 2;$/;"	f	class:FreeType
FT_LOAD_NO_RECURSE	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_NO_RECURSE = 1024;$/;"	f	class:FreeType
FT_LOAD_NO_SCALE	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_NO_SCALE = 1;$/;"	f	class:FreeType
FT_LOAD_PEDANTIC	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_PEDANTIC = 128;$/;"	f	class:FreeType
FT_LOAD_RENDER	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_RENDER = 4;$/;"	f	class:FreeType
FT_LOAD_SBITS_ONLY	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_SBITS_ONLY = 16384;$/;"	f	class:FreeType
FT_LOAD_VERTICAL_LAYOUT	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public const int FT_LOAD_VERTICAL_LAYOUT = 16;$/;"	f	class:FreeType
FT_ListRec	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_ListRec$/;"	s	class:FreeType
FT_Load_Glyph	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern int FT_Load_Glyph (IntPtr face, uint glyph_index, int load_flags);$/;"	m	class:FreeType	file:
FT_New_Face	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern int FT_New_Face (IntPtr library, string filepathname, int face_index, out IntPtr face);$/;"	m	class:FreeType	file:
FT_Outline	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_Outline$/;"	s	class:FreeType
FT_RENDER_MODE_LCD	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_RENDER_MODE_LCD,$/;"	e	enum:FreeType.FT_Render_Mode	file:
FT_RENDER_MODE_LCD_V	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_RENDER_MODE_LCD_V,$/;"	e	enum:FreeType.FT_Render_Mode	file:
FT_RENDER_MODE_LIGHT	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_RENDER_MODE_LIGHT,$/;"	e	enum:FreeType.FT_Render_Mode	file:
FT_RENDER_MODE_MAX	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_RENDER_MODE_MAX$/;"	e	enum:FreeType.FT_Render_Mode	file:
FT_RENDER_MODE_MONO	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_RENDER_MODE_MONO,$/;"	e	enum:FreeType.FT_Render_Mode	file:
FT_RENDER_MODE_NORMAL	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		FT_RENDER_MODE_NORMAL,$/;"	e	enum:FreeType.FT_Render_Mode	file:
FT_Render_Glyph	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern int FT_Render_Glyph (ref FT_GlyphSlotRec slot, FT_Render_Mode render_mode);$/;"	m	class:FreeType	file:
FT_Render_Mode	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public enum FT_Render_Mode$/;"	g	class:FreeType
FT_Set_Pixel_Sizes	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern int FT_Set_Pixel_Sizes (IntPtr face, uint pixel_width, uint pixel_height);$/;"	m	class:FreeType	file:
FT_SizeRec	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_SizeRec$/;"	s	class:FreeType
FT_Size_Metrics	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_Size_Metrics$/;"	s	class:FreeType
FT_Vector	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	public struct FT_Vector$/;"	s	class:FreeType
Field	Assets/Addons/NGUI/Scripts/Editor/EventDelegateEditor.cs	/^	static public bool Field (Object undoObject, EventDelegate del)$/;"	m	class:EventDelegateEditor
Field	Assets/Addons/NGUI/Scripts/Editor/EventDelegateEditor.cs	/^	static public bool Field (Object undoObject, EventDelegate del, bool removeButton)$/;"	m	class:EventDelegateEditor
Field	Assets/Addons/NGUI/Scripts/Editor/EventDelegateEditor.cs	/^	static public void Field (Object undoObject, List<EventDelegate> list)$/;"	m	class:EventDelegateEditor
Field	Assets/Addons/NGUI/Scripts/Editor/EventDelegateEditor.cs	/^	static public void Field (Object undoObject, List<EventDelegate> list, string noTarget, string notValid)$/;"	m	class:EventDelegateEditor
FieldName	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static protected string[] FieldName = new string[] { "leftAnchor", "rightAnchor", "bottomAnchor", "topAnchor" };$/;"	f	class:UIRectEditor
FillAllDrawCalls	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	void FillAllDrawCalls ()$/;"	m	class:UIPanel	file:
FillBuffers	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	void FillBuffers (float v0x, float v1x, float v0y, float v1y, float u0x, float u1x, float u0y, float u1y, Color col,$/;"	m	class:UISprite	file:
FillDirection	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public enum FillDirection$/;"	g	class:UIProgressBar
FillDirection	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public enum FillDirection$/;"	g	class:UISprite
FillDrawCall	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	bool FillDrawCall (UIDrawCall dc)$/;"	m	class:UIPanel	file:
FillKeepingRatio	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^		FillKeepingRatio, \/\/ Fits the image so that it entirely fills the specified container keeping its ratio$/;"	e	enum:UIStretch.Style	file:
Filled	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Filled,$/;"	e	enum:UISprite.Type	file:
FilledFill	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected void FilledFill (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:UISprite
Find	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static public UIPanel Find (Transform trans) { return Find(trans, false, -1); }$/;"	m	class:UIPanel
Find	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static public UIPanel Find (Transform trans, bool createIfMissing) { return Find(trans, createIfMissing, -1); }$/;"	m	class:UIPanel
Find	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static public UIPanel Find (Transform trans, bool createIfMissing, int layer)$/;"	m	class:UIPanel
FindAllByName	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^	void FindAllByName (string partial)$/;"	m	class:InvFindItem	file:
FindByID	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	static public InvBaseItem FindByID (int id32)$/;"	m	class:InvDatabase
FindByName	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	static public InvBaseItem FindByName (string exact)$/;"	m	class:InvDatabase
FindCameraFor	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	void FindCameraFor (AnchorPoint ap)$/;"	m	class:UIRect	file:
FindCameraForLayer	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Camera FindCameraForLayer (int layer)$/;"	m	class:NGUITools
FindCameraForLayer	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public UICamera FindCameraForLayer (int layer)$/;"	m	class:UICamera
FindDrawCall	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public UIDrawCall FindDrawCall (UIWidget w)$/;"	m	class:UIPanel
FindItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^	static void FindItem ()$/;"	m	class:InvFindItem	file:
FindItemID	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	static public int FindItemID (InvBaseItem item)$/;"	m	class:InvDatabase
FindPanel	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	void FindPanel ()$/;"	m	class:UIDragObject	file:
FindPositionForNewNodeBestAreaFit	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	Rect FindPositionForNewNodeBestAreaFit (int width, int height, ref int bestAreaFit, ref int bestShortSideFit)$/;"	m	class:UITexturePacker	file:
FindPositionForNewNodeBestLongSideFit	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	Rect FindPositionForNewNodeBestLongSideFit (int width, int height, ref int bestShortSideFit, ref int bestLongSideFit)$/;"	m	class:UITexturePacker	file:
FindPositionForNewNodeBestShortSideFit	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	Rect FindPositionForNewNodeBestShortSideFit (int width, int height, ref int bestShortSideFit, ref int bestLongSideFit)$/;"	m	class:UITexturePacker	file:
FindPositionForNewNodeBottomLeft	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	Rect FindPositionForNewNodeBottomLeft (int width, int height, ref int bestY, ref int bestX)$/;"	m	class:UITexturePacker	file:
FindPositionForNewNodeContactPoint	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	Rect FindPositionForNewNodeContactPoint (int width, int height, ref int bestContactScore)$/;"	m	class:UITexturePacker	file:
FindResult	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^	struct FindResult$/;"	s	class:InvFindItem
FindScrollView	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	void FindScrollView ()$/;"	m	class:UIDragScrollView	file:
Finish	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	public void Finish ()$/;"	m	class:ActiveAnimation
FitInternalKeepingRatio	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^		FitInternalKeepingRatio \/\/ Fits the image\/item inside of the specified container keeping its ratio$/;"	e	enum:UIStretch.Style	file:
FixUniform	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void FixUniform (GameObject go)$/;"	m	class:NGUIEditorTools
FixedSize	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^		FixedSize,$/;"	e	enum:UIRoot.Scaling	file:
FixedSizeOnMobiles	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^		FixedSizeOnMobiles,$/;"	e	enum:UIRoot.Scaling	file:
FixedUpdate	Assets/Addons/NGUI/Examples/Scripts/Other/Spin.cs	/^	void FixedUpdate ()$/;"	m	class:Spin	file:
FixedUpdate	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	void FixedUpdate ()$/;"	m	class:PropertyBinding	file:
Flag	Assets/Scripts/Controllers/ClientController.cs	/^        public Transform Flag;$/;"	f	class:Shanghai.Controllers.ClientController
FlagBottom	Assets/Scripts/Controllers/ClientController.cs	/^        public float FlagBottom = 0.0f;$/;"	f	class:Shanghai.Controllers.ClientController
FlagSprite	Assets/Scripts/Controllers/ClientController.cs	/^        public UISprite FlagSprite;$/;"	f	class:Shanghai.Controllers.ClientController
FlagTop	Assets/Scripts/Controllers/ClientController.cs	/^        public float FlagTop = 1.0f;$/;"	f	class:Shanghai.Controllers.ClientController
Flip	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public enum Flip$/;"	g	class:UISprite
Float	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		Float,$/;"	e	enum:UIInput.Validation	file:
FloatDelegate	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public delegate void FloatDelegate (GameObject go, float delta);$/;"	m	class:UIEventListener
FloatField	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	static bool FloatField (string name, ref float value, bool hidden, bool greyedOut, GUILayoutOption opt)$/;"	m	class:NGUITransformInspector	file:
Font	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Font,$/;"	e	enum:UIFontInspector.View	file:
FontType	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	enum FontType$/;"	g	class:UIFontInspector
FontType	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	enum FontType$/;"	g	class:UIFontMaker
FontType	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^	public enum FontType$/;"	g	class:UILabelInspector
FontType	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	enum FontType$/;"	g	class:UIPopupListInspector
ForceDelete	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static void ForceDelete()$/;"	m	class:NGUISelectionTools	file:
ForceUpdate	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public virtual void ForceUpdate ()$/;"	m	class:UIProgressBar
ForceUpdate	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	public override void ForceUpdate ()$/;"	m	class:UIScrollBar
ForegroundCurve	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		ForegroundCurve,$/;"	e	enum:UIFontInspector.Effect	file:
Forward	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		Forward = 1,$/;"	e	enum:AnimationOrTween.Direction	file:
Free	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		Free,$/;"	e	enum:UIWidget.AspectRatioSource	file:
FreeRectChoiceHeuristic	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public enum FreeRectChoiceHeuristic$/;"	g	class:UITexturePacker
FreeType	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^static public class FreeType$/;"	c
FullCompareFunc	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	static public int FullCompareFunc (UIWidget left, UIWidget right)$/;"	m	class:UIWidget
GRID_SIZE	Assets/Scripts/GameModel.cs	/^        public static readonly int GRID_SIZE = 6;$/;"	f	class:Shanghai.GameModel
GT	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char GT     = '>';$/;"	f	class:XMLParser	file:
GUIDToObject	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Object GUIDToObject (string guid)$/;"	m	class:NGUIEditorTools
GameLoop	Assets/Scripts/Shanghai.cs	/^        private void GameLoop() {$/;"	m	class:Shanghai.Shanghai	file:
GameModel	Assets/Scripts/GameModel.cs	/^    public class GameModel : MonoSingleton<GameModel> {$/;"	c	namespace:Shanghai
GameOverController	Assets/Scripts/Controllers/GameOverController.cs	/^    public class GameOverController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
GameOverController	Assets/Scripts/Shanghai.cs	/^        public GameOverController GameOverController;$/;"	f	class:Shanghai.Shanghai
GameState	Assets/Scripts/Shanghai.cs	/^        public enum GameState {START=0, PLAY, END_GAME};$/;"	g	class:Shanghai.Shanghai
GenerateCachedIndexBuffer	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	int[] GenerateCachedIndexBuffer (int vertexCount, int indexCount)$/;"	m	class:UIDrawCall	file:
GenerateMission	Assets/Scripts/EventGenerator.cs	/^        public bool GenerateMission() {$/;"	m	class:Shanghai.EventGenerator
GenerateSource	Assets/Scripts/EventGenerator.cs	/^        public bool GenerateSource() {$/;"	m	class:Shanghai.EventGenerator
GeneratedBitmap	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		GeneratedBitmap,	\/\/ Bitmap font, created from a dynamic font using FreeType$/;"	e	enum:UIFontMaker.FontType	file:
Get	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	protected GameObject Get (Vector3 myDir, bool horizontal)$/;"	m	class:UIKeyNavigation
Get	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public string Get (string key)$/;"	m	class:Localization
Get	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public object Get ()$/;"	m	class:PropertyReference
Get	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	static public UIEventListener Get (GameObject go)$/;"	m	class:UIEventListener
GetActive	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public bool GetActive (Behaviour mb)$/;"	m	class:NGUITools
GetActive	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public bool GetActive (GameObject go)$/;"	m	class:NGUITools
GetActiveToggle	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	static public UIToggle GetActiveToggle (int group)$/;"	m	class:UIToggle
GetAtlasSprite	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public UISpriteData GetAtlasSprite ()$/;"	m	class:UISprite
GetBool	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public bool GetBool (string name, bool defaultValue) { return EditorPrefs.GetBool(name, defaultValue); }$/;"	m	class:NGUISettings
GetCamera	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static protected Camera GetCamera (SerializedProperty sp)$/;"	m	class:UIRectEditor
GetCell	Assets/Scripts/Grid/Grid.cs	/^        public PlayableCell GetCell(IntVect2 key) {$/;"	m	class:Shanghai.Grid.Grid
GetCell	Assets/Scripts/Grid/SourceRow.cs	/^        public SourceCell GetCell(int key) {$/;"	m	class:Shanghai.Grid.SourceRow
GetCenter	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	static protected Vector3 GetCenter (GameObject go)$/;"	m	class:UIKeyNavigation
GetCharUnderMouse	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected int GetCharUnderMouse ()$/;"	m	class:UIInput
GetCharacterIndex	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int GetCharacterIndex (Vector2 localPos) { return GetCharacterIndexAtPosition(localPos); }$/;"	m	class:UILabel
GetCharacterIndex	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int GetCharacterIndex (Vector3 worldPos) { return GetCharacterIndexAtPosition(worldPos); }$/;"	m	class:UILabel
GetCharacterIndex	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int GetCharacterIndex (int currentIndex, KeyCode key)$/;"	m	class:UILabel
GetCharacterIndexAtPosition	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int GetCharacterIndexAtPosition (Vector2 localPos)$/;"	m	class:UILabel
GetCharacterIndexAtPosition	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int GetCharacterIndexAtPosition (Vector3 worldPos)$/;"	m	class:UILabel
GetClassID	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public int GetClassID (System.Type type)$/;"	m	class:NGUIEditorTools
GetClosestCharacter	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public int GetClosestCharacter (BetterList<Vector3> verts, Vector2 pos)$/;"	m	class:NGUIText
GetColor	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public Color GetColor (string name, Color c)$/;"	m	class:NGUISettings
GetDatabase	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	static InvDatabase GetDatabase (int dbID)$/;"	m	class:InvDatabase	file:
GetDependencyList	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static List<AssetEntry> GetDependencyList (Object[] objects, bool reverse)$/;"	m	class:NGUISelectionTools	file:
GetDependencyText	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static string GetDependencyText (Object[] objects, bool reverse)$/;"	m	class:NGUISelectionTools	file:
GetDescription	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^	static public string GetDescription (Identifier i)$/;"	m	class:InvStat
GetDirection	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static int GetDirection (KeyCode up, KeyCode down)$/;"	m	class:UICamera	file:
GetDirection	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static int GetDirection (KeyCode up0, KeyCode up1, KeyCode down0, KeyCode down1)$/;"	m	class:UICamera	file:
GetDirection	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static int GetDirection (string axis)$/;"	m	class:UICamera	file:
GetDown	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	protected GameObject GetDown ()$/;"	m	class:UIKeyNavigation
GetEndOfLineThatFits	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public string GetEndOfLineThatFits (string text)$/;"	m	class:NGUIText
GetEnum	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public T GetEnum<T> (string name, T defaultValue)$/;"	m	class:NGUISettings
GetEnumerator	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public IEnumerator<T> GetEnumerator () { return mList.GetEnumerator(); }$/;"	m	class:BetterList
GetFaces	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static public string[] GetFaces (Font font)$/;"	m	class:FreeType
GetFloat	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public float GetFloat (string name, float defaultValue) { return EditorPrefs.GetFloat(name, defaultValue); }$/;"	m	class:NGUISettings
GetFuncName	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public string GetFuncName (object obj, string method)$/;"	m	class:NGUITools
GetGlyph	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public BMGlyph GetGlyph (int index) { return GetGlyph(index, false); }$/;"	m	class:BMFont
GetGlyph	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public BMGlyph GetGlyph (int index, bool createIfMissing)$/;"	m	class:BMFont
GetGlyph	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public GlyphInfo GetGlyph (int ch, int prev)$/;"	m	class:NGUIText
GetGlyphWidth	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public float GetGlyphWidth (int ch, int prev)$/;"	m	class:NGUIText
GetHandles	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public Vector3[] GetHandles (Vector3[] corners)$/;"	m	class:UIWidgetInspector
GetHashCode	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public override int GetHashCode () { return s_Hash; }$/;"	m	class:EventDelegate
GetHashCode	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public override int GetHashCode () { return s_Hash; }$/;"	m	class:PropertyReference
GetHelpURL	Assets/Addons/NGUI/Scripts/Editor/NGUIHelp.cs	/^	static public string GetHelpURL (Type type)$/;"	m	class:NGUIHelp
GetHierarchy	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public string GetHierarchy (GameObject obj)$/;"	m	class:NGUITools
GetHorizontal	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static UIWidget.Pivot GetHorizontal (UIWidget.Pivot pivot)$/;"	m	class:UIWidgetInspector	file:
GetInstance	Assets/Libs/Singleton.cs	/^    public static T GetInstance(bool logError) {$/;"	m	class:MonoSingleton
GetInt	Assets/Addons/NGUI/Scripts/Editor/BMFontReader.cs	/^	static int GetInt (string s)$/;"	m	class:BMFontReader	file:
GetInt	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public int GetInt (string name, int defaultValue) { return EditorPrefs.GetInt(name, defaultValue); }$/;"	m	class:NGUISettings
GetItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public InvGameItem GetItem (int slot) { return (slot < items.Count) ? mItems[slot] : null; }$/;"	m	class:UIItemStorage
GetItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	InvBaseItem GetItem (int id16)$/;"	m	class:InvDatabase	file:
GetItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	public InvGameItem GetItem (InvBaseItem.Slot slot)$/;"	m	class:InvEquipment
GetKerning	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int GetKerning (int previousChar)$/;"	m	class:BMGlyph
GetLeft	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	protected GameObject GetLeft ()$/;"	m	class:UIKeyNavigation
GetLeftText	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected string GetLeftText ()$/;"	m	class:UIInput
GetListOfPanels	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	static List<UIPanel> GetListOfPanels ()$/;"	m	class:UIPanelTool	file:
GetListOfSprites	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public BetterList<string> GetListOfSprites ()$/;"	m	class:UIAtlas
GetListOfSprites	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public BetterList<string> GetListOfSprites (string match)$/;"	m	class:UIAtlas
GetLocalPos	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected Vector3 GetLocalPos (AnchorPoint ac, Transform trans)$/;"	m	class:UIRect
GetMainGameViewSize	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static public Vector2 GetMainGameViewSize ()$/;"	m	class:UIPanel
GetMethodName	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		static string GetMethodName (Callback callback) { return callback.Method.Name; }$/;"	m	class:EventDelegate	file:
GetMethodName	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		static string GetMethodName (Callback callback)$/;"	m	class:EventDelegate	file:
GetMethods	Assets/Addons/NGUI/Scripts/Editor/EventDelegateEditor.cs	/^	static List<Entry> GetMethods (GameObject target)$/;"	m	class:EventDelegateEditor	file:
GetMissionFromCellKey	Assets/Scripts/GameModel.cs	/^        public Mission GetMissionFromCellKey(IntVect2 key) {$/;"	m	class:Shanghai.GameModel
GetMouse	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public MouseOrTouch GetMouse (int button) { return mMouse[button]; }$/;"	m	class:UICamera
GetName	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^	static public string GetName (Identifier i)$/;"	m	class:InvStat
GetName	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	static string GetName (System.Type t)$/;"	m	class:ComponentSelector	file:
GetNames	Assets/Addons/NGUI/Scripts/Editor/EventDelegateEditor.cs	/^	static string[] GetNames (List<Entry> list, string choice, out int index)$/;"	m	class:EventDelegateEditor	file:
GetNames	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^	static public string[] GetNames (List<Entry> list, string choice, out int index)$/;"	m	class:PropertyReferenceDrawer
GetNode	Assets/Addons/RetinaPro/XMLParser/XMLNode.cs	/^	public XMLNode GetNode(string path)$/;"	m	class:XMLNode
GetNodeList	Assets/Addons/RetinaPro/XMLParser/XMLNode.cs	/^	public XMLNodeList GetNodeList(string path)$/;"	m	class:XMLNode
GetObject	Assets/Addons/RetinaPro/XMLParser/XMLNode.cs	/^	private object GetObject(string path)$/;"	m	class:XMLNode	file:
GetPipeString	Assets/Scripts/Controllers/CellController.cs	/^        private string GetPipeString(PlayableCell.PipeType type) {$/;"	m	class:Shanghai.Controllers.CellController	file:
GetPivot	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public UIWidget.Pivot GetPivot (Vector2 offset)$/;"	m	class:NGUIMath
GetPivotOffset	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Vector2 GetPivotOffset (UIWidget.Pivot pv)$/;"	m	class:NGUIMath
GetPivotUnderMouse	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public UIWidget.Pivot GetPivotUnderMouse (Vector3[] worldPos, Event e, bool[] resizable, bool movable, ref Action action)$/;"	m	class:UIWidgetInspector
GetPixelSizeAdjustment	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public float GetPixelSizeAdjustment (int height)$/;"	m	class:UIRoot
GetPixelSizeAdjustment	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	static public float GetPixelSizeAdjustment (GameObject go)$/;"	m	class:UIRoot
GetProperties	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^	static public List<Entry> GetProperties (GameObject target, bool read, bool write)$/;"	m	class:PropertyReferenceDrawer
GetPropertyHeight	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^	public override float GetPropertyHeight (SerializedProperty prop, GUIContent label)$/;"	m	class:PropertyReferenceDrawer
GetPropertyType	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public Type GetPropertyType ()$/;"	m	class:PropertyReference
GetRandomCell	Assets/Scripts/Grid/Grid.cs	/^        public bool GetRandomCell(ref IntVect2 key) {$/;"	m	class:Shanghai.Grid.Grid
GetRect	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static protected UIRect GetRect (SerializedProperty sp)$/;"	m	class:UIRectEditor
GetRight	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	GameObject GetRight ()$/;"	m	class:UIKeyNavigation	file:
GetRightText	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected string GetRightText ()$/;"	m	class:UIInput
GetRoot	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public GameObject GetRoot (GameObject go)$/;"	m	class:NGUITools
GetSaveableTexturePath	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public string GetSaveableTexturePath (UIAtlas atlas)$/;"	m	class:NGUIEditorTools
GetScreenDistance	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public float GetScreenDistance (Vector3 worldPos, Vector2 mousePos)$/;"	m	class:UIWidgetInspector
GetScreenDistance	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public float GetScreenDistance (Vector3[] worldPoints, Vector2 mousePos, out int index)$/;"	m	class:UIWidgetInspector
GetSelectedTextures	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	List<Texture> GetSelectedTextures ()$/;"	m	class:UIAtlasMaker	file:
GetSelection	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected string GetSelection ()$/;"	m	class:UIInput
GetSelectionFolder	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public string GetSelectionFolder ()$/;"	m	class:NGUIEditorTools
GetSides	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Vector3[] GetSides (this Camera cam)$/;"	m	class:NGUITools
GetSides	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Vector3[] GetSides (this Camera cam, Transform relativeTo)$/;"	m	class:NGUITools
GetSides	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Vector3[] GetSides (this Camera cam, float depth)$/;"	m	class:NGUITools
GetSides	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Vector3[] GetSides (this Camera cam, float depth, Transform relativeTo)$/;"	m	class:NGUITools
GetSides	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public Vector3[] GetSides (Transform relativeTo)$/;"	m	class:UIRect.AnchorPoint
GetSides	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public virtual Vector3[] GetSides (Transform relativeTo)$/;"	m	class:UIRect
GetSides	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public override Vector3[] GetSides (Transform relativeTo)$/;"	m	class:UIWidget
GetSides	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override Vector3[] GetSides (Transform relativeTo)$/;"	m	class:UILabel
GetSides	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public override Vector3[] GetSides (Transform relativeTo)$/;"	m	class:UIPanel
GetSourceCell	Assets/Scripts/Grid/Grid.cs	/^        public SourceCell GetSourceCell(int key) {$/;"	m	class:Shanghai.Grid.Grid
GetSourceFromCell	Assets/Scripts/Grid/Grid.cs	/^        public Source GetSourceFromCell(int key) {$/;"	m	class:Shanghai.Grid.Grid
GetSprite	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public UISpriteData GetSprite (string name)$/;"	m	class:UIAtlas
GetSpriteList	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	Dictionary<string, int> GetSpriteList (List<Texture> textures)$/;"	m	class:UIAtlasMaker	file:
GetString	Assets/Addons/NGUI/Scripts/Editor/BMFontReader.cs	/^	static string GetString (string s)$/;"	m	class:BMFontReader	file:
GetString	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public string GetString (string name, string defaultValue) { return EditorPrefs.GetString(name, defaultValue); }$/;"	m	class:NGUISettings
GetSymbol	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public BMSymbol GetSymbol (string text, int index, int textLength)$/;"	m	class:NGUIText
GetSymbol	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	BMSymbol GetSymbol (string sequence, bool createIfMissing)$/;"	m	class:UIFont	file:
GetTouch	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public MouseOrTouch GetTouch (int id)$/;"	m	class:UICamera
GetTypeName	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public string GetTypeName (UnityEngine.Object obj)$/;"	m	class:NGUITools
GetTypeName	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public string GetTypeName<T> ()$/;"	m	class:NGUITools
GetUp	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	protected GameObject GetUp ()$/;"	m	class:UIKeyNavigation
GetUrlAtCharacterIndex	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public string GetUrlAtCharacterIndex (int characterIndex)$/;"	m	class:UILabel
GetUrlAtPosition	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public string GetUrlAtPosition (Vector2 localPos) { return GetUrlAtCharacterIndex(GetCharacterIndexAtPosition(localPos)); }$/;"	m	class:UILabel
GetUrlAtPosition	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public string GetUrlAtPosition (Vector3 worldPos) { return GetUrlAtCharacterIndex(GetCharacterIndexAtPosition(worldPos)); }$/;"	m	class:UILabel
GetValue	Assets/Addons/RetinaPro/XMLParser/XMLNode.cs	/^	public string GetValue(string path)$/;"	m	class:XMLNode
GetVertical	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static UIWidget.Pivot GetVertical (UIWidget.Pivot pivot)$/;"	m	class:UIWidgetInspector	file:
GetViewSize	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public Vector2 GetViewSize ()$/;"	m	class:UIPanel
GetWidgets	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	static List<UIWidget> GetWidgets (UIPanel panel)$/;"	m	class:UIPanelTool	file:
GetWidgets	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	static void GetWidgets (Transform t, List<UIWidget> widgets)$/;"	m	class:UIPanelTool	file:
GetWindowSize	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	Vector2 GetWindowSize ()$/;"	m	class:UIPanel	file:
GetWordAtCharacterIndex	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public string GetWordAtCharacterIndex (int characterIndex)$/;"	m	class:UILabel
GetWordAtPosition	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public string GetWordAtPosition (Vector2 localPos) { return GetWordAtCharacterIndex(GetCharacterIndexAtPosition(localPos)); }$/;"	m	class:UILabel
GetWordAtPosition	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public string GetWordAtPosition (Vector3 worldPos) { return GetWordAtCharacterIndex(GetCharacterIndexAtPosition(worldPos)); }$/;"	m	class:UILabel
GetWorldCorners	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Vector3[] GetWorldCorners (this Camera cam)$/;"	m	class:NGUITools
GetWorldCorners	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Vector3[] GetWorldCorners (this Camera cam, Transform relativeTo)$/;"	m	class:NGUITools
GetWorldCorners	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Vector3[] GetWorldCorners (this Camera cam, float depth)$/;"	m	class:NGUITools
GetWorldCorners	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Vector3[] GetWorldCorners (this Camera cam, float depth, Transform relativeTo)$/;"	m	class:NGUITools
GlyphInfo	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	public class GlyphInfo$/;"	c	class:NGUIText
Green	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^		Green,$/;"	e	enum:NGUISettings.ColorMode	file:
Grid	Assets/Scripts/GameModel.cs	/^        public Grid.Grid Grid {$/;"	p	class:Shanghai.GameModel
Grid	Assets/Scripts/Grid/Grid.cs	/^        public Grid(int size) {$/;"	m	class:Shanghai.Grid.Grid
Grid	Assets/Scripts/Grid/Grid.cs	/^    public class Grid {$/;"	c	namespace:Shanghai.Grid
GridCell	Assets/Scripts/Grid/GridCell.cs	/^        public GridCell(IntVect2 key) {$/;"	m	class:Shanghai.Grid.GridCell
GridCell	Assets/Scripts/Grid/GridCell.cs	/^    public class GridCell {$/;"	c	namespace:Shanghai.Grid
GridController	Assets/Scripts/Shanghai.cs	/^        public PlayGridController GridController;$/;"	f	class:Shanghai.Shanghai
HORI	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
HasEquipped	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	public bool HasEquipped (InvBaseItem.Slot slot)$/;"	m	class:InvEquipment
HasEquipped	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	public bool HasEquipped (InvGameItem item)$/;"	m	class:InvEquipment
HasInstance	Assets/Libs/Singleton.cs	/^    public static bool HasInstance() {$/;"	m	class:MonoSingleton
HasPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UI2DSpriteEditor.cs	/^	public override bool HasPreviewGUI ()$/;"	m	class:UI2DSpriteEditor
HasPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	public override bool HasPreviewGUI () { return true; }$/;"	m	class:UIAtlasInspector
HasPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	public override bool HasPreviewGUI () { return mView != View.Nothing; }$/;"	m	class:UIFontInspector
HasPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UISpriteInspector.cs	/^	public override bool HasPreviewGUI () { return !serializedObject.isEditingMultipleObjects; }$/;"	m	class:UISpriteInspector
HasPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UITextureInspector.cs	/^	public override bool HasPreviewGUI ()$/;"	m	class:UITextureInspector
HasSource	Assets/Scripts/Grid/SourceRow.cs	/^        public bool HasSource(int key) {$/;"	m	class:Shanghai.Grid.SourceRow
HasTransformChanged	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	bool HasTransformChanged ()$/;"	m	class:UIWidget	file:
HasValidSelection	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static bool HasValidSelection()$/;"	m	class:NGUISelectionTools	file:
HasValidTransform	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static bool HasValidTransform()$/;"	m	class:NGUISelectionTools	file:
Health	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Health,$/;"	e	enum:InvStat.Identifier	file:
Health	Assets/Scripts/Entities/Target.cs	/^        public float Health = 100f;$/;"	f	class:Shanghai.Entities.Target
HealthColour	Assets/Scripts/ShanghaiConfig.cs	/^        public Color HealthColour = new Color(0.0f, 0.0f, 0.0f);$/;"	f	class:Shanghai.ShanghaiConfig
HealthDropOnMissionComplete	Assets/Scripts/ShanghaiConfig.cs	/^        public float HealthDropOnMissionComplete = 20f;$/;"	f	class:Shanghai.ShanghaiConfig
HealthIncPerSecond	Assets/Scripts/ShanghaiConfig.cs	/^        public float HealthIncPerSecond = 1f;$/;"	f	class:Shanghai.ShanghaiConfig
HealthLabel	Assets/Scripts/Controllers/TargetController.cs	/^        public UILabel HealthLabel;$/;"	f	class:Shanghai.Controllers.TargetController
Help	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Help () { NGUIHelp.Show(); }$/;"	m	class:NGUIMenu
HexToColor	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Color HexToColor (uint val)$/;"	m	class:NGUIMath
HexToDecimal	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public int HexToDecimal (char ch)$/;"	m	class:NGUIMath
Hidden	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^		Hidden,$/;"	e	enum:UIDrawCallViewer.Visibility	file:
Hidden	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^		Hidden,$/;"	e	enum:UIPanelTool.Visibility	file:
HideMoveTool	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void HideMoveTool (bool hide)$/;"	m	class:NGUIEditorTools
Highlight	Assets/Addons/NGUI/Scripts/Editor/UIButtonEditor.cs	/^	enum Highlight$/;"	g	class:UIButtonEditor
Highlight	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void Highlight (UILabel lbl, bool instant)$/;"	m	class:UIPopupList	file:
HitCheck	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public delegate bool HitCheck (Vector3 worldPos);$/;"	m	class:UIWidget
Horizontal	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^		Horizontal,$/;"	e	enum:UIDragDropItem.Restriction	file:
Horizontal	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^		Horizontal,$/;"	e	enum:UIGrid.Arrangement	file:
Horizontal	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^		Horizontal,$/;"	e	enum:UIGrid.Sorting	file:
Horizontal	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^		Horizontal,$/;"	e	enum:UIKeyNavigation.Constraint	file:
Horizontal	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^		Horizontal,$/;"	e	enum:UIScrollBar.Direction	file:
Horizontal	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		Horizontal,$/;"	e	enum:UIScrollView.Movement	file:
Horizontal	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^		Horizontal,$/;"	e	enum:UISlider.Direction	file:
Horizontal	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^		Horizontal,$/;"	e	enum:UITable.Sorting	file:
Horizontal	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Horizontal,$/;"	e	enum:UISprite.FillDirection	file:
Horizontal	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^		Horizontal,$/;"	e	enum:UIStretch.Style	file:
HorizontalList	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static protected string[] HorizontalList = new string[] { "Target's Left", "Target's Center", "Target's Right", "Custom", "Set to Current Position" };$/;"	f	class:UIRectEditor
Horizontally	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Horizontally,$/;"	e	enum:UISprite.Flip	file:
Hover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^		Hover,$/;"	e	enum:UIButtonColor.State	file:
Identifier	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^	public enum Identifier$/;"	g	class:InvStat
ImageButton	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		ImageButton,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
Import	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		Import,		\/\/ Imported bitmap font$/;"	e	enum:UIFontMaker.Create	file:
ImportFont	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	static void ImportFont (UIFont font, Create create, Material mat)$/;"	m	class:UIFontMaker	file:
ImportTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Texture2D ImportTexture (Texture tex, bool forInput, bool force, bool alphaTransparency)$/;"	m	class:NGUIEditorTools
ImportTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Texture2D ImportTexture (string path, bool forInput, bool force, bool alphaTransparency)$/;"	m	class:NGUIEditorTools
ImportedBitmap	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		ImportedBitmap,		\/\/ Imported bitmap font, created using BMFont or another external tool$/;"	e	enum:UIFontMaker.FontType	file:
Improved	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Improved,$/;"	e	enum:InvGameItem.Quality	file:
IncReputation	Assets/Scripts/Entities/Client.cs	/^        public void IncReputation() {$/;"	m	class:Shanghai.Entities.Client
IncreaseCellBounty	Assets/Scripts/Grid/Grid.cs	/^        public void IncreaseCellBounty(IntVect2 cellKey, int amount) {$/;"	m	class:Shanghai.Grid.Grid
Init	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public void Init (int width, int height, bool rotations)$/;"	m	class:UITexturePacker
Init	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	protected virtual void Init ()$/;"	m	class:UIGrid
Init	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	protected virtual void Init ()$/;"	m	class:UITable
Init	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected void Init ()$/;"	m	class:UIInput
Init	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^    static void Init () $/;"	m	class:retinaProAtlasWindow	file:
Init	Assets/Addons/RetinaPro/Editor/retinaProDeviceWindow.cs	/^    static void Init () $/;"	m	class:retinaProDeviceWindow	file:
Init	Assets/Addons/RetinaPro/Editor/retinaProPreviewWindow.cs	/^    static void Init () $/;"	m	class:retinaProPreviewWindow	file:
Input	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		Input,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
InputType	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public enum InputType$/;"	g	class:UIInput
Insert	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public Rect Insert (int width, int height, FreeRectChoiceHeuristic method)$/;"	m	class:UITexturePacker
Insert	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public void Insert (List<Rect> rects, List<Rect> dst, FreeRectChoiceHeuristic method)$/;"	m	class:UITexturePacker
Insert	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public void Insert (int index, T item) { mList.Insert(index, item); }$/;"	m	class:BetterList
Insert	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected virtual void Insert (string text)$/;"	m	class:UIInput
Instance	Assets/Libs/Singleton.cs	/^    public static T Instance {$/;"	p	class:MonoSingleton
Instance	Assets/Libs/Singleton.cs	/^    public static readonly T Instance = new T();$/;"	f	class:T
Instant	Assets/Addons/NGUI/Scripts/Editor/UIToggleInspector.cs	/^		Instant,$/;"	e	enum:UIToggleInspector.Transition	file:
IntPadding	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Vector4 IntPadding (string prefix, Vector4 v)$/;"	m	class:NGUIEditorTools
IntPair	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public IntVector IntPair (string prefix, string leftCaption, string rightCaption, int x, int y)$/;"	m	class:NGUIEditorTools
IntRect	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Rect IntRect (string prefix, Rect rect)$/;"	m	class:NGUIEditorTools
IntToBinary	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public string IntToBinary (int val, int bits)$/;"	m	class:NGUIMath
IntToColor	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Color IntToColor (int val)$/;"	m	class:NGUIMath
IntVect2	Assets/Libs/IntVect2.cs	/^    public IntVect2(int x, int y) {$/;"	m	class:IntVect2
IntVect2	Assets/Libs/IntVect2.cs	/^public class IntVect2 {$/;"	c
IntVector	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	public struct IntVector$/;"	s	class:NGUIEditorTools
Integer	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		Integer,$/;"	e	enum:UIInput.Validation	file:
Intelligence	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Intelligence,$/;"	e	enum:InvStat.Identifier	file:
InvAttachmentPoint	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvAttachmentPoint.cs	/^public class InvAttachmentPoint : MonoBehaviour$/;"	c
InvBaseItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^public class InvBaseItem$/;"	c
InvDatabase	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^public class InvDatabase : MonoBehaviour$/;"	c
InvDatabaseInspector	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvDatabaseInspector.cs	/^public class InvDatabaseInspector : Editor$/;"	c
InvEquipment	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^public class InvEquipment : MonoBehaviour$/;"	c
InvFindItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^public class InvFindItem : ScriptableWizard$/;"	c
InvGameItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public InvGameItem (int id) { mBaseItemID = id; }$/;"	m	class:InvGameItem
InvGameItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public InvGameItem (int id, InvBaseItem bi) { mBaseItemID = id; mBaseItem = bi; }$/;"	m	class:InvGameItem
InvGameItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^public class InvGameItem$/;"	c
InvStat	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^public class InvStat$/;"	c
Invalidate	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public virtual void Invalidate (bool includeChildren)$/;"	m	class:UIRect
Invalidate	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public override void Invalidate (bool includeChildren)$/;"	m	class:UIWidget
Invalidate	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public override void Invalidate (bool includeChildren)$/;"	m	class:UIPanel
Invisible	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Invisible,$/;"	e	enum:UISprite.AdvancedType	file:
IsActive	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public bool IsActive (Behaviour mb)$/;"	m	class:NGUITools
IsBottom	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static bool IsBottom (UIWidget.Pivot pivot)$/;"	m	class:UIWidgetInspector	file:
IsChild	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public bool IsChild (Transform parent, Transform child)$/;"	m	class:NGUITools
IsCommon	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static protected bool IsCommon (float relative) { return (relative == 0f || relative == 0.5f || relative == 1f); }$/;"	m	class:UIRectEditor
IsContainedIn	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	bool IsContainedIn (Rect a, Rect b)$/;"	m	class:UITexturePacker	file:
IsDragging	Assets/Scripts/Controllers/TelegramController.cs	/^        public bool IsDragging {$/;"	p	class:Shanghai.Controllers.TelegramController
IsEndPoint	Assets/Scripts/ShanghaiUtils.cs	/^        public static bool IsEndPoint(PlayableCell cell) {$/;"	m	class:Shanghai.ShanghaiUtils
IsFree	Assets/Scripts/Grid/PlayableCell.cs	/^        public bool IsFree() {$/;"	m	class:Shanghai.Grid.PlayableCell
IsHighlighted	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public bool IsHighlighted (GameObject go)$/;"	m	class:UICamera
IsHorizontal	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static protected bool[] IsHorizontal = new bool[] { true, true, false, false };$/;"	f	class:UIRectEditor
IsLeft	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static bool IsLeft (UIWidget.Pivot pivot)$/;"	m	class:UIWidgetInspector	file:
IsModifierActive	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	bool IsModifierActive ()$/;"	m	class:UIKeyBinding	file:
IsPressed	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public bool IsPressed (GameObject go)$/;"	m	class:UICamera
IsRect	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static protected bool IsRect (SerializedProperty sp)$/;"	m	class:UIRectEditor
IsResetPositionValid	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	static bool IsResetPositionValid (Transform targetTransform)$/;"	m	class:NGUITransformInspector	file:
IsResetRotationValid	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	static bool IsResetRotationValid (Transform targetTransform)$/;"	m	class:NGUITransformInspector	file:
IsResetScaleValid	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	static bool IsResetScaleValid (Transform targetTransform)$/;"	m	class:NGUITransformInspector	file:
IsRight	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static bool IsRight (UIWidget.Pivot pivot)$/;"	m	class:UIWidgetInspector	file:
IsTTD	Assets/Scripts/Grid/Mission.cs	/^        public bool IsTTD(float delta) {$/;"	m	class:Shanghai.Grid.Mission
IsTop	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static bool IsTop (UIWidget.Pivot pivot)$/;"	m	class:UIWidgetInspector	file:
IsUniform	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool IsUniform (GameObject go)$/;"	m	class:NGUIEditorTools
IsUniform	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool IsUniform (Vector3 scale)$/;"	m	class:NGUIEditorTools
IsValid	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		static bool IsValid (Callback callback) { return callback != null && callback.Method != null; }$/;"	m	class:EventDelegate	file:
IsValid	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		static bool IsValid (Callback callback)$/;"	m	class:EventDelegate	file:
IsValid	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static bool IsValid (Callback callback) { return callback != null; }$/;"	m	class:EventDelegate	file:
IsValid	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public bool IsValid (List<EventDelegate> list)$/;"	m	class:EventDelegate
IsVisible	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static bool IsVisible (DepthEntry de)$/;"	m	class:UICamera	file:
IsVisible	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static bool IsVisible (ref RaycastHit hit)$/;"	m	class:UICamera	file:
IsVisible	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool IsVisible (UIWidget w)$/;"	m	class:UIPanel
IsVisible	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool IsVisible (Vector3 a, Vector3 b, Vector3 c, Vector3 d)$/;"	m	class:UIPanel
IsVisible	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool IsVisible (Vector3 worldPos)$/;"	m	class:UIPanel
JusticeColour	Assets/Scripts/ShanghaiConfig.cs	/^        public Color JusticeColour = new Color(0.0f, 0.0f, 0.0f);$/;"	f	class:Shanghai.ShanghaiConfig
Justified	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		Justified,$/;"	e	enum:NGUIText.Alignment	file:
KeepCurrent	Assets/Addons/NGUI/Scripts/Editor/UIPlayAnimationEditor.cs	/^		KeepCurrent,$/;"	e	enum:UIPlayAnimationEditor.SelectedObject	file:
KeepCurrent	Assets/Addons/NGUI/Scripts/Editor/UIPlayTweenEditor.cs	/^		KeepCurrent,$/;"	e	enum:UIPlayTweenEditor.SelectedObject	file:
Key	Assets/Scripts/Controllers/CellController.cs	/^        public IntVect2 Key;$/;"	f	class:Shanghai.Controllers.CellController
Key	Assets/Scripts/Controllers/ClientController.cs	/^        public string Key {$/;"	p	class:Shanghai.Controllers.ClientController
Key	Assets/Scripts/Controllers/SourceController.cs	/^        public int Key = 0;$/;"	f	class:Shanghai.Controllers.SourceController
Key	Assets/Scripts/Controllers/TargetController.cs	/^        public string Key {$/;"	p	class:Shanghai.Controllers.TargetController
Key	Assets/Scripts/Entities/Entity.cs	/^        public string Key;$/;"	f	class:Shanghai.Entities.Entity
Key	Assets/Scripts/Grid/GridCell.cs	/^        public IntVect2 Key;$/;"	f	class:Shanghai.Grid.GridCell
Key	Assets/Scripts/Grid/SourceCell.cs	/^        public int Key;$/;"	f	class:Shanghai.Grid.SourceCell
KeyCodeDelegate	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public delegate void KeyCodeDelegate (GameObject go, KeyCode key);$/;"	m	class:UIEventListener
KeyboardType	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public enum KeyboardType$/;"	g	class:UIInput
KeysMatch	Assets/Scripts/ShanghaiUtils.cs	/^        public static bool KeysMatch(IntVect2 k1, IntVect2 k2) {$/;"	m	class:Shanghai.ShanghaiUtils
LEFT	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
LT	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char LT     = '<';$/;"	f	class:XMLParser	file:
Label	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		Label,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
LagPosition	Assets/Addons/NGUI/Examples/Scripts/Other/LagPosition.cs	/^public class LagPosition : MonoBehaviour$/;"	c
LagRotation	Assets/Addons/NGUI/Examples/Scripts/Other/LagRotation.cs	/^public class LagRotation : MonoBehaviour$/;"	c
LanguageSelection	Assets/Addons/NGUI/Scripts/Interaction/LanguageSelection.cs	/^public class LanguageSelection : MonoBehaviour$/;"	c
LateUpdate	Assets/Addons/NGUI/Examples/Scripts/Other/LookAtTarget.cs	/^	void LateUpdate ()$/;"	m	class:LookAtTarget	file:
LateUpdate	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	void LateUpdate ()$/;"	m	class:UIDragObject	file:
LateUpdate	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	void LateUpdate ()$/;"	m	class:UIScrollView	file:
LateUpdate	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	protected virtual void LateUpdate ()$/;"	m	class:UITable
LateUpdate	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	void LateUpdate ()$/;"	m	class:PropertyBinding	file:
LateUpdate	Assets/Addons/NGUI/Scripts/Tweening/AnimatedAlpha.cs	/^	void LateUpdate ()$/;"	m	class:AnimatedAlpha	file:
LateUpdate	Assets/Addons/NGUI/Scripts/Tweening/AnimatedColor.cs	/^	void LateUpdate () { mWidget.color = color; }$/;"	m	class:AnimatedColor	file:
LateUpdate	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void LateUpdate ()$/;"	m	class:UICamera	file:
LateUpdate	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	void LateUpdate ()$/;"	m	class:UIPanel	file:
LateUpdate	Assets/Addons/NGUI/Scripts/UI/UIViewport.cs	/^	void LateUpdate ()$/;"	m	class:UIViewport	file:
Latin	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		Latin,		\/\/ Ascii + various accented character such as "é"$/;"	e	enum:UIFontMaker.CharacterMap	file:
LayerMaskField	Assets/Addons/NGUI/Scripts/Editor/UICameraTool.cs	/^	public static int LayerMaskField (int mask, params GUILayoutOption[] options)$/;"	m	class:UICameraTool
LayerMaskField	Assets/Addons/NGUI/Scripts/Editor/UICameraTool.cs	/^	public static int LayerMaskField (string label, int mask, params GUILayoutOption[] options)$/;"	m	class:UICameraTool
Left	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		Left,$/;"	e	enum:NGUIText.Alignment	file:
Left	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		Left,$/;"	e	enum:UIWidget.Pivot	file:
Left	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^		Left,$/;"	e	enum:UIAnchor.Side	file:
LeftToRight	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^		LeftToRight,$/;"	e	enum:UIProgressBar.FillDirection	file:
LegacyEvent	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public delegate void LegacyEvent (string val);$/;"	m	class:UIPopupList
Legendary	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Legendary,$/;"	e	enum:InvGameItem.Quality	file:
Lerp	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public float Lerp (float from, float to, float factor) { return from * (1f - factor) + to * factor; }$/;"	m	class:NGUIMath
Linear	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^		Linear,$/;"	e	enum:UITweener.Method	file:
ListDependencies	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static void ListDependencies()$/;"	m	class:NGUISelectionTools	file:
ListenerException	Assets/Addons/Messenger/Messenger.cs	/^                public ListenerException(string msg)$/;"	m	class:MessengerInternal.ListenerException
ListenerException	Assets/Addons/Messenger/Messenger.cs	/^        public class ListenerException : Exception {$/;"	c	class:MessengerInternal
Load	Assets/Addons/NGUI/Scripts/Editor/BMFontReader.cs	/^	static public void Load (BMFont font, string name, byte[] bytes)$/;"	m	class:BMFontReader
Load	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static void Load ()$/;"	m	class:UICreateWidgetWizard	file:
Load	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public void Load (TextAsset asset)$/;"	m	class:Localization
Load	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public byte[] Load (string fileName)$/;"	m	class:NGUITools
LoadAsset	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Object LoadAsset (string path)$/;"	m	class:NGUIEditorTools
LoadCSV	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public bool LoadCSV (TextAsset asset)$/;"	m	class:Localization
LoadLevelOnClick	Assets/Addons/NGUI/Examples/Scripts/Other/LoadLevelOnClick.cs	/^public class LoadLevelOnClick : MonoBehaviour$/;"	c
LoadLibrary	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static extern IntPtr LoadLibrary (string lpFileName);$/;"	m	class:FreeType	file:
LoadSpriteData	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	static public void LoadSpriteData (UIAtlas atlas, TextAsset asset)$/;"	m	class:NGUIJson
LoadSpriteData	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	static public void LoadSpriteData (UIAtlas atlas, string jsonData)$/;"	m	class:NGUIJson
LoadSpriteData	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	static void LoadSpriteData (UIAtlas atlas, Hashtable decodedHash)$/;"	m	class:NGUIJson	file:
LoadString	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string LoadString (string field) { string s = EditorPrefs.GetString(field); return (string.IsNullOrEmpty(s)) ? "" : s; }$/;"	m	class:UICreateWidgetWizard	file:
LoadTextures	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static List<Texture2D> LoadTextures (List<Texture> textures)$/;"	m	class:UIAtlasMaker	file:
LoadValue	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public void LoadValue ()$/;"	m	class:UIInput
LocalToValue	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected virtual float LocalToValue (Vector2 localPos)$/;"	m	class:UIProgressBar
LocalToValue	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	protected override float LocalToValue (Vector2 localPos)$/;"	m	class:UIScrollBar
Localization	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^public class Localization : MonoBehaviour$/;"	c
Localize	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public string Localize (string key) { return Get(key); }$/;"	m	class:Localization
Log	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^	static public void Log (params object[] objs)$/;"	m	class:NGUIDebug
LogString	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^	static void LogString (string text)$/;"	m	class:NGUIDebug	file:
LookAtTarget	Assets/Addons/NGUI/Examples/Scripts/Other/LookAtTarget.cs	/^public class LookAtTarget : MonoBehaviour$/;"	c
Loop	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^		Loop,$/;"	e	enum:UITweener.Style	file:
MOBILE	Assets/Addons/NGUI/Scripts/Editor/UIInputEditor.cs	/^#define MOBILE$/;"	d	file:
MOBILE	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^#define MOBILE$/;"	d	file:
MakePixelPerfect	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Rect MakePixelPerfect (Rect rect)$/;"	m	class:NGUIMath
MakePixelPerfect	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Rect MakePixelPerfect (Rect rect, int width, int height)$/;"	m	class:NGUIMath
MakePixelPerfect	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void MakePixelPerfect (Transform t)$/;"	m	class:NGUITools
MakePixelPerfect	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	virtual public void MakePixelPerfect ()$/;"	m	class:UIWidget
MakePixelPerfect	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public override void MakePixelPerfect ()$/;"	m	class:UI2DSprite
MakePixelPerfect	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override void MakePixelPerfect ()$/;"	m	class:UILabel
MakePixelPerfect	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public override void MakePixelPerfect ()$/;"	m	class:UISprite
MakePixelPerfect	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	public override void MakePixelPerfect ()$/;"	m	class:UITexture
MakeTextureAnAtlas	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static bool MakeTextureAnAtlas (string path, bool force, bool alphaTransparency)$/;"	m	class:NGUIEditorTools	file:
MakeTextureReadable	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool MakeTextureReadable (string path, bool force)$/;"	m	class:NGUIEditorTools
Mana	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Mana,$/;"	e	enum:InvStat.Identifier	file:
MarkAsChanged	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	void MarkAsChanged ()$/;"	m	class:UIFontInspector	file:
MarkAsChanged	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	void MarkAsChanged ()$/;"	m	class:UIFontMaker	file:
MarkAsChanged	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public void MarkAsChanged () { mIsValid = false; }$/;"	m	class:BMSymbol
MarkAsChanged	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public virtual void MarkAsChanged ()$/;"	m	class:UIWidget
MarkAsChanged	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public void MarkAsChanged ()$/;"	m	class:UIAtlas
MarkAsChanged	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public void MarkAsChanged ()$/;"	m	class:UIFont
MarkAsChanged	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override void MarkAsChanged ()$/;"	m	class:UILabel
MarkParentAsChanged	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void MarkParentAsChanged (GameObject go)$/;"	m	class:NGUITools
MarkSpriteAsDirty	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void MarkSpriteAsDirty ()$/;"	m	class:UIAtlasInspector	file:
MatchSymbol	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public BMSymbol MatchSymbol (string text, int offset, int textLength)$/;"	m	class:UIFont
MaxHealth	Assets/Scripts/ShanghaiConfig.cs	/^        public float MaxHealth = 100f;$/;"	f	class:Shanghai.ShanghaiConfig
MaxReputation	Assets/Scripts/ShanghaiConfig.cs	/^        public float MaxReputation = 100f;$/;"	f	class:Shanghai.ShanghaiConfig
MenuEntry	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^		public MenuEntry (string name, GameObject go) { this.name = name; this.go = go; }$/;"	m	class:NGUIEditorTools.MenuEntry
MenuEntry	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	class MenuEntry$/;"	c	class:NGUIEditorTools
Messenger	Assets/Addons/Messenger/Messenger.cs	/^static public class Messenger {$/;"	c
Messenger	Assets/Addons/Messenger/Messenger.cs	/^static public class Messenger<T, U, V> {$/;"	c
Messenger	Assets/Addons/Messenger/Messenger.cs	/^static public class Messenger<T, U> {$/;"	c
Messenger	Assets/Addons/Messenger/Messenger.cs	/^static public class Messenger<T> {$/;"	c
MessengerInternal	Assets/Addons/Messenger/Messenger.cs	/^static internal class MessengerInternal {$/;"	c
MessengerMode	Assets/Addons/Messenger/Messenger.cs	/^public enum MessengerMode {$/;"	g
MessengerUnitTest	Assets/Addons/Messenger/MessengerUnitTest.cs	/^class MessengerUnitTest {$/;"	c
Method	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public enum Method$/;"	g	class:UITweener
MinHealth	Assets/Scripts/ShanghaiConfig.cs	/^        public float MinHealth = 10f;$/;"	f	class:Shanghai.ShanghaiConfig
MinReputation	Assets/Scripts/ShanghaiConfig.cs	/^        public float MinReputation = 10f;$/;"	f	class:Shanghai.ShanghaiConfig
MinistryColours	Assets/Scripts/ShanghaiConfig.cs	/^        public Dictionary<string, Color> MinistryColours = new Dictionary<string, Color>();$/;"	f	class:Shanghai.ShanghaiConfig
Mission	Assets/Scripts/Grid/ActiveMission.cs	/^        public Mission Mission;$/;"	f	class:Shanghai.Grid.ActiveMission
Mission	Assets/Scripts/Grid/Mission.cs	/^        public Mission(IntVect2 cellKey, string clientID, string targetID, float ttl) {$/;"	m	class:Shanghai.Grid.Mission
Mission	Assets/Scripts/Grid/Mission.cs	/^    public class Mission {$/;"	c	namespace:Shanghai.Grid
MissionFlagAlpha	Assets/Scripts/ShanghaiConfig.cs	/^        public float MissionFlagAlpha = 0.7f;$/;"	f	class:Shanghai.ShanghaiConfig
MissionInterval	Assets/Scripts/ShanghaiConfig.cs	/^        public float MissionInterval = 8.0f; \/\/the 'agents' that appear on the map$/;"	f	class:Shanghai.ShanghaiConfig
MissionTargetAlpha	Assets/Scripts/ShanghaiConfig.cs	/^        public float MissionTargetAlpha = 0.5f;$/;"	f	class:Shanghai.ShanghaiConfig
MissionWaitTimeDeviance	Assets/Scripts/ShanghaiConfig.cs	/^        public float MissionWaitTimeDeviance = 2.0f;$/;"	f	class:Shanghai.ShanghaiConfig
MissionWaitTimeMedium	Assets/Scripts/ShanghaiConfig.cs	/^        public float MissionWaitTimeMedium = 5.0f;$/;"	f	class:Shanghai.ShanghaiConfig
Missions	Assets/Scripts/GameModel.cs	/^        public List<Mission> Missions {$/;"	p	class:Shanghai.GameModel
Modifier	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^	public enum Modifier$/;"	g	class:InvStat
Modifier	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	public enum Modifier$/;"	g	class:UIKeyBinding
Momentum	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^		Momentum,$/;"	e	enum:UIDragObject.DragEffect	file:
Momentum	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		Momentum,$/;"	e	enum:UIScrollView.DragEffect	file:
MomentumAndSpring	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^		MomentumAndSpring,$/;"	e	enum:UIDragObject.DragEffect	file:
MomentumAndSpring	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		MomentumAndSpring,$/;"	e	enum:UIScrollView.DragEffect	file:
Money	Assets/Scripts/GameModel.cs	/^        public int Money {$/;"	p	class:Shanghai.GameModel
MoneyController	Assets/Scripts/Controllers/MoneyController.cs	/^    public class MoneyController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
MoneyLabel	Assets/Scripts/Controllers/MoneyController.cs	/^        public UILabel MoneyLabel;$/;"	f	class:Shanghai.Controllers.MoneyController
MonoBehaviour	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void AddChild<T> (object obj) where T : MonoBehaviour$/;"	p	class:NGUIContextMenu
MonoBehaviour	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void AddMissingItem<T> (GameObject target, string name) where T : MonoBehaviour$/;"	p	class:NGUIContextMenu
MonoBehaviour	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public T ReplaceClass<T> (MonoBehaviour mb) where T : MonoBehaviour { return ReplaceClass(mb, typeof(T)).targetObject as T; }$/;"	p	class:NGUIEditorTools
MonoBehaviour	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public int GetClassID<T> () where T : MonoBehaviour { return GetClassID(typeof(T)); }$/;"	p	class:NGUIEditorTools
MonoBehaviour	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static T Add<T> () where T : MonoBehaviour$/;"	p	class:NGUIMenu
MonoSingleton	Assets/Libs/Singleton.cs	/^public class MonoSingleton<T> : UnityEngine.MonoBehaviour where T : UnityEngine.MonoBehaviour {$/;"	c
Mouse	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		Mouse,$/;"	e	enum:UICamera.ControlScheme	file:
MouseOrTouch	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public class MouseOrTouch$/;"	c	class:UICamera
Move	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^		Move,$/;"	e	enum:UIWidgetInspector.Action	file:
Move	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	void Move (Vector3 worldDelta)$/;"	m	class:UIDragObject	file:
MoveAbsolute	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public void MoveAbsolute (Vector3 absolute)$/;"	m	class:UIScrollView
MoveRect	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public void MoveRect (UIRect rect, float x, float y)$/;"	m	class:NGUIMath
MoveRelative	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public virtual void MoveRelative (Vector3 relative)$/;"	m	class:UIScrollView
MoveWidget	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public void MoveWidget (UIRect w, float x, float y) { MoveRect(w, x, y); }$/;"	m	class:NGUIMath
Movement	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public enum Movement$/;"	g	class:UIScrollView
NE	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
NGUI	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^		NGUI,$/;"	e	enum:UILabelInspector.FontType	file:
NGUIContextMenu	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^public static class NGUIContextMenu$/;"	c
NGUIDebug	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^public class NGUIDebug : MonoBehaviour$/;"	c
NGUIEditorTools	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^public class NGUIEditorTools$/;"	c
NGUIHandles	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^public static class NGUIHandles$/;"	c
NGUIHelp	Assets/Addons/NGUI/Scripts/Editor/NGUIHelp.cs	/^static public class NGUIHelp$/;"	c
NGUIJson	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^public class NGUIJson$/;"	c
NGUIMath	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^static public class NGUIMath$/;"	c
NGUIMenu	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^static public class NGUIMenu$/;"	c
NGUISelectionTools	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^public class NGUISelectionTools$/;"	c
NGUISettings	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^public class NGUISettings$/;"	c
NGUISnap	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^public static class NGUISnap$/;"	c
NGUIText	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^static public class NGUIText$/;"	c
NGUITools	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^static public class NGUITools$/;"	c
NGUITransformInspector	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^public class NGUITransformInspector : Editor$/;"	c
NONE	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
NW	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
Name	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		Name,$/;"	e	enum:UIInput.Validation	file:
NamePhonePad	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		NamePhonePad = 6,$/;"	e	enum:UIInput.KeyboardType	file:
Never	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		Never,$/;"	e	enum:UILabel.Crispness	file:
None	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^		None,			\/\/ First element MUST be 'None'$/;"	e	enum:InvBaseItem.Slot	file:
None	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^		None = 0,$/;"	e	enum:NGUITransformInspector.Axes	file:
None	Assets/Addons/NGUI/Scripts/Editor/UICreateNewUIWizard.cs	/^		None,$/;"	e	enum:UICreateNewUIWizard.CameraType	file:
None	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		None,$/;"	e	enum:UIFontMaker.Create	file:
None	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^		None,$/;"	e	enum:UIRectEditor.AnchorType	file:
None	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^		None,$/;"	e	enum:UIWidgetInspector.Action	file:
None	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^		None,$/;"	e	enum:UIDragDropItem.Restriction	file:
None	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^		None,$/;"	e	enum:UIDragObject.DragEffect	file:
None	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^		None,$/;"	e	enum:UIGrid.Sorting	file:
None	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^		None,$/;"	e	enum:UIKeyBinding.Modifier	file:
None	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^		None,$/;"	e	enum:UIKeyNavigation.Constraint	file:
None	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		None,$/;"	e	enum:UIScrollView.DragEffect	file:
None	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^		None,$/;"	e	enum:UITable.Sorting	file:
None	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		None,$/;"	e	enum:NGUIText.SymbolStyle	file:
None	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^		None = 0,$/;"	e	enum:UIDrawCall.Clipping	file:
None	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		None,$/;"	e	enum:UICamera.ClickNotification	file:
None	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		None,$/;"	e	enum:UIInput.Validation	file:
None	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		None,$/;"	e	enum:UILabel.Effect	file:
None	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^		None,$/;"	e	enum:UIStretch.Style	file:
Normal	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^		Normal,$/;"	e	enum:UIAtlasInspector.AtlasType	file:
Normal	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^		Normal,$/;"	e	enum:UIButtonColor.State	file:
Normal	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		Normal,$/;"	e	enum:NGUIText.SymbolStyle	file:
Normalize	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void Normalize () { NGUITools.NormalizeDepths(); }$/;"	m	class:NGUIMenu
NormalizeDepths	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void NormalizeDepths ()$/;"	m	class:NGUITools
NormalizePanelDepths	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void NormalizePanelDepths ()$/;"	m	class:NGUITools
NormalizeWidgetDepths	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void NormalizeWidgetDepths ()$/;"	m	class:NGUITools
Nothing	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Nothing,$/;"	e	enum:UIFontInspector.View	file:
Nothing	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Nothing,$/;"	e	enum:UISprite.Flip	file:
Notify	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public void Notify (GameObject go, string funcName, object obj)$/;"	m	class:UICamera
NotifyListeners	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	void NotifyListeners ()$/;"	m	class:SpringPosition	file:
NumberPad	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		NumberPad = 4,$/;"	e	enum:UIInput.KeyboardType	file:
NumbersAndPunctuation	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		NumbersAndPunctuation = 2,$/;"	e	enum:UIInput.KeyboardType	file:
Numeric	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^		Numeric,	\/\/ 0 through 9$/;"	e	enum:UIFontMaker.CharacterMap	file:
OBSTACLE_PREFIX	Assets/Scripts/Controllers/CellController.cs	/^        public static readonly string OBSTACLE_PREFIX = "obstacle";$/;"	f	class:Shanghai.Controllers.CellController
Object	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	static public void Draw<T> (T obj, OnSelectionCallback cb, bool editButton, params GUILayoutOption[] options) where T : Object$/;"	p	class:ComponentSelector
Object	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	static public void Draw<T> (string buttonName, T obj, OnSelectionCallback cb, bool editButton, params GUILayoutOption[] options) where T : Object$/;"	p	class:ComponentSelector
Object	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	static public void Show<T> (OnSelectionCallback cb) where T : Object { Show<T>(cb, new string[] {".prefab"}); }$/;"	p	class:ComponentSelector
Object	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	static public void Show<T> (OnSelectionCallback cb, string[] extensions) where T : Object$/;"	p	class:ComponentSelector
Object	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public T GUIDToObject<T> (string guid) where T : Object$/;"	p	class:NGUIEditorTools
Object	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public T LoadAsset<T> (string path) where T: Object$/;"	p	class:NGUIEditorTools
Object	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public T Get<T> (string name, T defaultValue) where T : Object$/;"	p	class:NGUISettings
Object	Assets/Libs/Singleton.cs	/^        public static T FindObjectOfType<T>() where T : Object {$/;"	p	class:MonoSingleton
Object	Assets/Libs/Singleton.cs	/^        public static T GetSingleton<T>(bool logError) where T : Object {$/;"	p	class:MonoSingleton
Object	Assets/Libs/Singleton.cs	/^    public static T GetSingleton<T>() where T : Object {$/;"	p	class:MonoSingleton
ObjectDelegate	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public delegate void ObjectDelegate (GameObject go, GameObject draggedObject);$/;"	m	class:UIEventListener
ObjectToGUID	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public string ObjectToGUID (Object obj)$/;"	m	class:NGUIEditorTools
Occupancy	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public float Occupancy ()$/;"	m	class:UITexturePacker
OnActivate	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnActivate,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnActivateFalse	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnActivateFalse,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnActivateTrue	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnActivateTrue,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnAnchor	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected abstract void OnAnchor ();$/;"	m	class:UIRect
OnAnchor	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected override void OnAnchor ()$/;"	m	class:UIWidget
OnAnchor	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	protected override void OnAnchor ()$/;"	m	class:UILabel
OnAnchor	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	protected override void OnAnchor ()$/;"	m	class:UIPanel
OnApplicationPause	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	void OnApplicationPause (bool paused) { if (!paused) MarkAsChanged(); }$/;"	m	class:UIWidget	file:
OnApplicationPause	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void OnApplicationPause ()$/;"	m	class:UICamera	file:
OnBackground	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	void OnBackground (string spriteName)$/;"	m	class:UIPopupListInspector	file:
OnBitmapFont	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	void OnBitmapFont (Object obj)$/;"	m	class:UIPopupListInspector	file:
OnBoxCollider	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void OnBoxCollider (object obj) { NGUITools.AddWidgetCollider(obj as GameObject); }$/;"	m	class:NGUIContextMenu	file:
OnBroadcasting	Assets/Addons/Messenger/Messenger.cs	/^        static public void OnBroadcasting(string eventType, MessengerMode mode) {$/;"	m	class:MessengerInternal
OnButton	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnButton (string val) { mButton = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnCellDragEnd	Assets/Scripts/Path/PathDrawer.cs	/^        private void OnCellDragEnd() {$/;"	m	class:Shanghai.Path.PathDrawer	file:
OnCellDragged	Assets/Scripts/Path/PathDrawer.cs	/^        private void OnCellDragged(IntVect2 cellKey) {$/;"	m	class:Shanghai.Path.PathDrawer	file:
OnCellProgressed	Assets/Scripts/GameModel.cs	/^        private void OnCellProgressed(IntVect2 cellKey, float progress) {$/;"	m	class:Shanghai.GameModel	file:
OnCellUpdated	Assets/Scripts/Controllers/PlayGridController.cs	/^        private void OnCellUpdated(PlayableCell cell) {$/;"	m	class:Shanghai.Controllers.PlayGridController	file:
OnChange	Assets/Addons/NGUI/Scripts/Interaction/LanguageSelection.cs	/^	void OnChange ()$/;"	m	class:LanguageSelection	file:
OnChange	Assets/Addons/NGUI/Scripts/Interaction/UISoundVolume.cs	/^	void OnChange ()$/;"	m	class:UISoundVolume	file:
OnCheck	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnCheck (string val) { mCheck = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnCheckBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnCheckBG (string val) { mCheckBG = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnClick	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/EquipRandomItem.cs	/^	void OnClick()$/;"	m	class:EquipRandomItem	file:
OnClick	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	void OnClick ()$/;"	m	class:UIItemSlot	file:
OnClick	Assets/Addons/NGUI/Examples/Scripts/Other/LoadLevelOnClick.cs	/^	void OnClick ()$/;"	m	class:LoadLevelOnClick	file:
OnClick	Assets/Addons/NGUI/Examples/Scripts/Other/OpenURLOnClick.cs	/^	void OnClick ()$/;"	m	class:OpenURLOnClick	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	protected virtual void OnClick ()$/;"	m	class:UIButton
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIButtonActivate.cs	/^    void OnClick () { if (target != null) NGUITools.SetActive(target, state); }$/;"	m	class:UIButtonActivate	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^		OnClick,$/;"	e	enum:UIButtonMessage.Trigger	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	void OnClick () { if (enabled && trigger == Trigger.OnClick) Send(); }$/;"	m	class:UIButtonMessage	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnClick.cs	/^	void OnClick ()$/;"	m	class:UICenterOnClick	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	void OnClick ()$/;"	m	class:UIEventTrigger	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	void OnClick ()$/;"	m	class:UIForwardEvents	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	protected virtual void OnClick ()$/;"	m	class:UIKeyNavigation
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnClick () { if (enabled && trigger == Trigger.OnClick) Play(true, false); }$/;"	m	class:UIPlayAnimation	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^		OnClick,$/;"	e	enum:UIPlaySound.Trigger	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	void OnClick ()$/;"	m	class:UIPlaySound	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnClick ()$/;"	m	class:UIPlayTween	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void OnClick()$/;"	m	class:UIPopupList	file:
OnClick	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	void OnClick () { if (enabled) value = !value; }$/;"	m	class:UIToggle	file:
OnClick	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnClick,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnClick	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnClick ()					{ if (onClick != null) onClick(gameObject); }$/;"	m	class:UIEventListener	file:
OnClick	Assets/Addons/RetinaPro/retinaProButtonActivate.cs	/^	void OnClick ()$/;"	m	class:retinaProButtonActivate	file:
OnClick	Assets/Scripts/Controllers/GameOverController.cs	/^        public void OnClick() {$/;"	m	class:Shanghai.Controllers.GameOverController
OnClick	Assets/Scripts/Controllers/TitleController.cs	/^        public void OnClick() {$/;"	m	class:Shanghai.Controllers.TitleController
OnClientUpdated	Assets/Scripts/Controllers/ClientsController.cs	/^        private void OnClientUpdated(Client client) {$/;"	m	class:Shanghai.Controllers.ClientsController	file:
OnClippingMoved	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public delegate void OnClippingMoved (UIPanel panel);$/;"	m	class:UIPanel
OnCustomInput	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public delegate void OnCustomInput ();$/;"	m	class:UICamera
OnDelete	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void OnDelete (object obj)$/;"	m	class:NGUIContextMenu	file:
OnDeselectEvent	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected void OnDeselectEvent ()$/;"	m	class:UIInput
OnDesktop	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		OnDesktop,$/;"	e	enum:UILabel.Crispness	file:
OnDestroy	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	void OnDestroy () { instance = null; }$/;"	m	class:UICursor	file:
OnDestroy	Assets/Addons/NGUI/Examples/Scripts/Other/DownloadTexture.cs	/^	void OnDestroy ()$/;"	m	class:DownloadTexture	file:
OnDestroy	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	void OnDestroy () { instance = null; }$/;"	m	class:NGUITransformInspector	file:
OnDestroy	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	void OnDestroy () { if (mInstance == this) mInstance = null; }$/;"	m	class:Localization	file:
OnDestroy	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	void OnDestroy ()$/;"	m	class:UIDrawCall	file:
OnDestroy	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	void OnDestroy () { RemoveFromPanel(); }$/;"	m	class:UIWidget	file:
OnDestroy	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	void OnDestroy () { UICamera.onScreenResize -= ScreenSizeChanged; }$/;"	m	class:UIAnchor	file:
OnDestroy	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	void OnDestroy () { UICamera.onScreenResize -= ScreenSizeChanged; }$/;"	m	class:UIStretch	file:
OnDestroy	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	void OnDestroy () { mInstance = null; }$/;"	m	class:UITooltip	file:
OnDestroy	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	void OnDestroy()$/;"	m	class:retinaProAtlasWindow	file:
OnDestroy	Assets/Addons/RetinaPro/Editor/retinaProDeviceWindow.cs	/^	void OnDestroy()$/;"	m	class:retinaProDeviceWindow	file:
OnDestroy	Assets/Addons/RetinaPro/Editor/retinaProPreviewWindow.cs	/^	void OnDestroy()$/;"	m	class:retinaProPreviewWindow	file:
OnDestroy	Assets/Scripts/Controllers/ClientController.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Controllers.ClientController
OnDestroy	Assets/Scripts/Controllers/ClientsController.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Controllers.ClientsController
OnDestroy	Assets/Scripts/Controllers/MoneyController.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Controllers.MoneyController
OnDestroy	Assets/Scripts/Controllers/PlayGridController.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Controllers.PlayGridController
OnDestroy	Assets/Scripts/Controllers/SourceRowController.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Controllers.SourceRowController
OnDestroy	Assets/Scripts/Controllers/TargetController.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Controllers.TargetController
OnDestroy	Assets/Scripts/Controllers/TargetsController.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Controllers.TargetsController
OnDestroy	Assets/Scripts/Controllers/TelegramMachineController.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Controllers.TelegramMachineController
OnDestroy	Assets/Scripts/GameModel.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.GameModel
OnDestroy	Assets/Scripts/Path/PathDrawer.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Path.PathDrawer
OnDestroy	Assets/Scripts/Shanghai.cs	/^        public void OnDestroy() {$/;"	m	class:Shanghai.Shanghai
OnDimensionsChanged	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public delegate void OnDimensionsChanged ();$/;"	m	class:UIWidget
OnDisable	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	void OnDisable () { mIsDirty = true; }$/;"	m	class:InvDatabase	file:
OnDisable	Assets/Addons/NGUI/Examples/Scripts/Other/WindowAutoYaw.cs	/^	void OnDisable ()$/;"	m	class:WindowAutoYaw	file:
OnDisable	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	void OnDisable () { instance = null; }$/;"	m	class:SpriteSelector	file:
OnDisable	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void OnDisable () { instance = null; }$/;"	m	class:UIAtlasInspector	file:
OnDisable	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	void OnDisable () { instance = null; }$/;"	m	class:UIAtlasMaker	file:
OnDisable	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^	void OnDisable () { instance = null; }$/;"	m	class:UIDrawCallViewer	file:
OnDisable	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	void OnDisable () { NGUIEditorTools.HideMoveTool(false); }$/;"	m	class:UIPanelInspector	file:
OnDisable	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	void OnDisable () { instance = null; }$/;"	m	class:UIPanelTool	file:
OnDisable	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^	void OnDisable () { NGUIEditorTools.HideMoveTool(false); }$/;"	m	class:UIWidgetContainerEditor	file:
OnDisable	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	void OnDisable ()$/;"	m	class:UIWidgetInspector	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected virtual void OnDisable ()$/;"	m	class:UIButtonColor
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	void OnDisable ()$/;"	m	class:UIButtonOffset	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	void OnDisable ()$/;"	m	class:UIButtonRotation	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	void OnDisable ()$/;"	m	class:UIButtonScale	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropRoot.cs	/^	void OnDisable () { if (root == transform) root = null; }$/;"	m	class:UIDragDropRoot	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	void OnDisable () { mStarted = false; }$/;"	m	class:UIDragObject	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	protected virtual void OnDisable () { list.Remove(this); }$/;"	m	class:UIKeyNavigation
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnDisable ()$/;"	m	class:UIPlayAnimation	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnDisable ()$/;"	m	class:UIPlayTween	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^	void OnDisable ()$/;"	m	class:UISavedOption	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	void OnDisable () { list.Remove(this); }$/;"	m	class:UIScrollView	file:
OnDisable	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	void OnDisable () { list.Remove(this); }$/;"	m	class:UIToggle	file:
OnDisable	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	void OnDisable ()$/;"	m	class:Localization	file:
OnDisable	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	void OnDisable ()$/;"	m	class:UIDrawCall	file:
OnDisable	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected virtual void OnDisable ()$/;"	m	class:UIRect
OnDisable	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected override void OnDisable ()$/;"	m	class:UIWidget
OnDisable	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	void OnDisable () { mStarted = false; }$/;"	m	class:UITweener	file:
OnDisable	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void OnDisable () { list.Remove(this); }$/;"	m	class:UICamera	file:
OnDisable	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	void OnDisable () { Cleanup(); }$/;"	m	class:UIInput	file:
OnDisable	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	protected override void OnDisable ()$/;"	m	class:UILabel
OnDisable	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	protected override void OnDisable ()$/;"	m	class:UIPanel
OnDisable	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	protected virtual void OnDisable () { list.Remove(this); }$/;"	m	class:UIRoot
OnDisable	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	void OnDisable()$/;"	m	class:retinaProAtlasWindow	file:
OnDisable	Assets/Addons/RetinaPro/Editor/retinaProDeviceWindow.cs	/^	void OnDisable()$/;"	m	class:retinaProDeviceWindow	file:
OnDisable	Assets/Addons/RetinaPro/Editor/retinaProPreviewWindow.cs	/^	void OnDisable()$/;"	m	class:retinaProPreviewWindow	file:
OnDoubleClick	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^		OnDoubleClick,$/;"	e	enum:UIButtonMessage.Trigger	file:
OnDoubleClick	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	void OnDoubleClick () { if (enabled && trigger == Trigger.OnDoubleClick) Send(); }$/;"	m	class:UIButtonMessage	file:
OnDoubleClick	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	void OnDoubleClick ()$/;"	m	class:UIEventTrigger	file:
OnDoubleClick	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	void OnDoubleClick ()$/;"	m	class:UIForwardEvents	file:
OnDoubleClick	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnDoubleClick () { if (enabled && trigger == Trigger.OnDoubleClick) Play(true, false); }$/;"	m	class:UIPlayAnimation	file:
OnDoubleClick	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnDoubleClick ()$/;"	m	class:UIPlayTween	file:
OnDoubleClick	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnDoubleClick,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnDoubleClick	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnDoubleClick ()			{ if (onDoubleClick != null) onDoubleClick(gameObject); }$/;"	m	class:UIEventListener	file:
OnDrag	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	void OnDrag (Vector2 delta)$/;"	m	class:UIItemSlot	file:
OnDrag	Assets/Addons/NGUI/Examples/Scripts/Other/SpinWithMouse.cs	/^	void OnDrag (Vector2 delta)$/;"	m	class:SpinWithMouse	file:
OnDrag	Assets/Addons/NGUI/Scripts/Interaction/UIDragCamera.cs	/^	void OnDrag (Vector2 delta)$/;"	m	class:UIDragCamera	file:
OnDrag	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	void OnDrag (Vector2 delta)$/;"	m	class:UIDragDropItem	file:
OnDrag	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	void OnDrag (Vector2 delta)$/;"	m	class:UIDragObject	file:
OnDrag	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	void OnDrag (Vector2 delta)$/;"	m	class:UIDragResize	file:
OnDrag	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	void OnDrag (Vector2 delta)$/;"	m	class:UIDragScrollView	file:
OnDrag	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	void OnDrag (Vector2 delta)$/;"	m	class:UIForwardEvents	file:
OnDrag	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnDrag (Vector2 delta)		{ if (onDrag != null) onDrag(gameObject, delta); }$/;"	m	class:UIEventListener	file:
OnDrag	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected virtual void OnDrag (Vector2 delta)$/;"	m	class:UIInput
OnDrag	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public void OnDrag (Vector2 delta)$/;"	m	class:UITextList
OnDrag	Assets/Scripts/Controllers/CellController.cs	/^        public void OnDrag(Vector2 delta) {$/;"	m	class:Shanghai.Controllers.CellController
OnDragBackground	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	protected void OnDragBackground (GameObject go, Vector2 delta)$/;"	m	class:UISlider
OnDragDropMove	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected virtual void OnDragDropMove (Vector3 delta)$/;"	m	class:UIDragDropItem
OnDragDropRelease	Assets/Addons/NGUI/Examples/Scripts/Other/ExampleDragDropItem.cs	/^	protected override void OnDragDropRelease (GameObject surface)$/;"	m	class:ExampleDragDropItem
OnDragDropRelease	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected virtual void OnDragDropRelease (GameObject surface)$/;"	m	class:UIDragDropItem
OnDragDropStart	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected virtual void OnDragDropStart ()$/;"	m	class:UIDragDropItem
OnDragEnd	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	void OnDragEnd ()$/;"	m	class:UIDragDropItem	file:
OnDragEnd	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	void OnDragEnd () { mDragging = false; }$/;"	m	class:UIDragResize	file:
OnDragEnd	Assets/Scripts/Controllers/CellController.cs	/^        public void OnDragEnd() {$/;"	m	class:Shanghai.Controllers.CellController
OnDragEnd	Assets/Scripts/Controllers/SourceController.cs	/^        public void OnDragEnd() {$/;"	m	class:Shanghai.Controllers.SourceController
OnDragFinished	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	void OnDragFinished () { if (enabled) Recenter(); }$/;"	m	class:UICenterOnChild	file:
OnDragFinished	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public delegate void OnDragFinished ();$/;"	m	class:UIProgressBar
OnDragFinished	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public delegate void OnDragFinished ();$/;"	m	class:UIScrollView
OnDragForeground	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	protected void OnDragForeground (GameObject go, Vector2 delta)$/;"	m	class:UISlider
OnDragOut	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	protected override void OnDragOut ()$/;"	m	class:UIButton
OnDragOut	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected virtual void OnDragOut ()$/;"	m	class:UIButtonColor
OnDragOut	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	void OnDragOut (GameObject go)$/;"	m	class:UIEventTrigger	file:
OnDragOut	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnDragOut ()$/;"	m	class:UIPlayAnimation	file:
OnDragOut	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnDragOut ()$/;"	m	class:UIPlayTween	file:
OnDragOut	Assets/Scripts/Controllers/SourceController.cs	/^        public void OnDragOut(GameObject draggedGO) {$/;"	m	class:Shanghai.Controllers.SourceController
OnDragOver	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	protected override void OnDragOver ()$/;"	m	class:UIButton
OnDragOver	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected virtual void OnDragOver ()$/;"	m	class:UIButtonColor
OnDragOver	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	void OnDragOver (GameObject go)$/;"	m	class:UIEventTrigger	file:
OnDragOver	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnDragOver ()$/;"	m	class:UIPlayAnimation	file:
OnDragOver	Assets/Scripts/Controllers/CellController.cs	/^        public void OnDragOver(GameObject go) {$/;"	m	class:Shanghai.Controllers.CellController
OnDragOver	Assets/Scripts/Controllers/SourceController.cs	/^        public void OnDragOver(GameObject draggedGO) {$/;"	m	class:Shanghai.Controllers.SourceController
OnDragStart	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	void OnDragStart ()$/;"	m	class:UIDragDropItem	file:
OnDragStart	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	void OnDragStart ()$/;"	m	class:UIDragResize	file:
OnDragStart	Assets/Scripts/Controllers/TelegramController.cs	/^        public void OnDragStart() {$/;"	m	class:Shanghai.Controllers.TelegramController
OnDrawAppearance	Assets/Addons/NGUI/Scripts/Editor/UIProgressBarEditor.cs	/^	protected virtual void OnDrawAppearance () { }$/;"	m	class:UIProgressBarEditor
OnDrawExtraFields	Assets/Addons/NGUI/Scripts/Editor/UIProgressBarEditor.cs	/^	protected virtual void OnDrawExtraFields () { }$/;"	m	class:UIProgressBarEditor
OnDrawFinalProperties	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected virtual void OnDrawFinalProperties () { }$/;"	m	class:UIRectEditor
OnDrawFinalProperties	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	protected override void OnDrawFinalProperties ()$/;"	m	class:UIWidgetInspector
OnDrawGizmos	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	void OnDrawGizmos ()$/;"	m	class:UIScrollView	file:
OnDrawGizmos	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	void OnDrawGizmos ()$/;"	m	class:UIWidget	file:
OnDrawGizmos	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	void OnDrawGizmos ()$/;"	m	class:UIPanel	file:
OnDrop	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	void OnDrop (GameObject go)$/;"	m	class:UIItemSlot	file:
OnDrop	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	void OnDrop (GameObject go)$/;"	m	class:UIForwardEvents	file:
OnDrop	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnDrop (GameObject go)$/;"	m	class:UIPlayAnimation	file:
OnDrop	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnDrop (GameObject go)		{ if (onDrop != null) onDrop(gameObject, go); }$/;"	m	class:UIEventListener	file:
OnDynamicFont	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	void OnDynamicFont (Object obj)$/;"	m	class:UIPopupListInspector	file:
OnEnable	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	void OnEnable () { mIsDirty = true; }$/;"	m	class:InvDatabase	file:
OnEnable	Assets/Addons/NGUI/Examples/Scripts/Other/LagPosition.cs	/^	void OnEnable ()$/;"	m	class:LagPosition	file:
OnEnable	Assets/Addons/NGUI/Examples/Scripts/Other/LagRotation.cs	/^	void OnEnable()$/;"	m	class:LagRotation	file:
OnEnable	Assets/Addons/NGUI/Examples/Scripts/Other/TypewriterEffect.cs	/^	void OnEnable () { mReset = true; }$/;"	m	class:TypewriterEffect	file:
OnEnable	Assets/Addons/NGUI/Examples/Scripts/Other/WindowAutoYaw.cs	/^	void OnEnable ()$/;"	m	class:WindowAutoYaw	file:
OnEnable	Assets/Addons/NGUI/Examples/Scripts/Other/WindowDragTilt.cs	/^	void OnEnable ()$/;"	m	class:WindowDragTilt	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	void OnEnable ()$/;"	m	class:NGUITransformInspector	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	void OnEnable () { instance = this; }$/;"	m	class:SpriteSelector	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UI2DSpriteEditor.cs	/^	protected override void OnEnable ()$/;"	m	class:UI2DSpriteEditor
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void OnEnable () { instance = this; }$/;"	m	class:UIAtlasInspector	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	void OnEnable () { instance = this; }$/;"	m	class:UIAtlasMaker	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^	void OnEnable () { instance = this; }$/;"	m	class:UIDrawCallViewer	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UIEventTriggerEditor.cs	/^	void OnEnable ()$/;"	m	class:UIEventTriggerEditor	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^	protected override void OnEnable ()$/;"	m	class:UILabelInspector
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UILocalizeEditor.cs	/^	void OnEnable ()$/;"	m	class:UILocalizeEditor	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	protected override void OnEnable ()$/;"	m	class:UIPanelInspector
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	void OnEnable () { instance = this; }$/;"	m	class:UIPanelTool	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	void OnEnable ()$/;"	m	class:UIPopupListInspector	file:
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected virtual void OnEnable ()$/;"	m	class:UIRectEditor
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UITextureInspector.cs	/^	protected override void OnEnable ()$/;"	m	class:UITextureInspector
OnEnable	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	protected override void OnEnable ()$/;"	m	class:UIWidgetInspector
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	protected override void OnEnable ()$/;"	m	class:UIButton
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected virtual void OnEnable ()$/;"	m	class:UIButtonColor
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonKeys.cs	/^	protected override void OnEnable ()$/;"	m	class:UIButtonKeys
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	void OnEnable () { if (mStarted) OnHover(UICamera.IsHighlighted(gameObject)); }$/;"	m	class:UIButtonMessage	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	void OnEnable () { if (mStarted) OnHover(UICamera.IsHighlighted(gameObject)); }$/;"	m	class:UIButtonOffset	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	void OnEnable () { if (mStarted) OnHover(UICamera.IsHighlighted(gameObject)); }$/;"	m	class:UIButtonRotation	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	void OnEnable () { if (mStarted) OnHover(UICamera.IsHighlighted(gameObject)); }$/;"	m	class:UIButtonScale	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	void OnEnable () { Recenter(); }$/;"	m	class:UICenterOnChild	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropRoot.cs	/^	void OnEnable () { root = transform; }$/;"	m	class:UIDragDropRoot	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	void OnEnable ()$/;"	m	class:UIDragObject	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	void OnEnable ()$/;"	m	class:UIDragScrollView	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	void OnEnable ()$/;"	m	class:UIImageButton	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	protected virtual void OnEnable ()$/;"	m	class:UIKeyNavigation
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnEnable ()$/;"	m	class:UIPlayAnimation	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnEnable ()$/;"	m	class:UIPlayTween	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void OnEnable ()$/;"	m	class:UIPopupList	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^	void OnEnable ()$/;"	m	class:UISavedOption	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	void OnEnable () { list.Add(this); }$/;"	m	class:UIScrollView	file:
OnEnable	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	void OnEnable () { list.Add(this); }$/;"	m	class:UIToggle	file:
OnEnable	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	void OnEnable () { if (mInstance == null) mInstance = this; }$/;"	m	class:Localization	file:
OnEnable	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	void OnEnable () { mRebuildMat = true; }$/;"	m	class:UIDrawCall	file:
OnEnable	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		OnEnable,$/;"	e	enum:UIRect.AnchorUpdate	file:
OnEnable	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected virtual void OnEnable ()$/;"	m	class:UIRect
OnEnable	Assets/Addons/NGUI/Scripts/Tweening/AnimatedAlpha.cs	/^	void OnEnable ()$/;"	m	class:AnimatedAlpha	file:
OnEnable	Assets/Addons/NGUI/Scripts/Tweening/AnimatedColor.cs	/^	void OnEnable () { mWidget = GetComponent<UIWidget>(); LateUpdate(); }$/;"	m	class:AnimatedColor	file:
OnEnable	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void OnEnable () { list.Add(this); list.Sort(CompareFunc); }$/;"	m	class:UICamera	file:
OnEnable	Assets/Addons/NGUI/Scripts/UI/UILocalize.cs	/^	void OnEnable ()$/;"	m	class:UILocalize	file:
OnEnable	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	protected override void OnEnable ()$/;"	m	class:UIPanel
OnEnable	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	protected virtual void OnEnable () { list.Add(this); }$/;"	m	class:UIRoot
OnEnable	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	void OnEnable()$/;"	m	class:retinaProAtlasWindow	file:
OnEnable	Assets/Addons/RetinaPro/Editor/retinaProDeviceWindow.cs	/^	void OnEnable()$/;"	m	class:retinaProDeviceWindow	file:
OnEnable	Assets/Addons/RetinaPro/Editor/retinaProPreviewWindow.cs	/^	void OnEnable()$/;"	m	class:retinaProPreviewWindow	file:
OnFill	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	virtual public void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }$/;"	m	class:UIWidget
OnFill	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public override void OnFill (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:UI2DSprite
OnFill	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override void OnFill (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:UILabel
OnFill	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public override void OnFill (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:UISprite
OnFill	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	public override void OnFill (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:UITexture
OnFinished	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnFinished ()$/;"	m	class:UIPlayAnimation	file:
OnFinished	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnFinished ()$/;"	m	class:UIPlayTween	file:
OnFinished	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	public delegate void OnFinished ();$/;"	m	class:SpringPanel
OnFinished	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	public delegate void OnFinished ();$/;"	m	class:SpringPosition
OnFixedUpdate	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^		OnFixedUpdate,$/;"	e	enum:PropertyBinding.UpdateCondition	file:
OnFont	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnFont (Object obj) { NGUISettings.ambigiousFont = obj; }$/;"	m	class:UICreateWidgetWizard	file:
OnFontTextureChanged	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	static void OnFontTextureChanged ()$/;"	m	class:UILabel	file:
OnGUI	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^	void OnGUI ()$/;"	m	class:InvFindItem	file:
OnGUI	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	void OnGUI ()$/;"	m	class:ComponentSelector	file:
OnGUI	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^	public override void OnGUI (Rect rect, SerializedProperty prop, GUIContent label)$/;"	m	class:PropertyReferenceDrawer
OnGUI	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	void OnGUI ()$/;"	m	class:SpriteSelector	file:
OnGUI	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	void OnGUI ()$/;"	m	class:UIAtlasMaker	file:
OnGUI	Assets/Addons/NGUI/Scripts/Editor/UICameraTool.cs	/^	void OnGUI ()$/;"	m	class:UICameraTool	file:
OnGUI	Assets/Addons/NGUI/Scripts/Editor/UICreateNewUIWizard.cs	/^	void OnGUI ()$/;"	m	class:UICreateNewUIWizard	file:
OnGUI	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnGUI ()$/;"	m	class:UICreateWidgetWizard	file:
OnGUI	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^	void OnGUI ()$/;"	m	class:UIDrawCallViewer	file:
OnGUI	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	void OnGUI ()$/;"	m	class:UIFontMaker	file:
OnGUI	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	void OnGUI ()$/;"	m	class:UIPanelTool	file:
OnGUI	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^	void OnGUI()$/;"	m	class:NGUIDebug	file:
OnGUI	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	void OnGUI ()$/;"	m	class:UIInput	file:
OnGUI	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	void OnGUI () $/;"	m	class:retinaProAtlasWindow	file:
OnGUI	Assets/Addons/RetinaPro/Editor/retinaProDeviceWindow.cs	/^	void OnGUI () $/;"	m	class:retinaProDeviceWindow	file:
OnGUI	Assets/Addons/RetinaPro/Editor/retinaProPreviewWindow.cs	/^	void OnGUI () $/;"	m	class:retinaProPreviewWindow	file:
OnGameStart	Assets/Scripts/Shanghai.cs	/^        public void OnGameStart() {$/;"	m	class:Shanghai.Shanghai
OnGeometryUpdated	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public delegate void OnGeometryUpdated ();$/;"	m	class:UIPanel
OnGridUpdated	Assets/Scripts/Controllers/PlayGridController.cs	/^        private void OnGridUpdated(List<List<PlayableCell>> cells) {$/;"	m	class:Shanghai.Controllers.PlayGridController	file:
OnHelp	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void OnHelp (object obj) { NGUIHelp.Show(obj); }$/;"	m	class:NGUIContextMenu	file:
OnHighlight	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	void OnHighlight (string spriteName)$/;"	m	class:UIPopupListInspector	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected virtual void OnHover (bool isOver)$/;"	m	class:UIButtonColor
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIButtonMessage	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIButtonOffset	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIButtonRotation	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIButtonScale	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIEventTrigger	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIForwardEvents	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIImageButton	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIPlayAnimation	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIPlaySound	file:
OnHover	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnHover (bool isOver)$/;"	m	class:UIPlayTween	file:
OnHover	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnHover,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnHover	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnHover (bool isOver)		{ if (onHover != null) onHover(gameObject, isOver); }$/;"	m	class:UIEventListener	file:
OnHoverFalse	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnHoverFalse,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnHoverTrue	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnHoverTrue,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnImage0	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnImage0 (string val) { mImage0 = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnImage1	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnImage1 (string val) { mImage1 = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnImage2	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnImage2 (string val) { mImage2 = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnImage3	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnImage3 (string val) { mImage3 = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnInit	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	protected override void OnInit ()$/;"	m	class:UIButton
OnInit	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected virtual void OnInit ()$/;"	m	class:UIButtonColor
OnInit	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected virtual void OnInit ()$/;"	m	class:UIRect
OnInit	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected override void OnInit ()$/;"	m	class:UIWidget
OnInit	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	protected override void OnInit ()$/;"	m	class:UILabel
OnInit	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	protected override void OnInit ()$/;"	m	class:UIPanel
OnInit	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected override void OnInit ()$/;"	m	class:UISprite
OnInputBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnInputBG (string val) { mInputBG = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnInspectorGUI	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvDatabaseInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:InvDatabaseInspector
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/ActiveAnimationEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:ActiveAnimationEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:NGUITransformInspector
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/PropertyBindingEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:PropertyBindingEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenAlphaEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenAlphaEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenColorEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenColorEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenFOVEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenFOVEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenHeightEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenHeightEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenOrthoSizeEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenOrthoSizeEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenPositionEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenPositionEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenRotationEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenRotationEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenScaleEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenScaleEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenVolumeEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenVolumeEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/TweenWidthEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:TweenWidthEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIAtlasInspector
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIButtonColorEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIButtonColorEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIButtonKeysEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIButtonKeysEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIButtonMessageEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIButtonMessageEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UICameraEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UICameraEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIDragObjectEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIDragObjectEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIDrawCallInspector
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIEventTriggerEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIEventTriggerEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIFontInspector
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIForwardEventsEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIForwardEventsEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIImageButtonInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIImageButtonInspector
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIInputEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIInputEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIKeyNavigationEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIKeyNavigationEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UILocalizeEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UILocalizeEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIPlayAnimationEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIPlayAnimationEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIPlayTweenEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIPlayTweenEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIPopupListInspector
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIProgressBarEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIProgressBarEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIRectEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIRootEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIRootEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIScrollViewEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIScrollViewEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UISpriteAnimationInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UISpriteAnimationInspector
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIToggleInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIToggleInspector
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UITweenerEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UITweenerEditor
OnInspectorGUI	Assets/Addons/NGUI/Scripts/Editor/UIWrapContentEditor.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:UIWrapContentEditor
OnInspectorUpdate	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	void OnInspectorUpdate()$/;"	m	class:retinaProAtlasWindow	file:
OnItemHover	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void OnItemHover (GameObject go, bool isOver)$/;"	m	class:UIPopupList	file:
OnItemPress	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void OnItemPress (GameObject go, bool isPressed) { if (isPressed) Select(go.GetComponent<UILabel>(), true); }$/;"	m	class:UIPopupList	file:
OnKey	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	protected virtual void OnKey (KeyCode key)$/;"	m	class:UIKeyNavigation
OnKey	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void OnKey (KeyCode key)$/;"	m	class:UIPopupList	file:
OnKey	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	protected void OnKey (KeyCode key)$/;"	m	class:UISlider
OnKey	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnKey (KeyCode key)		{ if (onKey != null) onKey(gameObject, key); }$/;"	m	class:UIEventListener	file:
OnLateUpdate	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^		OnLateUpdate,$/;"	e	enum:PropertyBinding.UpdateCondition	file:
OnListBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnListBG (string val) { mListBG = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnListFG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnListFG (string val) { mListFG = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnListHL	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnListHL (string val) { mListHL = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnListenerAdding	Assets/Addons/Messenger/Messenger.cs	/^        static public void OnListenerAdding(string eventType, Delegate listenerBeingAdded) {$/;"	m	class:MessengerInternal
OnListenerRemoved	Assets/Addons/Messenger/Messenger.cs	/^        static public void OnListenerRemoved(string eventType) {$/;"	m	class:MessengerInternal
OnListenerRemoving	Assets/Addons/Messenger/Messenger.cs	/^        static public void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved) {$/;"	m	class:MessengerInternal
OnLocalize	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void OnLocalize () { if (isLocalized) TriggerCallbacks(); }$/;"	m	class:UIPopupList	file:
OnLocalize	Assets/Addons/NGUI/Scripts/UI/UILocalize.cs	/^	void OnLocalize ()$/;"	m	class:UILocalize	file:
OnMakePixelPerfect	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void OnMakePixelPerfect (object obj) { NGUITools.MakePixelPerfect(obj as Transform); }$/;"	m	class:NGUIContextMenu	file:
OnMissionCreated	Assets/Scripts/GameModel.cs	/^        private void OnMissionCreated(Mission mission) {$/;"	m	class:Shanghai.GameModel	file:
OnMissionFailed	Assets/Scripts/Shanghai.cs	/^        private void OnMissionFailed() {$/;"	m	class:Shanghai.Shanghai	file:
OnMoneyChanged	Assets/Scripts/Controllers/MoneyController.cs	/^        public void OnMoneyChanged(int money) {$/;"	m	class:Shanghai.Controllers.MoneyController
OnMouseOut	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^		OnMouseOut,$/;"	e	enum:UIButtonMessage.Trigger	file:
OnMouseOut	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^		OnMouseOut,$/;"	e	enum:UIPlaySound.Trigger	file:
OnMouseOver	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^		OnMouseOver,$/;"	e	enum:UIButtonMessage.Trigger	file:
OnMouseOver	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^		OnMouseOver,$/;"	e	enum:UIPlaySound.Trigger	file:
OnMove	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	protected virtual void OnMove (UIPanel panel) { WrapContent(); }$/;"	m	class:UIWrapContent
OnNGUIFont	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^	void OnNGUIFont (Object obj)$/;"	m	class:UILabelInspector	file:
OnPackageDelivered	Assets/Scripts/GameModel.cs	/^        private void OnPackageDelivered(List<IntVect2> path, Source source) {$/;"	m	class:Shanghai.GameModel	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected virtual void OnPress (bool isPressed)$/;"	m	class:UIButtonColor
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^		OnPress,$/;"	e	enum:UIButtonMessage.Trigger	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	void OnPress (bool isPressed)$/;"	m	class:UIButtonMessage	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	void OnPress (bool isPressed)$/;"	m	class:UIButtonOffset	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	void OnPress (bool isPressed)$/;"	m	class:UIButtonRotation	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	void OnPress (bool isPressed)$/;"	m	class:UIButtonScale	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIDragCamera.cs	/^	void OnPress (bool isPressed)$/;"	m	class:UIDragCamera	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	void OnPress (bool isPressed) { if (isPressed) mPressTime = RealTime.time; }$/;"	m	class:UIDragDropItem	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	void OnPress (bool pressed)$/;"	m	class:UIDragObject	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	void OnPress (bool pressed)$/;"	m	class:UIDragScrollView	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	void OnPress (bool pressed)$/;"	m	class:UIEventTrigger	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	void OnPress (bool pressed)$/;"	m	class:UIForwardEvents	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	void OnPress (bool pressed)$/;"	m	class:UIImageButton	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnPress (bool isPressed)$/;"	m	class:UIPlayAnimation	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^		OnPress,$/;"	e	enum:UIPlaySound.Trigger	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	void OnPress (bool isPressed)$/;"	m	class:UIPlaySound	file:
OnPress	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnPress (bool isPressed)$/;"	m	class:UIPlayTween	file:
OnPress	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnPress,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnPress	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnPress (bool isPressed)	{ if (onPress != null) onPress(gameObject, isPressed); }$/;"	m	class:UIEventListener	file:
OnPress	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected virtual void OnPress (bool isPressed)$/;"	m	class:UIInput
OnPress	Assets/Scripts/Controllers/TelegramController.cs	/^        public void OnPress(bool press) {$/;"	m	class:Shanghai.Controllers.TelegramController
OnPressBackground	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	protected void OnPressBackground (GameObject go, bool isPressed)$/;"	m	class:UISlider
OnPressFalse	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnPressFalse,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnPressForeground	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	protected void OnPressForeground (GameObject go, bool isPressed)$/;"	m	class:UISlider
OnPressTrue	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnPressTrue,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UI2DSpriteEditor.cs	/^	public override void OnPreviewGUI (Rect rect, GUIStyle background)$/;"	m	class:UI2DSpriteEditor
OnPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	public override void OnPreviewGUI (Rect rect, GUIStyle background)$/;"	m	class:UIAtlasInspector
OnPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	public override void OnPreviewGUI (Rect rect, GUIStyle background)$/;"	m	class:UIFontInspector
OnPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UISpriteInspector.cs	/^	public override void OnPreviewGUI (Rect rect, GUIStyle background)$/;"	m	class:UISpriteInspector
OnPreviewGUI	Assets/Addons/NGUI/Scripts/Editor/UITextureInspector.cs	/^	public override void OnPreviewGUI (Rect rect, GUIStyle background)$/;"	m	class:UITextureInspector
OnRelease	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^		OnRelease,$/;"	e	enum:UIButtonMessage.Trigger	file:
OnRelease	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^		OnRelease,$/;"	e	enum:UIPlaySound.Trigger	file:
OnReposition	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public delegate void OnReposition ();$/;"	m	class:UIGrid
OnReposition	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public delegate void OnReposition ();$/;"	m	class:UITable
OnSceneGUI	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	public void OnSceneGUI ()$/;"	m	class:UIPanelInspector
OnSceneGUI	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^	public void OnSceneGUI ()$/;"	m	class:UIWidgetContainerEditor
OnSceneGUI	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	public void OnSceneGUI ()$/;"	m	class:UIWidgetInspector
OnScreenResize	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public delegate void OnScreenResize ();$/;"	m	class:UICamera
OnScroll	Assets/Addons/NGUI/Scripts/Interaction/UIDragCamera.cs	/^	void OnScroll (float delta)$/;"	m	class:UIDragCamera	file:
OnScroll	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	void OnScroll (float delta)$/;"	m	class:UIDragObject	file:
OnScroll	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	void OnScroll (float delta)$/;"	m	class:UIDragScrollView	file:
OnScroll	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	void OnScroll (float delta)$/;"	m	class:UIForwardEvents	file:
OnScroll	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnScroll (float delta)		{ if (onScroll != null) onScroll(gameObject, delta); }$/;"	m	class:UIEventListener	file:
OnScroll	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public void OnScroll (float val)$/;"	m	class:UITextList
OnScrollBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnScrollBG (string val) { mScrollBG = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnScrollBar	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public void OnScrollBar ()$/;"	m	class:UIScrollView
OnScrollBar	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	void OnScrollBar ()$/;"	m	class:UITextList	file:
OnScrollFG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnScrollFG (string val) { mScrollFG = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected virtual void OnSelect (bool isSelected)$/;"	m	class:UIButtonColor
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	void OnSelect (bool isSelected)$/;"	m	class:UIButtonMessage	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	void OnSelect (bool isSelected)$/;"	m	class:UIButtonOffset	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	void OnSelect (bool isSelected)$/;"	m	class:UIButtonRotation	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	void OnSelect (bool isSelected)$/;"	m	class:UIButtonScale	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	void OnSelect (bool selected)$/;"	m	class:UIEventTrigger	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	void OnSelect (bool selected)$/;"	m	class:UIForwardEvents	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnSelect (bool isSelected)$/;"	m	class:UIPlayAnimation	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	void OnSelect (bool isSelected)$/;"	m	class:UIPlaySound	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnSelect (bool isSelected)$/;"	m	class:UIPlayTween	file:
OnSelect	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void OnSelect (bool isSelected) { if (!isSelected) Close(); }$/;"	m	class:UIPopupList	file:
OnSelect	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnSelect,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnSelect	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnSelect (bool selected)	{ if (onSelect != null) onSelect(gameObject, selected); }$/;"	m	class:UIEventListener	file:
OnSelect	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected virtual void OnSelect (bool isSelected)$/;"	m	class:UIInput
OnSelectAtlas	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void OnSelectAtlas (Object obj)$/;"	m	class:UIAtlasInspector	file:
OnSelectAtlas	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	void OnSelectAtlas (Object obj)$/;"	m	class:UIAtlasMaker	file:
OnSelectAtlas	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnSelectAtlas (Object obj)$/;"	m	class:UICreateWidgetWizard	file:
OnSelectAtlas	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	void OnSelectAtlas (Object obj)$/;"	m	class:UIFontInspector	file:
OnSelectAtlas	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	void OnSelectAtlas (Object obj)$/;"	m	class:UIFontMaker	file:
OnSelectAtlas	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	void OnSelectAtlas (Object obj)$/;"	m	class:UIPopupListInspector	file:
OnSelectAtlas	Assets/Addons/NGUI/Scripts/Editor/UISpriteInspector.cs	/^	void OnSelectAtlas (Object obj)$/;"	m	class:UISpriteInspector	file:
OnSelectEvent	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected void OnSelectEvent ()$/;"	m	class:UIInput
OnSelectFalse	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnSelectFalse,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnSelectFont	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnSelectFont (Object obj)$/;"	m	class:UICreateWidgetWizard	file:
OnSelectFont	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	void OnSelectFont (Object obj)$/;"	m	class:UIFontInspector	file:
OnSelectTrue	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		OnSelectTrue,$/;"	e	enum:AnimationOrTween.Trigger	file:
OnSelectionCallback	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	public delegate void OnSelectionCallback (Object obj);$/;"	m	class:ComponentSelector
OnSelectionChange	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	void OnSelectionChange () { mDelNames.Clear(); Repaint(); }$/;"	m	class:UIAtlasMaker	file:
OnSelectionChange	Assets/Addons/NGUI/Scripts/Editor/UICameraTool.cs	/^	void OnSelectionChange () { Repaint(); }$/;"	m	class:UICameraTool	file:
OnSelectionChange	Assets/Addons/NGUI/Scripts/Editor/UICreateNewUIWizard.cs	/^	void OnSelectionChange () { Repaint(); }$/;"	m	class:UICreateNewUIWizard	file:
OnSelectionChange	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnSelectionChange () { Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnSelectionChange	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^	void OnSelectionChange () { Repaint(); }$/;"	m	class:UIDrawCallViewer	file:
OnSelectionChange	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	void OnSelectionChange () { Repaint(); }$/;"	m	class:UIFontMaker	file:
OnSelectionChange	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	void OnSelectionChange () { Repaint(); }$/;"	m	class:UIPanelTool	file:
OnSetPath	Assets/Scripts/Shanghai.cs	/^        private void OnSetPath(List<IntVect2> path) {$/;"	m	class:Shanghai.Shanghai	file:
OnSliderBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnSliderBG (string val) { mSliderBG = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnSliderFG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnSliderFG (string val) { mSliderFG = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnSliderTB	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnSliderTB (string val) { mSliderTB = val; Save(); Repaint(); }$/;"	m	class:UICreateWidgetWizard	file:
OnSourceCellUpdated	Assets/Scripts/Controllers/SourceRowController.cs	/^        private void OnSourceCellUpdated(SourceCell sourceCell) {$/;"	m	class:Shanghai.Controllers.SourceRowController	file:
OnSourceCreated	Assets/Scripts/Controllers/TelegramMachineController.cs	/^        public void OnSourceCreated(Source source) {$/;"	m	class:Shanghai.Controllers.TelegramMachineController
OnSprite	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	void OnSprite (string val)$/;"	m	class:UICreateWidgetWizard	file:
OnSpriteSelection	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	void OnSpriteSelection (string sp)$/;"	m	class:SpriteSelector	file:
OnStart	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected virtual void OnStart() { }$/;"	m	class:UIProgressBar
OnStart	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	protected override void OnStart ()$/;"	m	class:UIScrollBar
OnStart	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	protected override void OnStart ()$/;"	m	class:UISlider
OnStart	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^		OnStart,$/;"	e	enum:PropertyBinding.UpdateCondition	file:
OnStart	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected abstract void OnStart ();$/;"	m	class:UIRect
OnStart	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected override void OnStart () { CreatePanel(); }$/;"	m	class:UIWidget
OnStart	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	protected override void OnStart ()$/;"	m	class:UILabel
OnStart	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	protected override void OnStart ()$/;"	m	class:UIPanel
OnSubmit	Assets/Addons/NGUI/Examples/Scripts/Other/ChatInput.cs	/^	public void OnSubmit ()$/;"	m	class:ChatInput
OnSubmit	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	void OnSubmit ()$/;"	m	class:UIForwardEvents	file:
OnSubmit	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	void OnSubmit () { if (UICamera.currentKey == keyCode && IsModifierActive()) mIgnoreUp = true; }$/;"	m	class:UIKeyBinding	file:
OnSubmit	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	void OnSubmit ()				{ if (onSubmit != null) onSubmit(gameObject); }$/;"	m	class:UIEventListener	file:
OnTargetUpdated	Assets/Scripts/Controllers/TargetsController.cs	/^        private void OnTargetUpdated(Target target) {$/;"	m	class:Shanghai.Controllers.TargetsController	file:
OnTelegramDropped	Assets/Scripts/GameModel.cs	/^        private void OnTelegramDropped(int key, Source source) {$/;"	m	class:Shanghai.GameModel	file:
OnTelegramDropped	Assets/Scripts/Grid/Grid.cs	/^        public void OnTelegramDropped(int key, Source source) {$/;"	m	class:Shanghai.Grid.Grid
OnTelegramOver	Assets/Scripts/Controllers/TelegramController.cs	/^        private void OnTelegramOver(SourceController srcCont) {$/;"	m	class:Shanghai.Controllers.TelegramController	file:
OnToggle	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void OnToggle ()$/;"	m	class:UIPlayAnimation	file:
OnToggle	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void OnToggle ()$/;"	m	class:UIPlayTween	file:
OnTooltip	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	void OnTooltip (bool show)$/;"	m	class:UIItemSlot	file:
OnUnityFont	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	void OnUnityFont (Object obj) { NGUISettings.ambigiousFont = obj; }$/;"	m	class:UIFontMaker	file:
OnUnityFont	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^	void OnUnityFont (Object obj)$/;"	m	class:UILabelInspector	file:
OnUpdate	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^		OnUpdate,$/;"	e	enum:PropertyBinding.UpdateCondition	file:
OnUpdate	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		OnUpdate,$/;"	e	enum:UIRect.AnchorUpdate	file:
OnUpdate	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected virtual void OnUpdate () { }$/;"	m	class:UIRect
OnUpdate	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected override void OnUpdate ()$/;"	m	class:UIWidget
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	protected override void OnUpdate (float factor, bool isFinished) { value = Mathf.Lerp(from, to, factor); }$/;"	m	class:TweenAlpha
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	protected override void OnUpdate (float factor, bool isFinished) { value = Color.Lerp(from, to, factor); }$/;"	m	class:TweenColor
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	protected override void OnUpdate (float factor, bool isFinished) { value = from * (1f - factor) + to * factor; }$/;"	m	class:TweenFOV
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	protected override void OnUpdate (float factor, bool isFinished)$/;"	m	class:TweenHeight
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	protected override void OnUpdate (float factor, bool isFinished) { value = from * (1f - factor) + to * factor; }$/;"	m	class:TweenOrthoSize
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	protected override void OnUpdate (float factor, bool isFinished) { value = from * (1f - factor) + to * factor; }$/;"	m	class:TweenPosition
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	protected override void OnUpdate (float factor, bool isFinished)$/;"	m	class:TweenRotation
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	protected override void OnUpdate (float factor, bool isFinished)$/;"	m	class:TweenScale
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	protected override void OnUpdate (float factor, bool isFinished)$/;"	m	class:TweenTransform
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	protected override void OnUpdate (float factor, bool isFinished)$/;"	m	class:TweenVolume
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	protected override void OnUpdate (float factor, bool isFinished)$/;"	m	class:TweenWidth
OnUpdate	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	abstract protected void OnUpdate (float factor, bool isFinished);$/;"	m	class:UITweener
OnUpdate	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	protected override void OnUpdate ()$/;"	m	class:UI2DSprite
OnUpdate	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected override void OnUpdate ()$/;"	m	class:UISprite
OnValidate	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	void OnValidate ()$/;"	m	class:UICenterOnChild	file:
OnValidate	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	void OnValidate ()$/;"	m	class:UIImageButton	file:
OnValidate	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void OnValidate ()$/;"	m	class:UIPopupList	file:
OnValidate	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected void OnValidate ()$/;"	m	class:UIProgressBar
OnValidate	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	void OnValidate ()$/;"	m	class:PropertyBinding	file:
OnValidate	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected virtual void OnValidate ()$/;"	m	class:UIRect
OnValidate	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected override void OnValidate()$/;"	m	class:UIWidget
OnValidate	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void OnValidate () { Start(); }$/;"	m	class:UICamera	file:
OnValidate	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public delegate char OnValidate (string text, int charIndex, char addedChar);$/;"	m	class:UIInput
OnValidate	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	protected override void OnValidate ()$/;"	m	class:UILabel
OnValidate	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected override void OnValidate ()$/;"	m	class:UISprite
OnWillRenderObject	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	void OnWillRenderObject ()$/;"	m	class:UIDrawCall	file:
Once	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^		Once,$/;"	e	enum:UITweener.Style	file:
OnlyIfNeeded	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		OnlyIfNeeded,$/;"	e	enum:UIScrollView.ShowCondition	file:
OpenAtlasMaker	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void OpenAtlasMaker ()$/;"	m	class:NGUIMenu
OpenCameraWizard	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void OpenCameraWizard ()$/;"	m	class:NGUIMenu
OpenDCTool	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void OpenDCTool ()$/;"	m	class:NGUIMenu
OpenFontMaker	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void OpenFontMaker ()$/;"	m	class:NGUIMenu
OpenPanelWizard	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void OpenPanelWizard ()$/;"	m	class:NGUIMenu
OpenSeparator2	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void OpenSeparator2 () { }$/;"	m	class:NGUIMenu
OpenURL	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public WWW OpenURL (string url)$/;"	m	class:NGUITools
OpenURL	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public WWW OpenURL (string url, WWWForm form)$/;"	m	class:NGUITools
OpenURLOnClick	Assets/Addons/NGUI/Examples/Scripts/Other/OpenURLOnClick.cs	/^public class OpenURLOnClick : MonoBehaviour$/;"	c
Orange	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^		Orange,$/;"	e	enum:NGUISettings.ColorMode	file:
Other	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Other,$/;"	e	enum:InvStat.Identifier	file:
Outline	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Outline,$/;"	e	enum:UIFontInspector.Effect	file:
Outline	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		Outline,$/;"	e	enum:UILabel.Effect	file:
Overflow	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public enum Overflow$/;"	g	class:UILabel
PIPE_PREFIX	Assets/Scripts/Controllers/CellController.cs	/^        public static readonly string PIPE_PREFIX = "default";$/;"	f	class:Shanghai.Controllers.CellController
PLAY	Assets/Scripts/Shanghai.cs	/^        public enum GameState {START=0, PLAY, END_GAME};$/;"	e	enum:Shanghai.Shanghai.GameState	file:
PackTextures	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static bool PackTextures (Texture2D tex, List<SpriteEntry> sprites)$/;"	m	class:UIAtlasMaker	file:
PackTextures	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public static Rect[] PackTextures (Texture2D texture, Texture2D[] textures, int width, int height, int padding, int maxSize)$/;"	m	class:UITexturePacker
PacketSize	Assets/Scripts/ShanghaiConfig.cs	/^        public int PacketSize = 100;$/;"	f	class:Shanghai.ShanghaiConfig
PanWithMouse	Assets/Addons/NGUI/Examples/Scripts/Other/PanWithMouse.cs	/^public class PanWithMouse : MonoBehaviour$/;"	c
PanelCompareFunc	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	static public int PanelCompareFunc (UIWidget left, UIWidget right)$/;"	m	class:UIWidget
Paragraph	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected class Paragraph$/;"	c	class:UITextList
Parameter	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public class Parameter$/;"	c	class:EventDelegate
ParentHasChanged	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public virtual void ParentHasChanged ()$/;"	m	class:UIRect
ParentHasChanged	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public override void ParentHasChanged ()$/;"	m	class:UIWidget
ParentHasChanged	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public override void ParentHasChanged ()$/;"	m	class:UIPanel
Parse	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	public XMLNode Parse(string content)$/;"	m	class:XMLParser
ParseColor	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public Color ParseColor (string text, int offset)$/;"	m	class:NGUIText
ParseColor	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Color ParseColor (string text, int offset) { return NGUIText.ParseColor(text, offset); }$/;"	m	class:NGUITools
ParseSymbol	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public bool ParseSymbol (string text, ref int index)$/;"	m	class:NGUIText
ParseSymbol	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public bool ParseSymbol (string text, ref int index, BetterList<Color> colors, bool premultiply,$/;"	m	class:NGUIText
Password	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		Password,$/;"	e	enum:UIInput.InputType	file:
PasteLabel	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static void PasteLabel (UILabel lbl, bool fully)$/;"	m	class:NGUISettings	file:
PasteSprite	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static void PasteSprite (UISprite sp, bool fully)$/;"	m	class:NGUISettings	file:
PasteStyle	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void PasteStyle (MenuCommand command) { NGUISettings.PasteWidget(command.context as UIWidget, true); }$/;"	m	class:NGUIContextMenu	file:
PasteStyle2	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void PasteStyle2 (MenuCommand command) { NGUISettings.PasteWidget(command.context as UIWidget, false); }$/;"	m	class:NGUIContextMenu	file:
PasteWidget	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public void PasteWidget (UIWidget widget, bool fully)$/;"	m	class:NGUISettings
Path	Assets/Scripts/Grid/ActiveMission.cs	/^        public List<IntVect2> Path;$/;"	f	class:Shanghai.Grid.ActiveMission
PathDrawer	Assets/Scripts/Path/PathDrawer.cs	/^    public class PathDrawer : MonoBehaviour {$/;"	c	namespace:Shanghai.Path
Percent	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Percent,$/;"	e	enum:InvStat.Modifier	file:
PhonePad	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		PhonePad = 5,$/;"	e	enum:UIInput.KeyboardType	file:
PingPong	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^		PingPong,$/;"	e	enum:UITweener.Style	file:
Pipe	Assets/Scripts/Grid/PlayableCell.cs	/^        public PipeType Pipe {$/;"	p	class:Shanghai.Grid.PlayableCell
PipeSprite	Assets/Scripts/Controllers/CellController.cs	/^        public UISprite PipeSprite;$/;"	f	class:Shanghai.Controllers.CellController
PipeType	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	g	class:Shanghai.Grid.PlayableCell
Pivot	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public enum Pivot$/;"	g	class:UIWidget
PixelPerfect	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^		PixelPerfect,$/;"	e	enum:UIRoot.Scaling	file:
PixelPerfectSelection	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void PixelPerfectSelection ()$/;"	m	class:NGUIMenu	file:
PixelPerfectSelectionValidation	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool PixelPerfectSelectionValidation ()$/;"	m	class:NGUIMenu	file:
Pixels	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		Pixels,$/;"	e	enum:UIAtlas.Coordinates	file:
PlaceRect	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	void PlaceRect (Rect node)$/;"	m	class:UITexturePacker	file:
Play	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public void Play (bool forward) { Play(forward, true); }$/;"	m	class:UIPlayAnimation
Play	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public void Play (bool forward, bool onlyIfDifferent)$/;"	m	class:UIPlayAnimation
Play	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	public void Play ()$/;"	m	class:UIPlaySound
Play	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public void Play (bool forward)$/;"	m	class:UIPlayTween
Play	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	static public ActiveAnimation Play (Animation anim, Direction playDirection)$/;"	m	class:ActiveAnimation
Play	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	static public ActiveAnimation Play (Animation anim, string clipName, Direction playDirection)$/;"	m	class:ActiveAnimation
Play	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	static public ActiveAnimation Play (Animation anim, string clipName, Direction playDirection,$/;"	m	class:ActiveAnimation
Play	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	static public ActiveAnimation Play (Animator anim, string clipName, Direction playDirection,$/;"	m	class:ActiveAnimation
Play	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	void Play (string clipName, Direction playDirection)$/;"	m	class:ActiveAnimation	file:
Play	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void Play () { Play(true); }$/;"	m	class:UITweener
Play	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void Play (bool forward)$/;"	m	class:UITweener
PlayForward	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void PlayForward () { Play(true); }$/;"	m	class:UITweener
PlayGridController	Assets/Scripts/Controllers/PlayGridController.cs	/^    public class PlayGridController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
PlayIdleAnimations	Assets/Addons/NGUI/Examples/Scripts/Other/PlayIdleAnimations.cs	/^public class PlayIdleAnimations : MonoBehaviour$/;"	c
PlayReverse	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void PlayReverse () { Play(false); }$/;"	m	class:UITweener
PlaySound	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public AudioSource PlaySound (AudioClip clip) { return PlaySound(clip, 1f, 1f); }$/;"	m	class:NGUITools
PlaySound	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public AudioSource PlaySound (AudioClip clip, float volume) { return PlaySound(clip, volume, 1f); }$/;"	m	class:NGUITools
PlaySound	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public AudioSource PlaySound (AudioClip clip, float volume, float pitch)$/;"	m	class:NGUITools
PlayableCell	Assets/Scripts/Grid/PlayableCell.cs	/^        public PlayableCell(IntVect2 key) : base(key) {$/;"	m	class:Shanghai.Grid.PlayableCell
PlayableCell	Assets/Scripts/Grid/PlayableCell.cs	/^    public class PlayableCell : GridCell {$/;"	c	namespace:Shanghai.Grid
Polished	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Polished,$/;"	e	enum:InvGameItem.Quality	file:
Pop	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public T Pop ()$/;"	m	class:BetterList
Pop	Assets/Addons/RetinaPro/XMLParser/XMLNodeList.cs	/^	public XMLNode Pop()$/;"	m	class:XMLNodeList
PopupList	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		PopupList,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
PopupMenu	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		PopupMenu,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
Position	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public enum Position$/;"	g	class:UIPopupList
PrefabCheck	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static bool PrefabCheck()$/;"	m	class:NGUISelectionTools	file:
PrefixName	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static protected string[] PrefixName = new string[] { "Left", "Right", "Bottom", "Top" };$/;"	f	class:UIRectEditor
Prepare	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public void Prepare (string text)$/;"	m	class:NGUIText
Press	Assets/Addons/NGUI/Scripts/Editor/UIButtonEditor.cs	/^		Press,$/;"	e	enum:UIButtonEditor.Highlight	file:
Press	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public void Press (bool isPressed)$/;"	m	class:UIDraggableCamera
Press	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public void Press (bool pressed)$/;"	m	class:UIScrollView
PressAndClick	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^		PressAndClick,$/;"	e	enum:UIKeyBinding.Action	file:
PressAndHold	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^		PressAndHold,$/;"	e	enum:UIDragDropItem.Restriction	file:
Pressed	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^		Pressed,$/;"	e	enum:UIButtonColor.State	file:
Print	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public void Print (string text, BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:NGUIText
Print3	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^	bool Print3 (string a, string b, string c, bool button)$/;"	m	class:InvFindItem	file:
PrintCaretAndSelection	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public void PrintCaretAndSelection (string text, int start, int end, BetterList<Vector3> caret, BetterList<Vector3> highlight)$/;"	m	class:NGUIText
PrintCharacterPositions	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public void PrintCharacterPositions (string text, BetterList<Vector3> verts, BetterList<int> indices)$/;"	m	class:NGUIText
PrintOverlay	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public void PrintOverlay (int start, int end, UIGeometry caret, UIGeometry highlight, Color caretColor, Color highlightColor)$/;"	m	class:UILabel
ProcessAndRequest	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	void ProcessAndRequest ()$/;"	m	class:UILabel	file:
ProcessEvent	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	bool ProcessEvent (Event ev)$/;"	m	class:UIInput	file:
ProcessFakeTouches	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void ProcessFakeTouches ()$/;"	m	class:UICamera	file:
ProcessMouse	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public void ProcessMouse ()$/;"	m	class:UICamera
ProcessOthers	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public void ProcessOthers ()$/;"	m	class:UICamera
ProcessText	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	void ProcessText () { ProcessText(false, true); }$/;"	m	class:UILabel	file:
ProcessText	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	void ProcessText (bool legacyMode, bool full)$/;"	m	class:UILabel	file:
ProcessTouch	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public void ProcessTouch (bool pressed, bool unpressed)$/;"	m	class:UICamera
ProcessTouches	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public void ProcessTouches ()$/;"	m	class:UICamera
Progress	Assets/Scripts/Grid/ActiveMission.cs	/^        public bool Progress(float progress) {$/;"	m	class:Shanghai.Grid.ActiveMission
Progress	Assets/Scripts/Grid/PlayableCell.cs	/^        public float Progress = 0.0f;$/;"	f	class:Shanghai.Grid.PlayableCell
ProgressBar	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		ProgressBar,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
ProgressSprite	Assets/Scripts/Controllers/CellController.cs	/^        public UISprite ProgressSprite;$/;"	f	class:Shanghai.Controllers.CellController
PropertyBinding	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^public class PropertyBinding : MonoBehaviour$/;"	c
PropertyBindingEditor	Assets/Addons/NGUI/Scripts/Editor/PropertyBindingEditor.cs	/^public class PropertyBindingEditor : Editor$/;"	c
PropertyReference	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public PropertyReference () { }$/;"	m	class:PropertyReference
PropertyReference	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public PropertyReference (Component target, string fieldName)$/;"	m	class:PropertyReference
PropertyReference	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^public class PropertyReference$/;"	c
PropertyReferenceDrawer	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^public class PropertyReferenceDrawer : PropertyDrawer$/;"	c
PruneFreeList	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	void PruneFreeList ()$/;"	m	class:UITexturePacker	file:
Push	Assets/Addons/RetinaPro/XMLParser/XMLNodeList.cs	/^	public int Push(XMLNode item)$/;"	m	class:XMLNodeList
PushBack	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void PushBack ()$/;"	m	class:NGUIMenu
PushBack	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void PushBack (GameObject go)$/;"	m	class:NGUITools
PushBack2	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void PushBack2 ()$/;"	m	class:NGUIMenu
PushBack2Validation	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool PushBack2Validation () { return (Selection.activeGameObject != null); }$/;"	m	class:NGUIMenu
PushBackValidation	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool PushBackValidation () { return (Selection.activeGameObject != null); }$/;"	m	class:NGUIMenu
QMARK	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char QMARK  = '?';$/;"	f	class:XMLParser	file:
QUOTE	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char QUOTE  = '"';$/;"	f	class:XMLParser	file:
QUOTE2	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char QUOTE2 = '\\'';$/;"	f	class:XMLParser	file:
Quality	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public enum Quality$/;"	g	class:InvGameItem
REFLECTION_SUPPORT	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^#define REFLECTION_SUPPORT$/;"	d	file:
REFLECTION_SUPPORT	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^#define REFLECTION_SUPPORT$/;"	d	file:
REQUIRE_LISTENER	Assets/Addons/Messenger/Messenger.cs	/^        REQUIRE_LISTENER,$/;"	e	enum:MessengerMode	file:
RETINAPRO_DEBUGLOG	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^#define RETINAPRO_DEBUGLOG$/;"	d	file:
RIGHT	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
Radial180	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Radial180,$/;"	e	enum:UISprite.FillDirection	file:
Radial360	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Radial360,$/;"	e	enum:UISprite.FillDirection	file:
Radial90	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Radial90,$/;"	e	enum:UISprite.FillDirection	file:
RadialCut	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	static bool RadialCut (Vector2[] xy, Vector2[] uv, float fill, bool invert, int corner)$/;"	m	class:UISprite	file:
RadialCut	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	static void RadialCut (Vector2[] xy, float cos, float sin, bool invert, int corner)$/;"	m	class:UISprite	file:
RandomRange	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public int RandomRange (int min, int max)$/;"	m	class:NGUITools
Raycast	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public bool Raycast (Vector3[] corners, out Vector3 hit)$/;"	m	class:UIWidgetInspector
Raycast	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public bool Raycast (Vector3 inPos, out RaycastHit hit)$/;"	m	class:UICamera
ReEvaluateAnchorType	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected void ReEvaluateAnchorType ()$/;"	m	class:UIRectEditor
ReadCSV	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	public BetterList<string> ReadCSV ()$/;"	m	class:ByteReader
ReadDictionary	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	public Dictionary<string, string> ReadDictionary ()$/;"	m	class:ByteReader
ReadLine	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	public string ReadLine () { return ReadLine(true); }$/;"	m	class:ByteReader
ReadLine	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	public string ReadLine (bool skipEmptyLines)$/;"	m	class:ByteReader
ReadLine	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	static string ReadLine (byte[] buffer, int start, int count)$/;"	m	class:ByteReader	file:
RealTime	Assets/Addons/NGUI/Scripts/Internal/RealTime.cs	/^public class RealTime : MonoBehaviour$/;"	c
Rebalance	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Rebalance,$/;"	e	enum:UIFontInspector.Effect	file:
Rebuild	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected void Rebuild ()$/;"	m	class:UITextList
RebuildAllDrawCalls	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public void RebuildAllDrawCalls () { mRebuild = true; }$/;"	m	class:UIPanel
RebuildMaterial	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	Material RebuildMaterial ()$/;"	m	class:UIDrawCall	file:
RebuildSpriteList	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	void RebuildSpriteList ()$/;"	m	class:UISpriteAnimation	file:
Recalculate	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static public void Recalculate (Object obj)$/;"	m	class:NGUISnap
Recalculate	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static void Recalculate (Transform t)$/;"	m	class:NGUISnap	file:
Recenter	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	public void Recenter ()$/;"	m	class:UICenterOnChild
RectBestAreaFit	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^		RectBestAreaFit, \/\/\/< -BAF: Positions the rectangle into the smallest free rect into which it fits.$/;"	e	enum:UITexturePacker.FreeRectChoiceHeuristic	file:
RectBestLongSideFit	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^		RectBestLongSideFit, \/\/\/< -BLSF: Positions the rectangle against the long side of a free rectangle into which it fits the best.$/;"	e	enum:UITexturePacker.FreeRectChoiceHeuristic	file:
RectBestShortSideFit	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^		RectBestShortSideFit, \/\/\/< -BSSF: Positions the rectangle against the short side of a free rectangle into which it fits the best.$/;"	e	enum:UITexturePacker.FreeRectChoiceHeuristic	file:
RectBottomLeftRule	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^		RectBottomLeftRule, \/\/\/< -BL: Does the Tetris placement.$/;"	e	enum:UITexturePacker.FreeRectChoiceHeuristic	file:
RectContactPointRule	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^		RectContactPointRule \/\/\/< -CP: Choosest the placement where the rectangle touches other rects as much as possible.$/;"	e	enum:UITexturePacker.FreeRectChoiceHeuristic	file:
Reference	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^		Reference,$/;"	e	enum:UIAtlasInspector.AtlasType	file:
Reference	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Reference,$/;"	e	enum:UIFontInspector.FontType	file:
References	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	bool References (UIAtlas atlas)$/;"	m	class:UIAtlas	file:
References	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	bool References (UIFont font)$/;"	m	class:UIFont	file:
Refresh	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public void Refresh ()$/;"	m	class:UIPanel
RegisterUndo	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void RegisterUndo (string name, params Object[] objects)$/;"	m	class:NGUIEditorTools
RegisterUndo	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	void RegisterUndo ()$/;"	m	class:UIPopupListInspector	file:
RegisterUndo	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void RegisterUndo (UnityEngine.Object obj, string name)$/;"	m	class:NGUITools
Release	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public void Release () { mList.Clear(); }$/;"	m	class:BetterList
ReleaseAll	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static public void ReleaseAll ()$/;"	m	class:UIDrawCall
ReleaseInactive	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static public void ReleaseInactive()$/;"	m	class:UIDrawCall
ReleaseSprites	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public void ReleaseSprites (List<SpriteEntry> sprites)$/;"	m	class:UIAtlasMaker
Remove	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public bool Remove (T item) { return mList.Remove(item); }$/;"	m	class:BetterList
Remove	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public bool Remove (List<EventDelegate> list, Callback callback)$/;"	m	class:EventDelegate
Remove	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public bool Remove (List<EventDelegate> list, EventDelegate ev)$/;"	m	class:EventDelegate
RemoveActiveMission	Assets/Scripts/GameModel.cs	/^        public void RemoveActiveMission(ActiveMission actMiss) {$/;"	m	class:Shanghai.GameModel
RemoveAllChildren	Assets/Scripts/ShanghaiUtils.cs	/^        public static void RemoveAllChildren(Transform transform) {$/;"	m	class:Shanghai.ShanghaiUtils
RemoveAt	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public void RemoveAt (int index) { mList.RemoveAt(index); }$/;"	m	class:BetterList
RemoveFocus	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public void RemoveFocus () { isSelected = false; }$/;"	m	class:UIInput
RemoveFromPanel	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected void RemoveFromPanel ()$/;"	m	class:UIWidget
RemoveListener	Assets/Addons/Messenger/Messenger.cs	/^        static public void RemoveListener(string eventType, Callback handler) {$/;"	m	class:Messenger
RemoveListener	Assets/Addons/Messenger/Messenger.cs	/^        static public void RemoveListener(string eventType, Callback<T, U, V> handler) {$/;"	m	class:Messenger
RemoveListener	Assets/Addons/Messenger/Messenger.cs	/^        static public void RemoveListener(string eventType, Callback<T, U> handler) {$/;"	m	class:Messenger
RemoveListener	Assets/Addons/Messenger/Messenger.cs	/^        static public void RemoveListener(string eventType, Callback<T> handler) {$/;"	m	class:Messenger
RemoveOnFinished	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void RemoveOnFinished (EventDelegate del)$/;"	m	class:UITweener
RemovePrefix	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^	static string RemovePrefix (string text)$/;"	m	class:NGUISelectionTools	file:
RemoveSymbol	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public void RemoveSymbol (string sequence)$/;"	m	class:UIFont
RemoveTouch	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public void RemoveTouch (int id) { mTouches.Remove(id); }$/;"	m	class:UICamera
RemoveWidget	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public void RemoveWidget (UIWidget w)$/;"	m	class:UIPanel
RenameSymbol	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public void RenameSymbol (string before, string after)$/;"	m	class:UIFont
RenderQueue	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public enum RenderQueue$/;"	g	class:UIPanel
RepaintSprites	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void RepaintSprites ()$/;"	m	class:NGUIEditorTools
RepeatIndex	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public int RepeatIndex (int val, int max)$/;"	m	class:NGUIMath
Replace	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIEquipmentSlot.cs	/^	override protected InvGameItem Replace (InvGameItem item)$/;"	m	class:UIEquipmentSlot
Replace	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	abstract protected InvGameItem Replace (InvGameItem item);$/;"	m	class:UIItemSlot
Replace	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public InvGameItem Replace (int slot, InvGameItem item)$/;"	m	class:UIItemStorage
Replace	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIStorageSlot.cs	/^	override protected InvGameItem Replace (InvGameItem item)$/;"	m	class:UIStorageSlot
Replace	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	public InvGameItem Replace (InvBaseItem.Slot slot, InvGameItem item)$/;"	m	class:InvEquipment
ReplaceClass	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public SerializedObject ReplaceClass (MonoBehaviour mb, System.Type type)$/;"	m	class:NGUIEditorTools
ReplaceClass	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public SerializedObject ReplaceClass (MonoBehaviour mb, int classID)$/;"	m	class:NGUIEditorTools
ReplaceClass	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void ReplaceClass (SerializedObject ob, System.Type type)$/;"	m	class:NGUIEditorTools
ReplaceClass	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void ReplaceClass (SerializedObject ob, int classID)$/;"	m	class:NGUIEditorTools
ReplaceSpaceWithNewline	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static void ReplaceSpaceWithNewline (ref StringBuilder s)$/;"	m	class:NGUIText	file:
ReplaceSprites	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public void ReplaceSprites (UIAtlas atlas, List<SpriteEntry> sprites)$/;"	m	class:UIAtlasMaker
ReplenishHealth	Assets/Scripts/Entities/Target.cs	/^        public void ReplenishHealth(float delta) {$/;"	m	class:Shanghai.Entities.Target
ReplinishTargets	Assets/Scripts/Shanghai.cs	/^        public void ReplinishTargets(float delta) {$/;"	m	class:Shanghai.Shanghai
Reposition	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public virtual void Reposition ()$/;"	m	class:UIGrid
Reposition	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public virtual void Reposition ()$/;"	m	class:UITable
RepositionVariableSize	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	protected void RepositionVariableSize (List<Transform> children)$/;"	m	class:UITable
Reputation	Assets/Scripts/Entities/Client.cs	/^        public float Reputation = 100f;$/;"	f	class:Shanghai.Entities.Client
ReputationDecOnMissionFailed	Assets/Scripts/ShanghaiConfig.cs	/^        public float ReputationDecOnMissionFailed = 20f;$/;"	f	class:Shanghai.ShanghaiConfig
ReputationDecPerSecond	Assets/Scripts/ShanghaiConfig.cs	/^        public float ReputationDecPerSecond = 1f;$/;"	f	class:Shanghai.ShanghaiConfig
ReputationIncOnMissionComplete	Assets/Scripts/ShanghaiConfig.cs	/^        public float ReputationIncOnMissionComplete = 20f;$/;"	f	class:Shanghai.ShanghaiConfig
Reset	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	public void Reset ()$/;"	m	class:ActiveAnimation
Reset	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public void Reset ()$/;"	m	class:PropertyReference
Reset	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	void Reset ()$/;"	m	class:UITweener	file:
Reset	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	public void Reset()$/;"	m	class:UISpriteAnimation
Reset	Assets/Scripts/GameModel.cs	/^        public void Reset() {$/;"	m	class:Shanghai.GameModel
Reset	Assets/Scripts/Grid/PlayableCell.cs	/^        public void Reset() {$/;"	m	class:Shanghai.Grid.PlayableCell
ResetAllCells	Assets/Scripts/Grid/Grid.cs	/^        public void ResetAllCells(bool silent) {$/;"	m	class:Shanghai.Grid.Grid
ResetAnchors	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public void ResetAnchors ()$/;"	m	class:UIRect
ResetCells	Assets/Scripts/Grid/Grid.cs	/^        public void ResetCells(List<IntVect2> path) {$/;"	m	class:Shanghai.Grid.Grid
ResetCellsProgress	Assets/Scripts/Grid/Grid.cs	/^        public void ResetCellsProgress(List<IntVect2> path) {$/;"	m	class:Shanghai.Grid.Grid
ResetChildPositions	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	void ResetChildPositions ()$/;"	m	class:UIWrapContent	file:
ResetOnPlay	Assets/Addons/NGUI/Scripts/Editor/UIPlayAnimationEditor.cs	/^	enum ResetOnPlay$/;"	g	class:UIPlayAnimationEditor
ResetOnPlay	Assets/Addons/NGUI/Scripts/Editor/UIPlayTweenEditor.cs	/^	enum ResetOnPlay$/;"	g	class:UIPlayTweenEditor
ResetPosition	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public void ResetPosition()$/;"	m	class:UIScrollView
ResetSourceCell	Assets/Scripts/Grid/Grid.cs	/^        public void ResetSourceCell(int key) {$/;"	m	class:Shanghai.Grid.Grid
ResetSourceCell	Assets/Scripts/Grid/SourceRow.cs	/^        public void ResetSourceCell(int key) {$/;"	m	class:Shanghai.Grid.SourceRow
ResetToBeginning	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void ResetToBeginning ()$/;"	m	class:UITweener
ResizeCollider	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public void ResizeCollider ()$/;"	m	class:UIWidget
ResizeFreely	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		ResizeFreely,$/;"	e	enum:UILabel.Overflow	file:
ResizeHeight	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		ResizeHeight,$/;"	e	enum:UILabel.Overflow	file:
ResizeWidget	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public void ResizeWidget (UIWidget w, UIWidget.Pivot pivot, float x, float y, int minWidth, int minHeight)$/;"	m	class:NGUIMath
ResizeWidget	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public void ResizeWidget (UIWidget w, UIWidget.Pivot pivot, float x, float y, int minWidth, int minHeight, int maxWidth, int maxHeight)$/;"	m	class:NGUIMath
Restart	Assets/Addons/NGUI/Scripts/Editor/UIPlayTweenEditor.cs	/^		Restart,$/;"	e	enum:UIPlayTweenEditor.ResetOnPlay	file:
RestartIfNotPlaying	Assets/Addons/NGUI/Scripts/Editor/UIPlayTweenEditor.cs	/^		RestartIfNotPlaying,$/;"	e	enum:UIPlayTweenEditor.ResetOnPlay	file:
RestoreLabelPivot	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected void RestoreLabelPivot ()$/;"	m	class:UIInput
RestrictWithinBounds	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public bool RestrictWithinBounds (bool instant) { return RestrictWithinBounds(instant, true, true); }$/;"	m	class:UIScrollView
RestrictWithinBounds	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public bool RestrictWithinBounds (bool instant, bool horizontal, bool vertical)$/;"	m	class:UIScrollView
Restriction	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	public enum Restriction$/;"	g	class:UIDragDropItem
Reverse	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		Reverse = -1,$/;"	e	enum:AnimationOrTween.Direction	file:
Right	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		Right,$/;"	e	enum:NGUIText.Alignment	file:
Right	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		Right,$/;"	e	enum:UIWidget.Pivot	file:
Right	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^		Right,$/;"	e	enum:UIAnchor.Side	file:
RightToLeft	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^		RightToLeft,$/;"	e	enum:UIProgressBar.FillDirection	file:
Rotate	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^		Rotate,$/;"	e	enum:UIWidgetInspector.Action	file:
RotateTowards	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public float RotateTowards (float from, float to, float maxAngle)$/;"	m	class:NGUIMath
Round	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public Vector3 Round (Vector3 v)$/;"	m	class:NGUITools
RunAddTests	Assets/Addons/Messenger/MessengerUnitTest.cs	/^        private void RunAddTests() {$/;"	m	class:MessengerUnitTest	file:
RunBroadcastTests	Assets/Addons/Messenger/MessengerUnitTest.cs	/^        private void RunBroadcastTests() {$/;"	m	class:MessengerUnitTest	file:
RunRemoveTests	Assets/Addons/Messenger/MessengerUnitTest.cs	/^        private void RunRemoveTests() {$/;"	m	class:MessengerUnitTest	file:
RunTest	Assets/Addons/Messenger/MessengerUnitTest.cs	/^        public void RunTest() {$/;"	m	class:MessengerUnitTest
SE	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
SLASH	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char SLASH  = '\/';$/;"	f	class:XMLParser	file:
SNAP_THRESHOLD	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	const float SNAP_THRESHOLD = 10f;$/;"	f	class:NGUISnap	file:
SOURCE_PATH	Assets/Scripts/Controllers/SourceRowController.cs	/^        public static readonly string SOURCE_PATH = "prefabs\/source";$/;"	f	class:Shanghai.Controllers.SourceRowController
SPACE	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char SPACE  = ' ';$/;"	f	class:XMLParser	file:
SQR	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^	private char SQR    = ']';$/;"	f	class:XMLParser	file:
START	Assets/Scripts/Shanghai.cs	/^        public enum GameState {START=0, PLAY, END_GAME};$/;"	e	enum:Shanghai.Shanghai.GameState	file:
SW	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
Sample	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void Sample (float factor, bool isFinished)$/;"	m	class:UITweener
Save	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static void Save ()$/;"	m	class:UICreateWidgetWizard	file:
Save	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public bool Save (string fileName, byte[] bytes)$/;"	m	class:NGUITools
SaveSelection	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^	public void SaveSelection () { PlayerPrefs.SetString(key, UIPopupList.current.value); }$/;"	m	class:UISavedOption
SaveState	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^	public void SaveState () { PlayerPrefs.SetInt(key, UIToggle.current.value ? 1 : 0); }$/;"	m	class:UISavedOption
SaveString	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static void SaveString (string field, string val)$/;"	m	class:UICreateWidgetWizard	file:
SaveToPlayerPrefs	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected void SaveToPlayerPrefs (string val)$/;"	m	class:UIInput
SaveValue	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public void SaveValue () { SaveToPlayerPrefs(mValue); }$/;"	m	class:UIInput
Scale	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^		Scale,$/;"	e	enum:UIWidgetInspector.Action	file:
Scaling	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public enum Scaling$/;"	g	class:UIRoot
SceneViewDistanceToRectangle	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public float SceneViewDistanceToRectangle (Vector3[] worldPoints, Vector2 mousePos)$/;"	m	class:NGUIEditorTools
SceneViewRaycast	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public BetterList<UIWidget> SceneViewRaycast (Vector2 mousePos)$/;"	m	class:NGUIEditorTools
ScoreRect	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	Rect ScoreRect (int width, int height, FreeRectChoiceHeuristic method, ref int score1, ref int score2)$/;"	m	class:UITexturePacker	file:
ScreenSizeChanged	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	void ScreenSizeChanged () { if (mStarted && runOnlyOnce) Update(); }$/;"	m	class:UIAnchor	file:
ScreenSizeChanged	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	void ScreenSizeChanged () { if (mStarted && runOnlyOnce) Update(); }$/;"	m	class:UIStretch	file:
ScreenToValue	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected float ScreenToValue (Vector2 screenPos)$/;"	m	class:UIProgressBar
ScreenToWorldPoint	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public bool ScreenToWorldPoint (Plane p, Vector2 screenPos, out Vector3 worldPos)$/;"	m	class:NGUIHandles
ScreenToWorldPoint	Assets/Addons/NGUI/Scripts/Editor/NGUIHandles.cs	/^	static public bool ScreenToWorldPoint (Vector3[] corners, Vector2 screenPos, out Vector3 worldPos)$/;"	m	class:NGUIHandles
Scroll	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public void Scroll (float delta)$/;"	m	class:UIDraggableCamera
Scroll	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public void Scroll (float delta)$/;"	m	class:UIScrollView
ScrollBar	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		ScrollBar,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
Search	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	void Search ()$/;"	m	class:ComponentSelector	file:
Select	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void Select (GameObject go)$/;"	m	class:NGUIEditorTools
Select	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^		Select,$/;"	e	enum:UIKeyBinding.Action	file:
Select	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void Select (UILabel lbl, bool instant)$/;"	m	class:UIPopupList	file:
SelectIndex	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvDatabaseInspector.cs	/^	public static void SelectIndex (InvDatabase db, InvBaseItem item)$/;"	m	class:InvDatabaseInspector
SelectLanguage	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static bool SelectLanguage (string language)$/;"	m	class:Localization	file:
SelectPrevious	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void SelectPrevious ()$/;"	m	class:NGUIEditorTools
SelectSprite	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void SelectSprite (UIAtlas atlas, string spriteName)$/;"	m	class:NGUIEditorTools
SelectSprite	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void SelectSprite (string spriteName)$/;"	m	class:NGUIEditorTools
SelectSprite	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	void SelectSprite (string spriteName)$/;"	m	class:UIAtlasInspector	file:
SelectSprite	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	void SelectSprite (string spriteName)$/;"	m	class:UIFontInspector	file:
SelectSprite	Assets/Addons/NGUI/Scripts/Editor/UISpriteInspector.cs	/^	void SelectSprite (string spriteName)$/;"	m	class:UISpriteInspector	file:
SelectSymbolSprite	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	void SelectSymbolSprite (string spriteName)$/;"	m	class:UIFontInspector	file:
SelectWidget	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool SelectWidget (GameObject start, Vector2 pos, bool inFront)$/;"	m	class:NGUIEditorTools
SelectWidget	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool SelectWidget (Vector2 pos) { return SelectWidget(null, pos, true); }$/;"	m	class:NGUIEditorTools
Selected	Assets/Scripts/Grid/GridCell.cs	/^        public bool Selected = false;$/;"	f	class:Shanghai.Grid.GridCell
SelectedObject	Assets/Addons/NGUI/Scripts/Editor/UIPlayAnimationEditor.cs	/^	enum SelectedObject$/;"	g	class:UIPlayAnimationEditor
SelectedObject	Assets/Addons/NGUI/Scripts/Editor/UIPlayTweenEditor.cs	/^	enum SelectedObject$/;"	g	class:UIPlayTweenEditor
SelectedPanel	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^		SelectedPanel,$/;"	e	enum:UIDrawCallViewer.ShowFilter	file:
SelectedRoot	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public GameObject SelectedRoot () { return SelectedRoot(false); }$/;"	m	class:NGUIEditorTools
SelectedRoot	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public GameObject SelectedRoot (bool createIfMissing)$/;"	m	class:NGUIEditorTools
SelectedRoot	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public GameObject SelectedRoot () { return NGUIEditorTools.SelectedRoot(); }$/;"	m	class:NGUIMenu
Send	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	void Send ()$/;"	m	class:UIButtonMessage	file:
Set	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	static public void Set (UIAtlas atlas, string sprite)$/;"	m	class:UICursor
Set	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public void Set (string name, Object obj)$/;"	m	class:NGUISettings
Set	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	void Set (bool state)$/;"	m	class:UIToggle	file:
Set	Assets/Addons/NGUI/Scripts/Interaction/UIToggledObjects.cs	/^	void Set (GameObject go, bool state)$/;"	m	class:UIToggledObjects	file:
Set	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public void Set (MonoBehaviour target, string methodName)$/;"	m	class:EventDelegate
Set	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public void Set (List<EventDelegate> list, Callback callback)$/;"	m	class:EventDelegate
Set	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static public void Set (List<EventDelegate> list, EventDelegate del)$/;"	m	class:EventDelegate
Set	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	void Set (Callback call)$/;"	m	class:EventDelegate	file:
Set	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public void Set (string languageName, Dictionary<string, string> dictionary)$/;"	m	class:Localization
Set	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public bool Set (object value)$/;"	m	class:PropertyReference
Set	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public void Set (Component target, string methodName)$/;"	m	class:PropertyReference
Set	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public void Set (float relative, float absolute)$/;"	m	class:UIRect.AnchorPoint
SetActive	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void SetActive (GameObject go, bool state) { SetActive(go, state, true); }$/;"	m	class:NGUITools
SetActive	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void SetActive (GameObject go, bool state, bool compatibilityMode)$/;"	m	class:NGUITools
SetActiveChildren	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void SetActiveChildren (GameObject go, bool state)$/;"	m	class:NGUITools
SetActiveFont	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	protected void SetActiveFont (Font fnt)$/;"	m	class:UILabel
SetActiveSelf	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void SetActiveSelf (GameObject go, bool state)$/;"	m	class:NGUITools
SetAlpha	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected virtual void SetAlpha (float val)$/;"	m	class:UITooltip
SetAnchor	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public void SetAnchor (GameObject go)$/;"	m	class:UIRect
SetAnchor	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public void SetAnchor (GameObject go, int left, int bottom, int right, int top)$/;"	m	class:UIRect
SetAnchor	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public void SetAnchor (Transform t)$/;"	m	class:UIRect
SetAtlasSprite	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected void SetAtlasSprite (UISpriteData sp)$/;"	m	class:UISprite
SetBool	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public void SetBool (string name, bool val) { EditorPrefs.SetBool(name, val); }$/;"	m	class:NGUISettings
SetBorder	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public void SetBorder (int left, int bottom, int right, int top)$/;"	m	class:UISpriteData
SetChildLayer	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void SetChildLayer (Transform t, int layer)$/;"	m	class:NGUITools
SetClipping	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	void SetClipping (int index, Vector4 cr, Vector2 soft, float angle)$/;"	m	class:UIDrawCall	file:
SetColor	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public void SetColor (string name, Color c) { SetString(name, c.r + " " + c.g + " " + c.b + " " + c.a); }$/;"	m	class:NGUISettings
SetColorOnSelection	Assets/Addons/NGUI/Examples/Scripts/Other/SetColorOnSelection.cs	/^public class SetColorOnSelection : MonoBehaviour$/;"	c
SetCurrentPercent	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public void SetCurrentPercent ()$/;"	m	class:UILabel
SetCurrentProgress	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public void SetCurrentProgress ()$/;"	m	class:UILabel
SetCurrentSelection	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public void SetCurrentSelection ()$/;"	m	class:UILabel
SetCurrentValueToEnd	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	void SetCurrentValueToEnd () { value = to; }$/;"	m	class:TweenColor	file:
SetCurrentValueToEnd	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	void SetCurrentValueToEnd () { value = to; }$/;"	m	class:TweenFOV	file:
SetCurrentValueToEnd	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	void SetCurrentValueToEnd () { value = to; }$/;"	m	class:TweenHeight	file:
SetCurrentValueToEnd	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	void SetCurrentValueToEnd () { value = to; }$/;"	m	class:TweenPosition	file:
SetCurrentValueToEnd	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	void SetCurrentValueToEnd () { value = Quaternion.Euler(to); }$/;"	m	class:TweenRotation	file:
SetCurrentValueToEnd	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	void SetCurrentValueToEnd () { value = to; }$/;"	m	class:TweenScale	file:
SetCurrentValueToEnd	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	void SetCurrentValueToEnd () { value = to; }$/;"	m	class:TweenWidth	file:
SetCurrentValueToStart	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	void SetCurrentValueToStart () { value = from; }$/;"	m	class:TweenColor	file:
SetCurrentValueToStart	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	void SetCurrentValueToStart () { value = from; }$/;"	m	class:TweenFOV	file:
SetCurrentValueToStart	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	void SetCurrentValueToStart () { value = from; }$/;"	m	class:TweenHeight	file:
SetCurrentValueToStart	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	void SetCurrentValueToStart () { value = from; }$/;"	m	class:TweenPosition	file:
SetCurrentValueToStart	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	void SetCurrentValueToStart () { value = Quaternion.Euler(from); }$/;"	m	class:TweenRotation	file:
SetCurrentValueToStart	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	void SetCurrentValueToStart () { value = from; }$/;"	m	class:TweenScale	file:
SetCurrentValueToStart	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	void SetCurrentValueToStart () { value = from; }$/;"	m	class:TweenWidth	file:
SetCursorRect	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public void SetCursorRect (Rect rect, MouseCursor cursor)$/;"	m	class:UIWidgetInspector
SetDimensions	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public void SetDimensions (int w, int h)$/;"	m	class:UIWidget
SetDirty	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void SetDirty (UnityEngine.Object obj)$/;"	m	class:NGUITools
SetDirty	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public void SetDirty ()$/;"	m	class:UIWidget
SetDirty	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public void SetDirty ()$/;"	m	class:UIPanel
SetDragAmount	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public virtual void SetDragAmount (float x, float y, bool updateScrollbars)$/;"	m	class:UIScrollView
SetDurationToCurrentProgress	Assets/Addons/NGUI/Examples/Scripts/Other/Tutorial5.cs	/^	public void SetDurationToCurrentProgress ()$/;"	m	class:Tutorial5
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	public override void SetEndToCurrentValue () { to = value; }$/;"	m	class:TweenAlpha
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	public override void SetEndToCurrentValue () { to = value; }$/;"	m	class:TweenColor
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	public override void SetEndToCurrentValue () { to = value; }$/;"	m	class:TweenFOV
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	public override void SetEndToCurrentValue () { to = value; }$/;"	m	class:TweenHeight
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	public override void SetEndToCurrentValue () { to = value; }$/;"	m	class:TweenOrthoSize
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	public override void SetEndToCurrentValue () { to = value; }$/;"	m	class:TweenPosition
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	public override void SetEndToCurrentValue () { to = value.eulerAngles; }$/;"	m	class:TweenRotation
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	public override void SetEndToCurrentValue () { to = value; }$/;"	m	class:TweenScale
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	public override void SetEndToCurrentValue () { to = value; }$/;"	m	class:TweenVolume
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	public override void SetEndToCurrentValue () { to = value; }$/;"	m	class:TweenWidth
SetEndToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public virtual void SetEndToCurrentValue () { }$/;"	m	class:UITweener
SetEnum	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public void SetEnum (string name, System.Enum val) { SetString(name, val.ToString()); }$/;"	m	class:NGUISettings
SetFloat	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public void SetFloat (string name, float val) { EditorPrefs.SetFloat(name, val); }$/;"	m	class:NGUISettings
SetHorizontal	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public void SetHorizontal (Transform parent, float localPos)$/;"	m	class:UIRect.AnchorPoint
SetInt	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public void SetInt (string name, int val) { EditorPrefs.SetInt(name, val); }$/;"	m	class:NGUISettings
SetKerning	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public void SetKerning (int previousChar, int amount)$/;"	m	class:BMGlyph
SetLabelWidth	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void SetLabelWidth (float width)$/;"	m	class:NGUIEditorTools
SetLayer	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void SetLayer (GameObject go, int layer)$/;"	m	class:NGUITools
SetOnFinished	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void SetOnFinished (EventDelegate del) { EventDelegate.Set(onFinished, del); }$/;"	m	class:UITweener
SetOnFinished	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void SetOnFinished (EventDelegate.Callback del) { EventDelegate.Set(onFinished, del); }$/;"	m	class:UITweener
SetPadding	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public void SetPadding (int left, int bottom, int right, int top)$/;"	m	class:UISpriteData
SetPath	Assets/Scripts/Grid/Grid.cs	/^        public void SetPath(List<IntVect2> path) {$/;"	m	class:Shanghai.Grid.Grid
SetPivot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	void SetPivot (UIWidget.Pivot pivot, bool isHorizontal)$/;"	m	class:UIWidgetInspector	file:
SetPivotToLeft	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected void SetPivotToLeft ()$/;"	m	class:UIInput
SetPivotToRight	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected void SetPivotToRight ()$/;"	m	class:UIInput
SetRect	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public void SetRect (float x, float y, float width, float height)$/;"	m	class:UIWidget
SetRect	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public void SetRect (int x, int y, int width, int height)$/;"	m	class:UISpriteData
SetSelection	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static protected void SetSelection (GameObject go, ControlScheme scheme)$/;"	m	class:UICamera
SetSprite	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	protected void SetSprite (string sp)$/;"	m	class:UIButton
SetSprite	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	void SetSprite (string sprite)$/;"	m	class:UIImageButton	file:
SetSpriteBySelection	Assets/Addons/NGUI/Examples/Scripts/Other/SetColorOnSelection.cs	/^	public void SetSpriteBySelection ()$/;"	m	class:SetColorOnSelection
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	public override void SetStartToCurrentValue () { from = value; }$/;"	m	class:TweenAlpha
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	public override void SetStartToCurrentValue () { from = value; }$/;"	m	class:TweenColor
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	public override void SetStartToCurrentValue () { from = value; }$/;"	m	class:TweenFOV
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	public override void SetStartToCurrentValue () { from = value; }$/;"	m	class:TweenHeight
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	public override void SetStartToCurrentValue () { from = value; }$/;"	m	class:TweenOrthoSize
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	public override void SetStartToCurrentValue () { from = value; }$/;"	m	class:TweenPosition
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	public override void SetStartToCurrentValue () { from = value.eulerAngles; }$/;"	m	class:TweenRotation
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	public override void SetStartToCurrentValue () { from = value; }$/;"	m	class:TweenScale
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	public override void SetStartToCurrentValue () { from = value; }$/;"	m	class:TweenVolume
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	public override void SetStartToCurrentValue () { from = value; }$/;"	m	class:TweenWidth
SetStartToCurrentValue	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public virtual void SetStartToCurrentValue () { }$/;"	m	class:UITweener
SetState	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	protected override void SetState (State state, bool immediate)$/;"	m	class:UIButton
SetState	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected virtual void SetState (State state, bool instant)$/;"	m	class:UIButtonColor
SetString	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public void SetString (string name, string val) { EditorPrefs.SetString(name, val); }$/;"	m	class:NGUISettings
SetText	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected virtual void SetText (string tooltipText)$/;"	m	class:UITooltip
SetThumbPosition	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected void SetThumbPosition (Vector3 worldPos)$/;"	m	class:UIProgressBar
SetToBlue	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void SetToBlue () { NGUISettings.colorMode = NGUISettings.ColorMode.Blue; }$/;"	m	class:NGUIMenu
SetToBlueCheck	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool SetToBlueCheck () { return UIWidget.showHandlesWithMoveTool && NGUISettings.colorMode != NGUISettings.ColorMode.Blue; }$/;"	m	class:NGUIMenu
SetToGreen	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void SetToGreen () { NGUISettings.colorMode = NGUISettings.ColorMode.Green; }$/;"	m	class:NGUIMenu
SetToGreenCheck	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool SetToGreenCheck () { return UIWidget.showHandlesWithMoveTool && NGUISettings.colorMode != NGUISettings.ColorMode.Green; }$/;"	m	class:NGUIMenu
SetToNearest	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public void SetToNearest (float abs0, float abs1, float abs2) { SetToNearest(0f, 0.5f, 1f, abs0, abs1, abs2); }$/;"	m	class:UIRect.AnchorPoint
SetToNearest	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public void SetToNearest (float rel0, float rel1, float rel2, float abs0, float abs1, float abs2)$/;"	m	class:UIRect.AnchorPoint
SetToNothing	Assets/Addons/NGUI/Scripts/Editor/UIPlayAnimationEditor.cs	/^		SetToNothing,$/;"	e	enum:UIPlayAnimationEditor.SelectedObject	file:
SetToNothing	Assets/Addons/NGUI/Scripts/Editor/UIPlayTweenEditor.cs	/^		SetToNothing,$/;"	e	enum:UIPlayTweenEditor.SelectedObject	file:
SetToOrange	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void SetToOrange () { NGUISettings.colorMode = NGUISettings.ColorMode.Orange; }$/;"	m	class:NGUIMenu
SetToOrangeCheck	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool SetToOrangeCheck () { return UIWidget.showHandlesWithMoveTool && NGUISettings.colorMode != NGUISettings.ColorMode.Orange; }$/;"	m	class:NGUIMenu
SetVertical	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public void SetVertical (Transform parent, float localPos)$/;"	m	class:UIRect.AnchorPoint
ShaderQuality	Assets/Addons/NGUI/Examples/Scripts/Other/ShaderQuality.cs	/^public class ShaderQuality : MonoBehaviour$/;"	c
Shadow	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^		Shadow,$/;"	e	enum:UIFontInspector.Effect	file:
Shadow	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		Shadow,$/;"	e	enum:UILabel.Effect	file:
Shanghai	Assets/Scripts/EventGenerator.cs	/^namespace Shanghai {$/;"	n
Shanghai	Assets/Scripts/GameModel.cs	/^namespace Shanghai {$/;"	n
Shanghai	Assets/Scripts/Shanghai.cs	/^    public class Shanghai : MonoBehaviour {$/;"	c	namespace:Shanghai
Shanghai	Assets/Scripts/Shanghai.cs	/^namespace Shanghai {$/;"	n
Shanghai	Assets/Scripts/ShanghaiConfig.cs	/^namespace Shanghai {$/;"	n
Shanghai	Assets/Scripts/ShanghaiUtils.cs	/^namespace Shanghai {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/CellController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/ClientController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/ClientsController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/GameOverController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/MoneyController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/PlayGridController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/SourceController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/SourceRowController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/TargetController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/TargetsController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/TelegramController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/TelegramMachineController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Controllers	Assets/Scripts/Controllers/TitleController.cs	/^namespace Shanghai.Controllers {$/;"	n
Shanghai.Entities	Assets/Scripts/Entities/Client.cs	/^namespace Shanghai.Entities {$/;"	n
Shanghai.Entities	Assets/Scripts/Entities/Entity.cs	/^namespace Shanghai.Entities { $/;"	n
Shanghai.Entities	Assets/Scripts/Entities/Target.cs	/^namespace Shanghai.Entities {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/ActiveMission.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/ChanceCell.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/Grid.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/GridCell.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/Mission.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/PlayableCell.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/Source.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/SourceCell.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/SourceRow.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Grid	Assets/Scripts/Grid/UnplayableCell.cs	/^namespace Shanghai.Grid {$/;"	n
Shanghai.Path	Assets/Scripts/Path/PathDrawer.cs	/^namespace Shanghai.Path {$/;"	n
ShanghaiConfig	Assets/Scripts/ShanghaiConfig.cs	/^    public class ShanghaiConfig : MonoSingleton<ShanghaiConfig> {$/;"	c	namespace:Shanghai
ShanghaiUtils	Assets/Scripts/ShanghaiUtils.cs	/^    public class ShanghaiUtils {$/;"	c	namespace:Shanghai
Shield	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^		Shield,$/;"	e	enum:InvBaseItem.Slot	file:
Shift	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^		Shift,$/;"	e	enum:UIKeyBinding.Modifier	file:
ShouldCreate	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static public bool ShouldCreate (GameObject go, bool isValid)$/;"	m	class:UICreateWidgetWizard
ShouldDrawProperties	Assets/Addons/NGUI/Scripts/Editor/UI2DSpriteEditor.cs	/^	protected override bool ShouldDrawProperties ()$/;"	m	class:UI2DSpriteEditor
ShouldDrawProperties	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^	protected override bool ShouldDrawProperties ()$/;"	m	class:UILabelInspector
ShouldDrawProperties	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	protected override bool ShouldDrawProperties ()$/;"	m	class:UIPanelInspector
ShouldDrawProperties	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected virtual bool ShouldDrawProperties () { return true; }$/;"	m	class:UIRectEditor
ShouldDrawProperties	Assets/Addons/NGUI/Scripts/Editor/UISpriteInspector.cs	/^	protected override bool ShouldDrawProperties ()$/;"	m	class:UISpriteInspector
ShouldDrawProperties	Assets/Addons/NGUI/Scripts/Editor/UITextureInspector.cs	/^	protected override bool ShouldDrawProperties ()$/;"	m	class:UITextureInspector
Shoulders	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^		Shoulders,$/;"	e	enum:InvBaseItem.Slot	file:
Show	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static public void Show ()$/;"	m	class:NGUIContextMenu
Show	Assets/Addons/NGUI/Scripts/Editor/NGUIHelp.cs	/^	static public void Show ()$/;"	m	class:NGUIHelp
Show	Assets/Addons/NGUI/Scripts/Editor/NGUIHelp.cs	/^	static public void Show (Type type)$/;"	m	class:NGUIHelp
Show	Assets/Addons/NGUI/Scripts/Editor/NGUIHelp.cs	/^	static public void Show (object obj)$/;"	m	class:NGUIHelp
Show	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	static public void Show (Callback callback)$/;"	m	class:SpriteSelector
Show	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	static public void Show (SerializedObject ob, SerializedProperty pro, UIAtlas atlas)$/;"	m	class:SpriteSelector
ShowCondition	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public enum ShowCondition$/;"	g	class:UIScrollView
ShowFilter	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^	enum ShowFilter$/;"	g	class:UIDrawCallViewer
ShowHelp0	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp0 (MenuCommand command) { NGUIHelp.Show(); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp1	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp1 (MenuCommand command) { NGUIHelp.Show(command.context); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp10	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp10 (MenuCommand command) { NGUIHelp.Show(typeof(UIScrollBar)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp11	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp11 (MenuCommand command) { NGUIHelp.Show(typeof(UIProgressBar)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp12	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp12 (MenuCommand command) { NGUIHelp.Show(typeof(UIPopupList)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp13	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp13 (MenuCommand command) { NGUIHelp.Show(typeof(UIInput)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp14	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp14 (MenuCommand command) { NGUIHelp.Show(typeof(UIKeyBinding)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp15	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp15 (MenuCommand command) { NGUIHelp.Show(typeof(UIGrid)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp16	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp16 (MenuCommand command) { NGUIHelp.Show(typeof(UITable)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp17	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp17 (MenuCommand command) { NGUIHelp.Show(typeof(UIPlayTween)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp18	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp18 (MenuCommand command) { NGUIHelp.Show(typeof(UIPlayAnimation)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp19	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp19 (MenuCommand command) { NGUIHelp.Show(typeof(UIPlaySound)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp2	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp2 (MenuCommand command) { NGUIHelp.Show(typeof(UIButton)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp20	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp20 (MenuCommand command) { NGUIHelp.Show(typeof(UIScrollView)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp21	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp21 (MenuCommand command) { NGUIHelp.Show(typeof(UIDragScrollView)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp22	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp22 (MenuCommand command) { NGUIHelp.Show(typeof(UICenterOnChild)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp23	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp23 (MenuCommand command) { NGUIHelp.Show(typeof(UICenterOnClick)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp24	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp24 (MenuCommand command) { NGUIHelp.Show(typeof(UITweener)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp25	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp25 (MenuCommand command) { NGUIHelp.Show(typeof(UIPlayAnimation)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp26	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp26 (MenuCommand command) { NGUIHelp.Show(typeof(UIScrollView)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp27	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp27 (MenuCommand command) { NGUIHelp.Show(typeof(UIPanel)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp28	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp28 (MenuCommand command) { NGUIHelp.Show(typeof(UILocalize)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp29	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp29 (MenuCommand command) { NGUIHelp.Show(typeof(Localization)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp3	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp3 (MenuCommand command) { NGUIHelp.Show(typeof(UIToggle)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp30	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp30 (MenuCommand command) { NGUIHelp.Show(typeof(UIKeyNavigation)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp31	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp31 (MenuCommand command) { NGUIHelp.Show(typeof(PropertyBinding)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp4	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp4 (MenuCommand command) { NGUIHelp.Show(typeof(UIRoot)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp5	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp5 (MenuCommand command) { NGUIHelp.Show(typeof(UICamera)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp6	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp6 (MenuCommand command) { NGUIHelp.Show(typeof(UIAnchor)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp7	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp7 (MenuCommand command) { NGUIHelp.Show(typeof(UIStretch)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp8	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp8 (MenuCommand command) { NGUIHelp.Show(typeof(UISlider)); }$/;"	m	class:NGUIContextMenu	file:
ShowHelp9	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static void ShowHelp9 (MenuCommand command) { NGUIHelp.Show(typeof(UI2DSprite)); }$/;"	m	class:NGUIContextMenu	file:
ShowProgress	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public void ShowProgress (float val)$/;"	m	class:UIAtlasMaker
ShowSelected	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	static public void ShowSelected ()$/;"	m	class:SpriteSelector
ShowSpriteSelectionMenu	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void ShowSpriteSelectionMenu (Vector2 screenPos)$/;"	m	class:NGUIEditorTools
ShowText	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	static public void ShowText (string tooltipText)$/;"	m	class:UITooltip
ShowTooltip	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public void ShowTooltip (bool val)$/;"	m	class:UICamera
ShrinkContent	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^		ShrinkContent,$/;"	e	enum:UILabel.Overflow	file:
Side	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	public enum Side$/;"	g	class:UIAnchor
Simple	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Simple,$/;"	e	enum:UISprite.Type	file:
Simple2D	Assets/Addons/NGUI/Scripts/Editor/UICreateNewUIWizard.cs	/^		Simple2D,$/;"	e	enum:UICreateNewUIWizard.CameraType	file:
SimpleFill	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected void SimpleFill (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:UISprite
Sliced	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Sliced,$/;"	e	enum:UISprite.AdvancedType	file:
Sliced	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Sliced,$/;"	e	enum:UISprite.Type	file:
SlicedFill	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected void SlicedFill (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:UISprite
Slider	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		Slider,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
Slot	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public enum Slot$/;"	g	class:InvBaseItem
Smooth	Assets/Addons/NGUI/Scripts/Editor/UIToggleInspector.cs	/^		Smooth,$/;"	e	enum:UIToggleInspector.Transition	file:
Snap	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static public Vector3 Snap (Vector3 pos, Vector3[] local, bool snapToEdges)$/;"	m	class:NGUISnap
SoftClip	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^		SoftClip = 3,				\/\/ Alpha-based clipping with a softened edge$/;"	e	enum:UIDrawCall.Clipping	file:
Sort	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	protected virtual void Sort (BetterList<Transform> list) { list.Sort(SortByName); }$/;"	m	class:UIGrid
Sort	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	protected virtual void Sort (List<Transform> list) { list.Sort(UIGrid.SortByName); }$/;"	m	class:UITable
Sort	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public void Sort (System.Comparison<T> comparer) { mList.Sort(comparer); }$/;"	m	class:BetterList
SortAlphabetically	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	public void SortAlphabetically ()$/;"	m	class:UIWrapContent
SortAlphabetically	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public void SortAlphabetically ()$/;"	m	class:UIAtlas
SortBasedOnScrollMovement	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	public void SortBasedOnScrollMovement ()$/;"	m	class:UIWrapContent
SortByName	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	static public int SortByName (Transform a, Transform b) { return string.Compare(a.name, b.name); }$/;"	m	class:UIGrid
SortHorizontal	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	static public int SortHorizontal (Transform a, Transform b) { return a.localPosition.x.CompareTo(b.localPosition.x); }$/;"	m	class:UIGrid
SortVertical	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	static public int SortVertical (Transform a, Transform b) { return b.localPosition.y.CompareTo(a.localPosition.y); }$/;"	m	class:UIGrid
SortWidgets	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public void SortWidgets ()$/;"	m	class:UIPanel
Sorting	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public enum Sorting$/;"	g	class:UIGrid
Sorting	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public enum Sorting$/;"	g	class:UITable
Source	Assets/Scripts/Controllers/SourceController.cs	/^        public Source Source = null;$/;"	f	class:Shanghai.Controllers.SourceController
Source	Assets/Scripts/Controllers/TelegramController.cs	/^        public Source Source {$/;"	p	class:Shanghai.Controllers.TelegramController
Source	Assets/Scripts/Grid/ActiveMission.cs	/^        public Source Source;$/;"	f	class:Shanghai.Grid.ActiveMission
Source	Assets/Scripts/Grid/Source.cs	/^        public Source() {}$/;"	m	class:Shanghai.Grid.Source
Source	Assets/Scripts/Grid/Source.cs	/^        public Source(int bounty, string targetID) {$/;"	m	class:Shanghai.Grid.Source
Source	Assets/Scripts/Grid/Source.cs	/^    public class Source {$/;"	c	namespace:Shanghai.Grid
Source	Assets/Scripts/Grid/SourceCell.cs	/^        public Source Source = null;$/;"	f	class:Shanghai.Grid.SourceCell
SourceCell	Assets/Scripts/Grid/SourceCell.cs	/^        public SourceCell(int key) {$/;"	m	class:Shanghai.Grid.SourceCell
SourceCell	Assets/Scripts/Grid/SourceCell.cs	/^    public class SourceCell {$/;"	c	namespace:Shanghai.Grid
SourceCells	Assets/Scripts/Grid/SourceRow.cs	/^        public List<SourceCell> SourceCells {$/;"	p	class:Shanghai.Grid.SourceRow
SourceController	Assets/Scripts/Controllers/SourceController.cs	/^    public class SourceController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
SourceInterval	Assets/Scripts/ShanghaiConfig.cs	/^        public float SourceInterval = 3.0f; \/\/the telegrams that come in$/;"	f	class:Shanghai.ShanghaiConfig
SourceRow	Assets/Scripts/Grid/SourceRow.cs	/^        public SourceRow(int size) {$/;"	m	class:Shanghai.Grid.SourceRow
SourceRow	Assets/Scripts/Grid/SourceRow.cs	/^    public class SourceRow {$/;"	c	namespace:Shanghai.Grid
SourceRowController	Assets/Scripts/Controllers/SourceRowController.cs	/^    public class SourceRowController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
SourceRowController	Assets/Scripts/Shanghai.cs	/^        public SourceRowController SourceRowController;$/;"	f	class:Shanghai.Shanghai
SourceUpdatesTarget	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^		SourceUpdatesTarget,$/;"	e	enum:PropertyBinding.Direction	file:
Spawn	Assets/Addons/NGUI/Scripts/Internal/RealTime.cs	/^	static void Spawn ()$/;"	m	class:RealTime	file:
Spin	Assets/Addons/NGUI/Examples/Scripts/Other/Spin.cs	/^public class Spin : MonoBehaviour$/;"	c
SpinWithMouse	Assets/Addons/NGUI/Examples/Scripts/Other/SpinWithMouse.cs	/^public class SpinWithMouse : MonoBehaviour$/;"	c
SplitFreeNode	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	bool SplitFreeNode (Rect freeNode, ref Rect usedNode)$/;"	m	class:UITexturePacker	file:
SpringDampen	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Vector2 SpringDampen (ref Vector2 velocity, float strength, float deltaTime)$/;"	m	class:NGUIMath
SpringDampen	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Vector3 SpringDampen (ref Vector3 velocity, float strength, float deltaTime)$/;"	m	class:NGUIMath
SpringLerp	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Quaternion SpringLerp (Quaternion from, Quaternion to, float strength, float deltaTime)$/;"	m	class:NGUIMath
SpringLerp	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Vector2 SpringLerp (Vector2 from, Vector2 to, float strength, float deltaTime)$/;"	m	class:NGUIMath
SpringLerp	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public Vector3 SpringLerp (Vector3 from, Vector3 to, float strength, float deltaTime)$/;"	m	class:NGUIMath
SpringLerp	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public float SpringLerp (float from, float to, float strength, float deltaTime)$/;"	m	class:NGUIMath
SpringLerp	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public float SpringLerp (float strength, float deltaTime)$/;"	m	class:NGUIMath
SpringPanel	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^public class SpringPanel : MonoBehaviour$/;"	c
SpringPosition	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^public class SpringPosition : MonoBehaviour$/;"	c
Sprite	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		Sprite,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
Sprite	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	class Sprite$/;"	c	class:UIAtlas
SpriteEntry	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	public class SpriteEntry : UISpriteData$/;"	c	class:UIAtlasMaker
SpriteSelector	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^public class SpriteSelector : ScriptableWizard$/;"	c
Standard	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		Standard,$/;"	e	enum:UIInput.InputType	file:
Start	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/EquipItems.cs	/^	void Start ()$/;"	m	class:EquipItems	file:
Start	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	void Start ()$/;"	m	class:UICursor	file:
Start	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	void Start ()$/;"	m	class:UIItemStorage	file:
Start	Assets/Addons/NGUI/Examples/Scripts/Other/ChatInput.cs	/^	void Start ()$/;"	m	class:ChatInput	file:
Start	Assets/Addons/NGUI/Examples/Scripts/Other/DownloadTexture.cs	/^	IEnumerator Start ()$/;"	m	class:DownloadTexture	file:
Start	Assets/Addons/NGUI/Examples/Scripts/Other/EnvelopContent.cs	/^	void Start () { Execute(); }$/;"	m	class:EnvelopContent	file:
Start	Assets/Addons/NGUI/Examples/Scripts/Other/LookAtTarget.cs	/^	void Start ()$/;"	m	class:LookAtTarget	file:
Start	Assets/Addons/NGUI/Examples/Scripts/Other/PanWithMouse.cs	/^	void Start ()$/;"	m	class:PanWithMouse	file:
Start	Assets/Addons/NGUI/Examples/Scripts/Other/PlayIdleAnimations.cs	/^	void Start ()$/;"	m	class:PlayIdleAnimations	file:
Start	Assets/Addons/NGUI/Examples/Scripts/Other/Spin.cs	/^	void Start ()$/;"	m	class:Spin	file:
Start	Assets/Addons/NGUI/Examples/Scripts/Other/SpinWithMouse.cs	/^	void Start ()$/;"	m	class:SpinWithMouse	file:
Start	Assets/Addons/NGUI/Examples/Scripts/Other/UISliderColors.cs	/^	void Start () { mBar = GetComponent<UIProgressBar>(); Update(); }$/;"	m	class:UISliderColors	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/LanguageSelection.cs	/^	void Start ()$/;"	m	class:LanguageSelection	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	void Start () { if (!isEnabled) SetState(State.Disabled, true); }$/;"	m	class:UIButtonColor	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	void Start () { mStarted = true; }$/;"	m	class:UIButtonMessage	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	void Start ()$/;"	m	class:UIButtonOffset	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	void Start ()$/;"	m	class:UIButtonRotation	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	void Start ()$/;"	m	class:UIButtonScale	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected virtual void Start ()$/;"	m	class:UIDragDropItem
Start	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	void Start ()$/;"	m	class:UIDragScrollView	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	void Start () { mRoot = NGUITools.FindInParents<UIRoot>(gameObject); }$/;"	m	class:UIDraggableCamera	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	protected virtual void Start ()$/;"	m	class:UIGrid
Start	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	void Start ()$/;"	m	class:UIKeyBinding	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	void Start ()$/;"	m	class:UIPlayAnimation	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void Start()$/;"	m	class:UIPlayTween	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	void Start ()$/;"	m	class:UIPopupList	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected void Start ()$/;"	m	class:UIProgressBar
Start	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected virtual void Start ()$/;"	m	class:UIScrollView
Start	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	protected virtual void Start ()$/;"	m	class:UITable
Start	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	void Start ()$/;"	m	class:UIToggle	file:
Start	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	protected virtual void Start ()$/;"	m	class:UIWrapContent
Start	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	void Start ()$/;"	m	class:ActiveAnimation	file:
Start	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	void Start ()$/;"	m	class:PropertyBinding	file:
Start	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	void Start ()$/;"	m	class:SpringPanel	file:
Start	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected void Start ()$/;"	m	class:UIRect
Start	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	void Start ()$/;"	m	class:SpringPosition	file:
Start	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	protected virtual void Start () { Update(); }$/;"	m	class:UITweener
Start	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^	void Start ()$/;"	m	class:UI2DSpriteAnimation	file:
Start	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	void Start ()$/;"	m	class:UIAnchor	file:
Start	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void Start () { if (handlesEvents) NGUIDebug.debugRaycast = debug; }$/;"	m	class:UICamera	file:
Start	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void Start ()$/;"	m	class:UICamera	file:
Start	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	void Start ()$/;"	m	class:UIInput	file:
Start	Assets/Addons/NGUI/Scripts/UI/UILocalize.cs	/^	void Start ()$/;"	m	class:UILocalize	file:
Start	Assets/Addons/NGUI/Scripts/UI/UIOrthoCamera.cs	/^	void Start ()$/;"	m	class:UIOrthoCamera	file:
Start	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	protected virtual void Start ()$/;"	m	class:UIRoot
Start	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	void Start () { RebuildSpriteList(); }$/;"	m	class:UISpriteAnimation	file:
Start	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	void Start ()$/;"	m	class:UIStretch	file:
Start	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	void Start ()$/;"	m	class:UITextList	file:
Start	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected virtual void Start ()$/;"	m	class:UITooltip
Start	Assets/Addons/NGUI/Scripts/UI/UIViewport.cs	/^	void Start ()$/;"	m	class:UIViewport	file:
Start	Assets/Addons/RetinaPro/Example/refreshPanelTest.cs	/^	void Start () {$/;"	m	class:refreshPanelTest	file:
Start	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	void Start () {$/;"	m	class:retinaProAtlasController	file:
StartAt	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^		StartAt,$/;"	e	enum:UIPanel.RenderQueue	file:
StartFromBeginning	Assets/Addons/NGUI/Scripts/Editor/UIPlayAnimationEditor.cs	/^		StartFromBeginning,$/;"	e	enum:UIPlayAnimationEditor.ResetOnPlay	file:
State	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	public enum State$/;"	g	class:UIButtonColor
Storage	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	private struct Storage$/;"	s	class:UITexturePacker
Strength	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^		Strength,$/;"	e	enum:InvStat.Identifier	file:
StripSymbols	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public string StripSymbols (string text)$/;"	m	class:NGUIText
StripSymbols	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public string StripSymbols (string text) { return NGUIText.StripSymbols(text); }$/;"	m	class:NGUITools
Sturdy	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Sturdy,			\/\/ Normal quality$/;"	e	enum:InvGameItem.Quality	file:
Style	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public enum Style$/;"	g	class:UITweener
Style	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	public enum Style$/;"	g	class:UIStretch
Style	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public enum Style$/;"	g	class:UITextList
Submit	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public void Submit ()$/;"	m	class:UIInput
Superior	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Superior,$/;"	e	enum:InvGameItem.Quality	file:
SymbolStyle	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	public enum SymbolStyle$/;"	g	class:NGUIText
T	Assets/Libs/Singleton.cs	/^public class Singleton<T> where T : class, new() {$/;"	c
TARGET_PATH	Assets/Scripts/Controllers/TargetsController.cs	/^        public static readonly string TARGET_PATH = "prefabs\/target";$/;"	f	class:Shanghai.Controllers.TargetsController
TARGET_PREFIX	Assets/Scripts/Controllers/CellController.cs	/^        public static readonly string TARGET_PREFIX = "target";$/;"	f	class:Shanghai.Controllers.CellController
TELEGRAM_PATH	Assets/Scripts/Controllers/TelegramMachineController.cs	/^        public static readonly string TELEGRAM_PATH = "prefabs\/telegram";$/;"	f	class:Shanghai.Controllers.TelegramMachineController
TOKEN_COLON	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_COLON = 5;$/;"	f	class:NGUIJson	file:
TOKEN_COMMA	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_COMMA = 6;$/;"	f	class:NGUIJson	file:
TOKEN_CURLY_CLOSE	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_CURLY_CLOSE = 2;$/;"	f	class:NGUIJson	file:
TOKEN_CURLY_OPEN	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_CURLY_OPEN = 1;$/;"	f	class:NGUIJson	file:
TOKEN_FALSE	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_FALSE = 10;$/;"	f	class:NGUIJson	file:
TOKEN_NONE	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_NONE = 0;$/;"	f	class:NGUIJson	file:
TOKEN_NULL	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_NULL = 11;$/;"	f	class:NGUIJson	file:
TOKEN_NUMBER	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_NUMBER = 8;$/;"	f	class:NGUIJson	file:
TOKEN_SQUARED_CLOSE	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_SQUARED_CLOSE = 4;$/;"	f	class:NGUIJson	file:
TOKEN_SQUARED_OPEN	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_SQUARED_OPEN = 3;$/;"	f	class:NGUIJson	file:
TOKEN_STRING	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_STRING = 7;$/;"	f	class:NGUIJson	file:
TOKEN_TRUE	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	private const int TOKEN_TRUE = 9;$/;"	f	class:NGUIJson	file:
TOP	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
TTL	Assets/Scripts/Grid/Mission.cs	/^        public float TTL;$/;"	f	class:Shanghai.Grid.Mission
Target	Assets/Scripts/Entities/Target.cs	/^        public Target() {}$/;"	m	class:Shanghai.Entities.Target
Target	Assets/Scripts/Entities/Target.cs	/^        public Target(string key) : base (key) {$/;"	m	class:Shanghai.Entities.Target
Target	Assets/Scripts/Entities/Target.cs	/^    public class Target : Entity {$/;"	c	namespace:Shanghai.Entities
TargetController	Assets/Scripts/Controllers/TargetController.cs	/^    public class TargetController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
TargetID	Assets/Scripts/Grid/Mission.cs	/^        public string TargetID;$/;"	f	class:Shanghai.Grid.Mission
TargetID	Assets/Scripts/Grid/PlayableCell.cs	/^        public string TargetID = "";$/;"	f	class:Shanghai.Grid.PlayableCell
TargetID	Assets/Scripts/Grid/Source.cs	/^        public string TargetID = "";$/;"	f	class:Shanghai.Grid.Source
TargetLabel	Assets/Scripts/Controllers/TelegramController.cs	/^        public UILabel TargetLabel;$/;"	f	class:Shanghai.Controllers.TelegramController
TargetSprite	Assets/Scripts/Controllers/CellController.cs	/^        public UISprite TargetSprite;$/;"	f	class:Shanghai.Controllers.CellController
TargetSprite	Assets/Scripts/Controllers/SourceController.cs	/^        public UISprite TargetSprite;$/;"	f	class:Shanghai.Controllers.SourceController
TargetUpdatesSource	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^		TargetUpdatesSource,$/;"	e	enum:PropertyBinding.Direction	file:
Targets	Assets/Scripts/GameModel.cs	/^        public Dictionary<string, Target> Targets {$/;"	p	class:Shanghai.GameModel
TargetsController	Assets/Scripts/Controllers/TargetsController.cs	/^    public class TargetsController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
TargetsController	Assets/Scripts/Shanghai.cs	/^        public TargetsController TargetsController;$/;"	f	class:Shanghai.Shanghai
TelegramController	Assets/Scripts/Controllers/TelegramController.cs	/^    public class TelegramController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
TelegramMachineController	Assets/Scripts/Controllers/TelegramMachineController.cs	/^    public class TelegramMachineController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
TestCallback	Assets/Addons/Messenger/MessengerUnitTest.cs	/^        void TestCallback() {$/;"	m	class:MessengerUnitTest	file:
TestCallbackFloat	Assets/Addons/Messenger/MessengerUnitTest.cs	/^        void TestCallbackFloat(float f) {$/;"	m	class:MessengerUnitTest	file:
TexCoords	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		TexCoords,$/;"	e	enum:UIAtlas.Coordinates	file:
Text	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^		Text,$/;"	e	enum:UITextList.Style	file:
Texture	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		Texture,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
Tiled	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Tiled,$/;"	e	enum:UISprite.AdvancedType	file:
Tiled	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Tiled,$/;"	e	enum:UISprite.Type	file:
TiledFill	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected void TiledFill (BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols)$/;"	m	class:UISprite
TitleController	Assets/Scripts/Controllers/TitleController.cs	/^    public class TitleController : MonoBehaviour {$/;"	c	namespace:Shanghai.Controllers
TitleController	Assets/Scripts/Shanghai.cs	/^        public TitleController TitleController;$/;"	f	class:Shanghai.Shanghai
ToArray	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public T[] ToArray () { return mList.ToArray(); }$/;"	m	class:BetterList
ToString	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public override string ToString ()$/;"	m	class:EventDelegate
ToString	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public override string ToString () { return ToString(mTarget, name); }$/;"	m	class:PropertyReference
ToString	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	static public string ToString (Component comp, string property)$/;"	m	class:PropertyReference
ToString	Assets/Libs/IntVect2.cs	/^    public override string ToString()$/;"	m	class:IntVect2
Toggle	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^		Toggle,$/;"	e	enum:UICreateWidgetWizard.WidgetType	file:
Toggle	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	void Toggle (string text, string style, UIWidget.Pivot pivot, bool isHorizontal)$/;"	m	class:UIWidgetInspector	file:
Toggle	Assets/Addons/NGUI/Scripts/Interaction/UIToggledComponents.cs	/^	public void Toggle ()$/;"	m	class:UIToggledComponents
Toggle	Assets/Addons/NGUI/Scripts/Interaction/UIToggledObjects.cs	/^	public void Toggle ()$/;"	m	class:UIToggledObjects
Toggle	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^		Toggle = 0,$/;"	e	enum:AnimationOrTween.Direction	file:
Toggle	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public void Toggle ()$/;"	m	class:UITweener
Top	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		Top,$/;"	e	enum:UIWidget.Pivot	file:
Top	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^		Top,$/;"	e	enum:UIAnchor.Side	file:
TopLeft	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		TopLeft,$/;"	e	enum:UIWidget.Pivot	file:
TopLeft	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^		TopLeft,$/;"	e	enum:UIAnchor.Side	file:
TopRight	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^		TopRight,$/;"	e	enum:UIWidget.Pivot	file:
TopRight	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^		TopRight,$/;"	e	enum:UIAnchor.Side	file:
TopToBottom	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^		TopToBottom,$/;"	e	enum:UIProgressBar.FillDirection	file:
TotalProgress	Assets/Scripts/Grid/PlayableCell.cs	/^        public float TotalProgress = 0.0f;$/;"	f	class:Shanghai.Grid.PlayableCell
Touch	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		Touch,$/;"	e	enum:UICamera.ControlScheme	file:
TradeColour	Assets/Scripts/ShanghaiConfig.cs	/^        public Color TradeColour = new Color(0.0f, 0.0f, 0.0f);$/;"	f	class:Shanghai.ShanghaiConfig
Transition	Assets/Addons/NGUI/Scripts/Editor/UIToggleInspector.cs	/^	enum Transition$/;"	g	class:UIToggleInspector
Trigger	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	public enum Trigger$/;"	g	class:UIButtonMessage
Trigger	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	public enum Trigger$/;"	g	class:UIPlaySound
Trigger	Assets/Addons/NGUI/Scripts/Internal/AnimationOrTween.cs	/^	public enum Trigger$/;"	g	namespace:AnimationOrTween
TriggerCallbacks	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	protected void TriggerCallbacks ()$/;"	m	class:UIPopupList
Trim	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public void Trim (int xMin, int yMin, int xMax, int yMax)$/;"	m	class:BMFont
Trim	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public void Trim (int xMin, int yMin, int xMax, int yMax)$/;"	m	class:BMGlyph
Trim	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	void Trim ()$/;"	m	class:UIFont	file:
Trinket	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^		Trinket,$/;"	e	enum:InvBaseItem.Slot	file:
TurnGuidesOff	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void TurnGuidesOff () { NGUISettings.drawGuides = false; }$/;"	m	class:NGUIMenu
TurnGuidesOffCheck	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool TurnGuidesOffCheck () { return NGUISettings.drawGuides; }$/;"	m	class:NGUIMenu
TurnGuidesOn	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void TurnGuidesOn () { NGUISettings.drawGuides = true; }$/;"	m	class:NGUIMenu
TurnGuidesOnCheck	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool TurnGuidesOnCheck () { return !NGUISettings.drawGuides; }$/;"	m	class:NGUIMenu
TurnHandlesOff	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void TurnHandlesOff () { UIWidget.showHandlesWithMoveTool = false; }$/;"	m	class:NGUIMenu
TurnHandlesOffCheck	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool TurnHandlesOffCheck () { return UIWidget.showHandlesWithMoveTool; }$/;"	m	class:NGUIMenu
TurnHandlesOn	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void TurnHandlesOn () { UIWidget.showHandlesWithMoveTool = true; }$/;"	m	class:NGUIMenu
TurnHandlesOnCheck	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool TurnHandlesOnCheck () { return !UIWidget.showHandlesWithMoveTool; }$/;"	m	class:NGUIMenu
TurnSnapOff	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void TurnSnapOff () { NGUISnap.allow = false; }$/;"	m	class:NGUIMenu
TurnSnapOffCheck	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool TurnSnapOffCheck () { return NGUISnap.allow; }$/;"	m	class:NGUIMenu
TurnSnapOn	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public void TurnSnapOn () { NGUISnap.allow = true; }$/;"	m	class:NGUIMenu
TurnSnapOnCheck	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static public bool TurnSnapOnCheck () { return !NGUISnap.allow; }$/;"	m	class:NGUIMenu
Tutorial5	Assets/Addons/NGUI/Examples/Scripts/Other/Tutorial5.cs	/^public class Tutorial5 : MonoBehaviour$/;"	c
Tween1	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween1 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenAlpha>(); }$/;"	m	class:NGUIMenu	file:
Tween10	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween10 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenFOV>(); }$/;"	m	class:NGUIMenu	file:
Tween10a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween10a () { return (Selection.activeGameObject != null) && (Selection.activeGameObject.GetComponent<Camera>() != null); }$/;"	m	class:NGUIMenu	file:
Tween11	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween11 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenOrthoSize>(); }$/;"	m	class:NGUIMenu	file:
Tween11a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween11a () { return (Selection.activeGameObject != null) && (Selection.activeGameObject.GetComponent<Camera>() != null); }$/;"	m	class:NGUIMenu	file:
Tween1a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween1a () { return (Selection.activeGameObject != null) && (Selection.activeGameObject.GetComponent<UIWidget>() != null); }$/;"	m	class:NGUIMenu	file:
Tween2	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween2 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenColor>(); }$/;"	m	class:NGUIMenu	file:
Tween2a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween2a () { return (Selection.activeGameObject != null) && (Selection.activeGameObject.GetComponent<UIWidget>() != null); }$/;"	m	class:NGUIMenu	file:
Tween3	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween3 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenWidth>(); }$/;"	m	class:NGUIMenu	file:
Tween3a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween3a () { return (Selection.activeGameObject != null) && (Selection.activeGameObject.GetComponent<UIWidget>() != null); }$/;"	m	class:NGUIMenu	file:
Tween4	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween4 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenHeight>(); }$/;"	m	class:NGUIMenu	file:
Tween4a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween4a () { return (Selection.activeGameObject != null) && (Selection.activeGameObject.GetComponent<UIWidget>() != null); }$/;"	m	class:NGUIMenu	file:
Tween5	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween5 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenPosition>(); }$/;"	m	class:NGUIMenu	file:
Tween5a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween5a () { return (Selection.activeGameObject != null); }$/;"	m	class:NGUIMenu	file:
Tween6	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween6 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenRotation>(); }$/;"	m	class:NGUIMenu	file:
Tween6a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween6a () { return (Selection.activeGameObject != null); }$/;"	m	class:NGUIMenu	file:
Tween7	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween7 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenScale>(); }$/;"	m	class:NGUIMenu	file:
Tween7a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween7a () { return (Selection.activeGameObject != null); }$/;"	m	class:NGUIMenu	file:
Tween8	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween8 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenTransform>(); }$/;"	m	class:NGUIMenu	file:
Tween8a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween8a () { return (Selection.activeGameObject != null); }$/;"	m	class:NGUIMenu	file:
Tween9	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static void Tween9 () { if (Selection.activeGameObject != null) Selection.activeGameObject.AddMissingComponent<TweenVolume>(); }$/;"	m	class:NGUIMenu	file:
Tween9a	Assets/Addons/NGUI/Scripts/Editor/NGUIMenu.cs	/^	static bool Tween9a () { return (Selection.activeGameObject != null) && (Selection.activeGameObject.GetComponent<AudioSource>() != null); }$/;"	m	class:NGUIMenu	file:
TweenAlpha	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^public class TweenAlpha : UITweener$/;"	c
TweenAlphaEditor	Assets/Addons/NGUI/Scripts/Editor/TweenAlphaEditor.cs	/^public class TweenAlphaEditor : UITweenerEditor$/;"	c
TweenColor	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^public class TweenColor : UITweener$/;"	c
TweenColorEditor	Assets/Addons/NGUI/Scripts/Editor/TweenColorEditor.cs	/^public class TweenColorEditor : UITweenerEditor$/;"	c
TweenFOV	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^public class TweenFOV : UITweener$/;"	c
TweenFOVEditor	Assets/Addons/NGUI/Scripts/Editor/TweenFOVEditor.cs	/^public class TweenFOVEditor : UITweenerEditor$/;"	c
TweenHeight	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^public class TweenHeight : UITweener$/;"	c
TweenHeightEditor	Assets/Addons/NGUI/Scripts/Editor/TweenHeightEditor.cs	/^public class TweenHeightEditor : UITweenerEditor$/;"	c
TweenOrthoSize	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^public class TweenOrthoSize : UITweener$/;"	c
TweenOrthoSizeEditor	Assets/Addons/NGUI/Scripts/Editor/TweenOrthoSizeEditor.cs	/^public class TweenOrthoSizeEditor : UITweenerEditor$/;"	c
TweenPosition	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^public class TweenPosition : UITweener$/;"	c
TweenPositionEditor	Assets/Addons/NGUI/Scripts/Editor/TweenPositionEditor.cs	/^public class TweenPositionEditor : UITweenerEditor$/;"	c
TweenRotation	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^public class TweenRotation : UITweener$/;"	c
TweenRotationEditor	Assets/Addons/NGUI/Scripts/Editor/TweenRotationEditor.cs	/^public class TweenRotationEditor : UITweenerEditor$/;"	c
TweenScale	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^public class TweenScale : UITweener$/;"	c
TweenScaleEditor	Assets/Addons/NGUI/Scripts/Editor/TweenScaleEditor.cs	/^public class TweenScaleEditor : UITweenerEditor$/;"	c
TweenTransform	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^public class TweenTransform : UITweener$/;"	c
TweenTransformEditor	Assets/Addons/NGUI/Scripts/Editor/TweenTransformEditor.cs	/^public class TweenTransformEditor : UITweenerEditor$/;"	c
TweenVolume	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^public class TweenVolume : UITweener$/;"	c
TweenVolumeEditor	Assets/Addons/NGUI/Scripts/Editor/TweenVolumeEditor.cs	/^public class TweenVolumeEditor : UITweenerEditor$/;"	c
TweenWidth	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^public class TweenWidth : UITweener$/;"	c
TweenWidthEditor	Assets/Addons/NGUI/Scripts/Editor/TweenWidthEditor.cs	/^public class TweenWidthEditor : UITweenerEditor$/;"	c
Type	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public enum Type$/;"	g	class:UISprite
TypewriterEffect	Assets/Addons/NGUI/Examples/Scripts/Other/TypewriterEffect.cs	/^public class TypewriterEffect : MonoBehaviour$/;"	c
UI	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		UI,			\/\/ Perform a Physics.Raycast and sort by widget depth.$/;"	e	enum:UICamera.EventType	file:
UI2DSprite	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^public class UI2DSprite : UIWidget$/;"	c
UI2DSpriteAnimation	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^public class UI2DSpriteAnimation : MonoBehaviour$/;"	c
UI2DSpriteEditor	Assets/Addons/NGUI/Scripts/Editor/UI2DSpriteEditor.cs	/^public class UI2DSpriteEditor : UIWidgetInspector$/;"	c
UIAnchor	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^public class UIAnchor : MonoBehaviour$/;"	c
UIAnchorEditor	Assets/Addons/NGUI/Scripts/Editor/UIAnchorEditor.cs	/^public class UIAnchorEditor : Editor$/;"	c
UIAtlas	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^public class UIAtlas : MonoBehaviour$/;"	c
UIAtlasInspector	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^public class UIAtlasInspector : Editor$/;"	c
UIAtlasMaker	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^public class UIAtlasMaker : EditorWindow$/;"	c
UIButton	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^public class UIButton : UIButtonColor$/;"	c
UIButtonActivate	Assets/Addons/NGUI/Scripts/Interaction/UIButtonActivate.cs	/^public class UIButtonActivate : MonoBehaviour$/;"	c
UIButtonColor	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^public class UIButtonColor : UIWidgetContainer$/;"	c
UIButtonColorEditor	Assets/Addons/NGUI/Scripts/Editor/UIButtonColorEditor.cs	/^public class UIButtonColorEditor : UIWidgetContainerEditor$/;"	c
UIButtonEditor	Assets/Addons/NGUI/Scripts/Editor/UIButtonEditor.cs	/^public class UIButtonEditor : UIButtonColorEditor$/;"	c
UIButtonKeys	Assets/Addons/NGUI/Scripts/Interaction/UIButtonKeys.cs	/^public class UIButtonKeys : UIKeyNavigation$/;"	c
UIButtonKeysEditor	Assets/Addons/NGUI/Scripts/Editor/UIButtonKeysEditor.cs	/^public class UIButtonKeysEditor : UIKeyNavigationEditor$/;"	c
UIButtonMessage	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^public class UIButtonMessage : MonoBehaviour$/;"	c
UIButtonMessageEditor	Assets/Addons/NGUI/Scripts/Editor/UIButtonMessageEditor.cs	/^public class UIButtonMessageEditor : Editor$/;"	c
UIButtonOffset	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^public class UIButtonOffset : MonoBehaviour$/;"	c
UIButtonRotation	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^public class UIButtonRotation : MonoBehaviour$/;"	c
UIButtonScale	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^public class UIButtonScale : MonoBehaviour$/;"	c
UICamera	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^public class UICamera : MonoBehaviour$/;"	c
UICameraEditor	Assets/Addons/NGUI/Scripts/Editor/UICameraEditor.cs	/^public class UICameraEditor : Editor$/;"	c
UICameraTool	Assets/Addons/NGUI/Scripts/Editor/UICameraTool.cs	/^public class UICameraTool : EditorWindow$/;"	c
UICenterOnChild	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^public class UICenterOnChild : MonoBehaviour$/;"	c
UICenterOnClick	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnClick.cs	/^public class UICenterOnClick : MonoBehaviour$/;"	c
UICreateNewUIWizard	Assets/Addons/NGUI/Scripts/Editor/UICreateNewUIWizard.cs	/^public class UICreateNewUIWizard : EditorWindow$/;"	c
UICreateWidgetWizard	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^public class UICreateWidgetWizard : EditorWindow$/;"	c
UICursor	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^public class UICursor : MonoBehaviour$/;"	c
UIDragCamera	Assets/Addons/NGUI/Scripts/Interaction/UIDragCamera.cs	/^public class UIDragCamera : MonoBehaviour$/;"	c
UIDragDropContainer	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropContainer.cs	/^public class UIDragDropContainer : MonoBehaviour$/;"	c
UIDragDropItem	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^public class UIDragDropItem : MonoBehaviour$/;"	c
UIDragDropRoot	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropRoot.cs	/^public class UIDragDropRoot : MonoBehaviour$/;"	c
UIDragObject	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^public class UIDragObject : MonoBehaviour$/;"	c
UIDragObjectEditor	Assets/Addons/NGUI/Scripts/Editor/UIDragObjectEditor.cs	/^public class UIDragObjectEditor : Editor$/;"	c
UIDragResize	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^public class UIDragResize : MonoBehaviour$/;"	c
UIDragScrollView	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^public class UIDragScrollView : MonoBehaviour$/;"	c
UIDraggableCamera	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^public class UIDraggableCamera : MonoBehaviour$/;"	c
UIDrawCall	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^public class UIDrawCall : MonoBehaviour$/;"	c
UIDrawCallInspector	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallInspector.cs	/^public class UIDrawCallInspector : Editor$/;"	c
UIDrawCallViewer	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^public class UIDrawCallViewer : EditorWindow$/;"	c
UIEquipmentSlot	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIEquipmentSlot.cs	/^public class UIEquipmentSlot : UIItemSlot$/;"	c
UIEventListener	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^public class UIEventListener : MonoBehaviour$/;"	c
UIEventTrigger	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^public class UIEventTrigger : MonoBehaviour$/;"	c
UIEventTriggerEditor	Assets/Addons/NGUI/Scripts/Editor/UIEventTriggerEditor.cs	/^public class UIEventTriggerEditor : Editor$/;"	c
UIFont	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^public class UIFont : MonoBehaviour$/;"	c
UIFontInspector	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^public class UIFontInspector : Editor$/;"	c
UIFontMaker	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^public class UIFontMaker : EditorWindow$/;"	c
UIForwardEvents	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^public class UIForwardEvents : MonoBehaviour$/;"	c
UIForwardEventsEditor	Assets/Addons/NGUI/Scripts/Editor/UIForwardEventsEditor.cs	/^public class UIForwardEventsEditor : Editor$/;"	c
UIGeometry	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^public class UIGeometry$/;"	c
UIGrid	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^public class UIGrid : UIWidgetContainer$/;"	c
UIGridEditor	Assets/Addons/NGUI/Scripts/Editor/UIGridEditor.cs	/^public class UIGridEditor : UIWidgetContainerEditor$/;"	c
UIImageButton	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^public class UIImageButton : MonoBehaviour$/;"	c
UIImageButtonInspector	Assets/Addons/NGUI/Scripts/Editor/UIImageButtonInspector.cs	/^public class UIImageButtonInspector : Editor$/;"	c
UIInput	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^public class UIInput : MonoBehaviour$/;"	c
UIInputEditor	Assets/Addons/NGUI/Scripts/Editor/UIInputEditor.cs	/^public class UIInputEditor : UIWidgetContainerEditor$/;"	c
UIItemSlot	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^public abstract class UIItemSlot : MonoBehaviour$/;"	c
UIItemStorage	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^public class UIItemStorage : MonoBehaviour$/;"	c
UIKeyBinding	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^public class UIKeyBinding : MonoBehaviour$/;"	c
UIKeyNavigation	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^public class UIKeyNavigation : MonoBehaviour$/;"	c
UIKeyNavigationEditor	Assets/Addons/NGUI/Scripts/Editor/UIKeyNavigationEditor.cs	/^public class UIKeyNavigationEditor : Editor$/;"	c
UILabel	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^public class UILabel : UIWidget$/;"	c
UILabelInspector	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^public class UILabelInspector : UIWidgetInspector$/;"	c
UILocalize	Assets/Addons/NGUI/Scripts/UI/UILocalize.cs	/^public class UILocalize : MonoBehaviour$/;"	c
UILocalizeEditor	Assets/Addons/NGUI/Scripts/Editor/UILocalizeEditor.cs	/^public class UILocalizeEditor : Editor$/;"	c
UIOrthoCamera	Assets/Addons/NGUI/Scripts/UI/UIOrthoCamera.cs	/^public class UIOrthoCamera : MonoBehaviour$/;"	c
UIPanel	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^public class UIPanel : UIRect$/;"	c
UIPanelInspector	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^public class UIPanelInspector : UIRectEditor$/;"	c
UIPanelTool	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^public class UIPanelTool : EditorWindow$/;"	c
UIPlayAnimation	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^public class UIPlayAnimation : MonoBehaviour$/;"	c
UIPlayAnimationEditor	Assets/Addons/NGUI/Scripts/Editor/UIPlayAnimationEditor.cs	/^public class UIPlayAnimationEditor : Editor$/;"	c
UIPlaySound	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^public class UIPlaySound : MonoBehaviour$/;"	c
UIPlayTween	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^public class UIPlayTween : MonoBehaviour$/;"	c
UIPlayTweenEditor	Assets/Addons/NGUI/Scripts/Editor/UIPlayTweenEditor.cs	/^public class UIPlayTweenEditor : Editor$/;"	c
UIPopupList	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^public class UIPopupList : UIWidgetContainer$/;"	c
UIPopupListInspector	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^public class UIPopupListInspector : UIWidgetContainerEditor$/;"	c
UIProgressBar	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^public class UIProgressBar : UIWidgetContainer$/;"	c
UIProgressBarEditor	Assets/Addons/NGUI/Scripts/Editor/UIProgressBarEditor.cs	/^public class UIProgressBarEditor : UIWidgetContainerEditor$/;"	c
UIRect	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^public abstract class UIRect : MonoBehaviour$/;"	c
UIRectEditor	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^public class UIRectEditor : Editor$/;"	c
UIRoot	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^public class UIRoot : MonoBehaviour$/;"	c
UIRootEditor	Assets/Addons/NGUI/Scripts/Editor/UIRootEditor.cs	/^public class UIRootEditor : Editor$/;"	c
UISavedOption	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^public class UISavedOption : MonoBehaviour$/;"	c
UIScrollBar	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^public class UIScrollBar : UISlider$/;"	c
UIScrollBarEditor	Assets/Addons/NGUI/Scripts/Editor/UIScrollBarEditor.cs	/^public class UIScrollBarEditor : UIProgressBarEditor$/;"	c
UIScrollView	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^public class UIScrollView : MonoBehaviour$/;"	c
UIScrollViewEditor	Assets/Addons/NGUI/Scripts/Editor/UIScrollViewEditor.cs	/^public class UIScrollViewEditor : Editor$/;"	c
UISlider	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^public class UISlider : UIProgressBar$/;"	c
UISliderColors	Assets/Addons/NGUI/Examples/Scripts/Other/UISliderColors.cs	/^public class UISliderColors : MonoBehaviour$/;"	c
UISliderEditor	Assets/Addons/NGUI/Scripts/Editor/UISliderEditor.cs	/^public class UISliderEditor : UIProgressBarEditor$/;"	c
UISoundVolume	Assets/Addons/NGUI/Scripts/Interaction/UISoundVolume.cs	/^public class UISoundVolume : MonoBehaviour$/;"	c
UISprite	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^public class UISprite : UIWidget$/;"	c
UISpriteAnimation	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^public class UISpriteAnimation : MonoBehaviour$/;"	c
UISpriteAnimationInspector	Assets/Addons/NGUI/Scripts/Editor/UISpriteAnimationInspector.cs	/^public class UISpriteAnimationInspector : Editor$/;"	c
UISpriteData	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^public class UISpriteData$/;"	c
UISpriteInspector	Assets/Addons/NGUI/Scripts/Editor/UISpriteInspector.cs	/^public class UISpriteInspector : UIWidgetInspector$/;"	c
UIStorageSlot	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIStorageSlot.cs	/^public class UIStorageSlot : UIItemSlot$/;"	c
UIStretch	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^public class UIStretch : MonoBehaviour$/;"	c
UIStretchEditor	Assets/Addons/NGUI/Scripts/Editor/UIStretchEditor.cs	/^public class UIStretchEditor : Editor$/;"	c
UITable	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^public class UITable : UIWidgetContainer$/;"	c
UITableEditor	Assets/Addons/NGUI/Scripts/Editor/UITableEditor.cs	/^public class UITableEditor : UIWidgetContainerEditor$/;"	c
UITextList	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^public class UITextList : MonoBehaviour$/;"	c
UITexture	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^public class UITexture : UIWidget$/;"	c
UITextureInspector	Assets/Addons/NGUI/Scripts/Editor/UITextureInspector.cs	/^public class UITextureInspector : UIWidgetInspector$/;"	c
UITexturePacker	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public UITexturePacker (int width, int height, bool rotations)$/;"	m	class:UITexturePacker
UITexturePacker	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^public class UITexturePacker$/;"	c
UIToggle	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^public class UIToggle : UIWidgetContainer$/;"	c
UIToggleInspector	Assets/Addons/NGUI/Scripts/Editor/UIToggleInspector.cs	/^public class UIToggleInspector : UIWidgetContainerEditor$/;"	c
UIToggledComponents	Assets/Addons/NGUI/Scripts/Interaction/UIToggledComponents.cs	/^public class UIToggledComponents : MonoBehaviour$/;"	c
UIToggledObjects	Assets/Addons/NGUI/Scripts/Interaction/UIToggledObjects.cs	/^public class UIToggledObjects : MonoBehaviour$/;"	c
UITooltip	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^public class UITooltip : MonoBehaviour$/;"	c
UITweener	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	static public T Begin<T> (GameObject go, float duration) where T : UITweener$/;"	p	class:UITweener
UITweener	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^public abstract class UITweener : MonoBehaviour$/;"	c
UITweenerEditor	Assets/Addons/NGUI/Scripts/Editor/UITweenerEditor.cs	/^public class UITweenerEditor : Editor$/;"	c
UIViewport	Assets/Addons/NGUI/Scripts/UI/UIViewport.cs	/^public class UIViewport : MonoBehaviour$/;"	c
UIWidget	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public T AddWidget<T> (GameObject go) where T : UIWidget$/;"	p	class:NGUITools
UIWidget	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^public class UIWidget : UIRect$/;"	c
UIWidgetContainer	Assets/Addons/NGUI/Scripts/Interaction/UIWidgetContainer.cs	/^public class UIWidgetContainer : MonoBehaviour { }$/;"	c
UIWidgetContainerEditor	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^public class UIWidgetContainerEditor : Editor$/;"	c
UIWidgetInspector	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^public class UIWidgetInspector : UIRectEditor$/;"	c
UIWrapContent	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^public class UIWrapContent : MonoBehaviour$/;"	c
UIWrapContentEditor	Assets/Addons/NGUI/Scripts/Editor/UIWrapContentEditor.cs	/^public class UIWrapContentEditor : Editor$/;"	c
URL	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		URL = 3,$/;"	e	enum:UIInput.KeyboardType	file:
USE_MECANIM	Assets/Addons/NGUI/Scripts/Editor/UIPlayAnimationEditor.cs	/^#define USE_MECANIM$/;"	d	file:
USE_MECANIM	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^#define USE_MECANIM$/;"	d	file:
USE_MECANIM	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^#define USE_MECANIM$/;"	d	file:
USE_SIMPLE_DICTIONARY	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^#define USE_SIMPLE_DICTIONARY$/;"	d	file:
Unequip	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	public InvGameItem Unequip (InvBaseItem.Slot slot) { return Replace(slot, null); }$/;"	m	class:InvEquipment
Unequip	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	public InvGameItem Unequip (InvGameItem item)$/;"	m	class:InvEquipment
Unified	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^		Unified,$/;"	e	enum:UIRectEditor.AnchorType	file:
Unity	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^		Unity,$/;"	e	enum:UILabelInspector.FontType	file:
Unity2D	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		Unity2D,	\/\/ Perform a Physics2D.OverlapPoint$/;"	e	enum:UICamera.EventType	file:
UnplayableCell	Assets/Scripts/Grid/UnplayableCell.cs	/^        public UnplayableCell(IntVect2 key) : base(key) {$/;"	m	class:Shanghai.Grid.UnplayableCell
UnplayableCell	Assets/Scripts/Grid/UnplayableCell.cs	/^    public class UnplayableCell : GridCell {$/;"	c	namespace:Shanghai.Grid
Unrestricted	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		Unrestricted,$/;"	e	enum:UIScrollView.Movement	file:
Up	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^		Up,$/;"	e	enum:UITable.Direction	file:
Update	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	void Update ()$/;"	m	class:UICursor	file:
Update	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	void Update ()$/;"	m	class:UIItemSlot	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/LagPosition.cs	/^	void Update ()$/;"	m	class:LagPosition	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/LagRotation.cs	/^	void Update ()$/;"	m	class:LagRotation	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/PanWithMouse.cs	/^	void Update ()$/;"	m	class:PanWithMouse	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/PlayIdleAnimations.cs	/^	void Update ()$/;"	m	class:PlayIdleAnimations	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/ShaderQuality.cs	/^	void Update ()$/;"	m	class:ShaderQuality	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/Spin.cs	/^	void Update ()$/;"	m	class:Spin	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/TypewriterEffect.cs	/^	void Update ()$/;"	m	class:TypewriterEffect	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/UISliderColors.cs	/^	void Update ()$/;"	m	class:UISliderColors	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/WindowAutoYaw.cs	/^	void Update ()$/;"	m	class:WindowAutoYaw	file:
Update	Assets/Addons/NGUI/Examples/Scripts/Other/WindowDragTilt.cs	/^	void Update ()$/;"	m	class:WindowDragTilt	file:
Update	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	void Update ()$/;"	m	class:UIDraggableCamera	file:
Update	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	protected virtual void Update ()$/;"	m	class:UIGrid
Update	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	void Update ()$/;"	m	class:UIKeyBinding	file:
Update	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	void Update ()$/;"	m	class:UIPlayTween	file:
Update	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected void Update ()$/;"	m	class:UIProgressBar
Update	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	void Update ()$/;"	m	class:ActiveAnimation	file:
Update	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public void Update () { Update(true); }$/;"	m	class:NGUIText
Update	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public void Update (bool request)$/;"	m	class:NGUIText
Update	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	void Update ()$/;"	m	class:PropertyBinding	file:
Update	Assets/Addons/NGUI/Scripts/Internal/RealTime.cs	/^	void Update ()$/;"	m	class:RealTime	file:
Update	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	void Update ()$/;"	m	class:SpringPanel	file:
Update	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public void Update ()$/;"	m	class:UIRect
Update	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	void Update ()$/;"	m	class:SpringPosition	file:
Update	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	void Update ()$/;"	m	class:UITweener	file:
Update	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^	void Update ()$/;"	m	class:UI2DSpriteAnimation	file:
Update	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	void Update ()$/;"	m	class:UIAnchor	file:
Update	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	void Update ()$/;"	m	class:UICamera	file:
Update	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	void Update ()$/;"	m	class:UIInput	file:
Update	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	void Update()$/;"	m	class:UIInput	file:
Update	Assets/Addons/NGUI/Scripts/UI/UIOrthoCamera.cs	/^	void Update ()$/;"	m	class:UIOrthoCamera	file:
Update	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	void Update ()$/;"	m	class:UIRoot	file:
Update	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	void Update ()$/;"	m	class:UISpriteAnimation	file:
Update	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	void Update ()$/;"	m	class:UIStretch	file:
Update	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	void Update ()$/;"	m	class:UITextList	file:
Update	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected virtual void Update ()$/;"	m	class:UITooltip
Update	Assets/Addons/RetinaPro/Example/refreshPanelTest.cs	/^	void Update () {$/;"	m	class:refreshPanelTest	file:
Update	Assets/Scripts/Controllers/CellController.cs	/^        public void Update() {$/;"	m	class:Shanghai.Controllers.CellController
Update	Assets/Scripts/Shanghai.cs	/^        public void Update() {$/;"	m	class:Shanghai.Shanghai
UpdateActiveMissions	Assets/Scripts/Shanghai.cs	/^        public void UpdateActiveMissions(float delta) {$/;"	m	class:Shanghai.Shanghai
UpdateAnchor	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected void UpdateAnchor (int index, bool resetRelative)$/;"	m	class:UIRectEditor
UpdateAnchors	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected void UpdateAnchors (bool resetRelative)$/;"	m	class:UIRectEditor
UpdateAnchors	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public void UpdateAnchors () { if (isAnchored) OnAnchor(); }$/;"	m	class:UIRect
UpdateAtlas	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public void UpdateAtlas (UIAtlas atlas, List<SpriteEntry> sprites)$/;"	m	class:UIAtlasMaker
UpdateAtlas	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	void UpdateAtlas (List<Texture> textures, bool keepSprites)$/;"	m	class:UIAtlasMaker	file:
UpdateBounds	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	void UpdateBounds ()$/;"	m	class:UIDragObject	file:
UpdateCell	Assets/Scripts/Controllers/CellController.cs	/^        public void UpdateCell(PlayableCell cell) {$/;"	m	class:Shanghai.Controllers.CellController
UpdateCellPipeType	Assets/Scripts/Grid/Grid.cs	/^        private void UpdateCellPipeType(PlayableCell cell, List<IntVect2> path) {$/;"	m	class:Shanghai.Grid.Grid	file:
UpdateClient	Assets/Scripts/Controllers/ClientController.cs	/^        public void UpdateClient(Client client) {$/;"	m	class:Shanghai.Controllers.ClientController
UpdateCondition	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	public enum UpdateCondition$/;"	g	class:PropertyBinding
UpdateCursor	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	void UpdateCursor ()$/;"	m	class:UIItemSlot	file:
UpdateDrawCalls	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	void UpdateDrawCalls ()$/;"	m	class:UIPanel	file:
UpdateFinalAlpha	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected void UpdateFinalAlpha (int frameID)$/;"	m	class:UIWidget
UpdateGeometry	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public void UpdateGeometry ()$/;"	m	class:UIDrawCall
UpdateGeometry	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public bool UpdateGeometry (int frame)$/;"	m	class:UIWidget
UpdateGridController	Assets/Scripts/GameModel.cs	/^        private IEnumerator UpdateGridController() {$/;"	m	class:Shanghai.GameModel	file:
UpdateHorizontalAnchor	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static public void UpdateHorizontalAnchor (UIRect r, UIRect.AnchorPoint anchor, bool resetRelative)$/;"	m	class:UIRectEditor
UpdateImage	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	void UpdateImage()$/;"	m	class:UIImageButton	file:
UpdateItem	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	protected virtual void UpdateItem (Transform item, int index) {}$/;"	m	class:UIWrapContent
UpdateLabel	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public void UpdateLabel ()$/;"	m	class:UIInput
UpdateLayers	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	void UpdateLayers ()$/;"	m	class:UIPanel	file:
UpdateMaterials	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	void UpdateMaterials ()$/;"	m	class:UIDrawCall	file:
UpdateNGUIText	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public void UpdateNGUIText ()$/;"	m	class:UILabel
UpdatePosition	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public void UpdatePosition ()$/;"	m	class:UIScrollView
UpdatePrevCell	Assets/Scripts/Grid/Grid.cs	/^        private void UpdatePrevCell(PlayableCell prevCell, PlayableCell cell) {$/;"	m	class:Shanghai.Grid.Grid	file:
UpdateScrollbars	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected void UpdateScrollbars (UIProgressBar slider, float contentMin, float contentMax, float contentSize, float viewSize, bool inverted)$/;"	m	class:UIScrollView
UpdateScrollbars	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public virtual void UpdateScrollbars (bool recalculateBounds)$/;"	m	class:UIScrollView
UpdateScrollbars	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public void UpdateScrollbars () { UpdateScrollbars(true); }$/;"	m	class:UIScrollView
UpdateSelf	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	void UpdateSelf ()$/;"	m	class:UIPanel	file:
UpdateSource	Assets/Scripts/Controllers/SourceController.cs	/^        public void UpdateSource(SourceCell sourceCell) {$/;"	m	class:Shanghai.Controllers.SourceController
UpdateSourceCell	Assets/Scripts/Grid/SourceRow.cs	/^        public void UpdateSourceCell(int key, Source source) {$/;"	m	class:Shanghai.Grid.SourceRow
UpdateSprite	Assets/Scripts/Controllers/CellController.cs	/^        private void UpdateSprite(UISprite sprite, string prefix, string state) {$/;"	m	class:Shanghai.Controllers.CellController	file:
UpdateTarget	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	public void UpdateTarget ()$/;"	m	class:PropertyBinding
UpdateTarget	Assets/Scripts/Controllers/TargetController.cs	/^        public void UpdateTarget(Target target) {$/;"	m	class:Shanghai.Controllers.TargetController
UpdateTexture	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public bool UpdateTexture (UIAtlas atlas, List<SpriteEntry> sprites)$/;"	m	class:UIAtlasMaker
UpdateTransform	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public bool UpdateTransform (int frame)$/;"	m	class:UIWidget
UpdateTransformMatrix	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	void UpdateTransformMatrix ()$/;"	m	class:UIPanel	file:
UpdateUVRect	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public void UpdateUVRect ()$/;"	m	class:UIFont
UpdateVerticalAnchor	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static public void UpdateVerticalAnchor (UIRect r, UIRect.AnchorPoint anchor, bool resetRelative)$/;"	m	class:UIRectEditor
UpdateVisibility	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public bool UpdateVisibility (bool visibleByAlpha, bool visibleByPanel)$/;"	m	class:UIWidget
UpdateVisibleText	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected void UpdateVisibleText ()$/;"	m	class:UITextList
UpdateWidgetCollider	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void UpdateWidgetCollider (BoxCollider bc)$/;"	m	class:NGUITools
UpdateWidgetCollider	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void UpdateWidgetCollider (BoxCollider box, bool considerInactive)$/;"	m	class:NGUITools
UpdateWidgetCollider	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void UpdateWidgetCollider (GameObject go)$/;"	m	class:NGUITools
UpdateWidgetCollider	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public void UpdateWidgetCollider (GameObject go, bool considerInactive)$/;"	m	class:NGUITools
UpdateWidgets	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	void UpdateWidgets()$/;"	m	class:UIPanel	file:
Upgrade	Assets/Addons/NGUI/Scripts/Interaction/UIButtonKeys.cs	/^	public void Upgrade ()$/;"	m	class:UIButtonKeys
Upgrade	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected virtual void Upgrade () { }$/;"	m	class:UIProgressBar
Upgrade	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	protected override void Upgrade ()$/;"	m	class:UIScrollBar
Upgrade	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	protected override void Upgrade ()$/;"	m	class:UISlider
Upgrade	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	bool Upgrade ()$/;"	m	class:UIAtlas	file:
UpgradeFrom265	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected virtual void UpgradeFrom265 ()$/;"	m	class:UIWidget
UpgradeFrom265	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	protected override void UpgradeFrom265 ()$/;"	m	class:UILabel
UpgradeTexturesToSprites	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public void UpgradeTexturesToSprites (UIAtlas atlas)$/;"	m	class:NGUIEditorTools
Upgraded	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^		Upgraded,$/;"	e	enum:UIScrollBar.Direction	file:
Upgraded	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^		Upgraded,$/;"	e	enum:UISlider.Direction	file:
Username	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^		Username,$/;"	e	enum:UIInput.Validation	file:
UsesSprite	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public bool UsesSprite (string s)$/;"	m	class:UIFont
VERT	Assets/Scripts/Grid/PlayableCell.cs	/^        public enum PipeType {NONE=0, HORI, VERT, NE, NW, SE, SW, LEFT, RIGHT, TOP, BOTTOM};$/;"	e	enum:Shanghai.Grid.PlayableCell.PipeType	file:
Valid	Assets/Scripts/Grid/GridCell.cs	/^        public bool Valid = true;$/;"	f	class:Shanghai.Grid.GridCell
Validate	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	static Vector3 Validate (Vector3 vector)$/;"	m	class:NGUITransformInspector	file:
Validate	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public bool Validate (UIAtlas atlas)$/;"	m	class:BMSymbol
Validate	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected char Validate (string text, int pos, char ch)$/;"	m	class:UIInput
Validate	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public string Validate (string val)$/;"	m	class:UIInput
ValidateCellInput	Assets/Scripts/Grid/Grid.cs	/^        public bool ValidateCellInput(IntVect2 key, List<IntVect2> path) {$/;"	m	class:Shanghai.Grid.Grid
ValidateHealth	Assets/Scripts/Entities/Target.cs	/^        public void ValidateHealth() {$/;"	m	class:Shanghai.Entities.Target
ValidateReputation	Assets/Scripts/Entities/Client.cs	/^        public void ValidateReputation() {$/;"	m	class:Shanghai.Entities.Client
Validation	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public enum Validation$/;"	g	class:UIInput
VectorDelegate	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public delegate void VectorDelegate (GameObject go, Vector2 delta);$/;"	m	class:UIEventListener
Vertical	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^		Vertical,$/;"	e	enum:UIDragDropItem.Restriction	file:
Vertical	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^		Vertical,$/;"	e	enum:UIGrid.Arrangement	file:
Vertical	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^		Vertical,$/;"	e	enum:UIGrid.Sorting	file:
Vertical	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^		Vertical,$/;"	e	enum:UIKeyNavigation.Constraint	file:
Vertical	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^		Vertical,$/;"	e	enum:UIScrollBar.Direction	file:
Vertical	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		Vertical,$/;"	e	enum:UIScrollView.Movement	file:
Vertical	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^		Vertical,$/;"	e	enum:UISlider.Direction	file:
Vertical	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^		Vertical,$/;"	e	enum:UITable.Sorting	file:
Vertical	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Vertical,$/;"	e	enum:UISprite.FillDirection	file:
Vertical	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^		Vertical,$/;"	e	enum:UIStretch.Style	file:
VerticalList	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	static protected string[] VerticalList = new string[] { "Target's Bottom", "Target's Center", "Target's Top", "Custom", "Set to Current Position" };$/;"	f	class:UIRectEditor
Vertically	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^		Vertically,$/;"	e	enum:UISprite.Flip	file:
View	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	enum View$/;"	g	class:UIFontInspector
Visibility	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^	enum Visibility$/;"	g	class:UIDrawCallViewer
Visibility	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	enum Visibility$/;"	g	class:UIPanelTool
Visible	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^		Visible,$/;"	e	enum:UIDrawCallViewer.Visibility	file:
Visible	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^		Visible,$/;"	e	enum:UIPanelTool.Visibility	file:
VoidDelegate	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public delegate void VoidDelegate (GameObject go);$/;"	m	class:UIEventListener
Weapon	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^		Weapon,			\/\/ All the following elements are yours to customize -- edit, add or remove as you desire$/;"	e	enum:InvBaseItem.Slot	file:
WhenDragging	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^		WhenDragging,$/;"	e	enum:UIScrollView.ShowCondition	file:
WidgetType	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	public enum WidgetType$/;"	g	class:UICreateWidgetWizard
WillLosePrefab	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public bool WillLosePrefab (GameObject root)$/;"	m	class:NGUIEditorTools
WindowAutoYaw	Assets/Addons/NGUI/Examples/Scripts/Other/WindowAutoYaw.cs	/^public class WindowAutoYaw : MonoBehaviour$/;"	c
WindowDragTilt	Assets/Addons/NGUI/Examples/Scripts/Other/WindowDragTilt.cs	/^public class WindowDragTilt : MonoBehaviour$/;"	c
World	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		World,		\/\/ Perform a Physics.Raycast and sort by distance to the point that was hit.$/;"	e	enum:UICamera.EventType	file:
Worn	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		Worn,$/;"	e	enum:InvGameItem.Quality	file:
Wrap	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public bool Wrap (string text, out string final) { return Wrap(text, out final, 1000000); }$/;"	m	class:UILabel
Wrap	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public bool Wrap (string text, out string final, int height)$/;"	m	class:UILabel
Wrap01	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public float Wrap01 (float val) { return val - Mathf.FloorToInt(val); }$/;"	m	class:NGUIMath
WrapAngle	Assets/Addons/NGUI/Scripts/Internal/NGUIMath.cs	/^	static public float WrapAngle (float angle)$/;"	m	class:NGUIMath
WrapContent	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	public void WrapContent ()$/;"	m	class:UIWrapContent
WrapText	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public bool WrapText (string text, out string finalText)$/;"	m	class:NGUIText
WrapText	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public bool WrapText (string text, out string finalText, bool keepCharCount)$/;"	m	class:NGUIText
WriteToBuffers	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	public void WriteToBuffers (BetterList<Vector3> v, BetterList<Vector2> u, BetterList<Color32> c, BetterList<Vector3> n, BetterList<Vector4> t)$/;"	m	class:UIGeometry
WriteToBuffers	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public void WriteToBuffers (BetterList<Vector3> v, BetterList<Vector2> u, BetterList<Color32> c, BetterList<Vector3> n, BetterList<Vector4> t)$/;"	m	class:UIWidget
X	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^		X = 1,$/;"	e	enum:NGUITransformInspector.Axes	file:
XMLNode	Assets/Addons/RetinaPro/XMLParser/XMLNode.cs	/^public class XMLNode: Hashtable$/;"	c
XMLNodeList	Assets/Addons/RetinaPro/XMLParser/XMLNodeList.cs	/^public class XMLNodeList: ArrayList $/;"	c
XMLParser	Assets/Addons/RetinaPro/XMLParser/XMLParser.cs	/^public class XMLParser$/;"	c
Y	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^		Y = 2,$/;"	e	enum:NGUITransformInspector.Axes	file:
Z	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^		Z = 4,$/;"	e	enum:NGUITransformInspector.Axes	file:
_ActiveMissions	Assets/Scripts/GameModel.cs	/^        private List<ActiveMission> _ActiveMissions = new List<ActiveMission>();$/;"	f	class:Shanghai.GameModel	file:
_CanDraw	Assets/Scripts/GameModel.cs	/^        private bool _CanDraw = true;$/;"	f	class:Shanghai.GameModel	file:
_Cells	Assets/Scripts/Grid/Grid.cs	/^        private List<List<PlayableCell>> _Cells = new List<List<PlayableCell>>();$/;"	f	class:Shanghai.Grid.Grid	file:
_Clients	Assets/Scripts/GameModel.cs	/^        private Dictionary<string, Client> _Clients;$/;"	f	class:Shanghai.GameModel	file:
_Config	Assets/Scripts/Controllers/ClientController.cs	/^        private ShanghaiConfig _Config;$/;"	f	class:Shanghai.Controllers.ClientController	file:
_Config	Assets/Scripts/Controllers/TelegramController.cs	/^        private ShanghaiConfig _Config;$/;"	f	class:Shanghai.Controllers.TelegramController	file:
_Config	Assets/Scripts/Controllers/TelegramMachineController.cs	/^        private ShanghaiConfig _Config;$/;"	f	class:Shanghai.Controllers.TelegramMachineController	file:
_Config	Assets/Scripts/Entities/Client.cs	/^        private ShanghaiConfig _Config;$/;"	f	class:Shanghai.Entities.Client	file:
_Config	Assets/Scripts/Entities/Target.cs	/^        private ShanghaiConfig _Config;$/;"	f	class:Shanghai.Entities.Target	file:
_Config	Assets/Scripts/EventGenerator.cs	/^        private ShanghaiConfig _Config;$/;"	f	class:Shanghai.EventGenerator	file:
_Config	Assets/Scripts/Grid/ActiveMission.cs	/^        private ShanghaiConfig _Config;$/;"	f	class:Shanghai.Grid.ActiveMission	file:
_Config	Assets/Scripts/Shanghai.cs	/^        private ShanghaiConfig _Config;$/;"	f	class:Shanghai.Shanghai	file:
_CurrentCell	Assets/Scripts/Path/PathDrawer.cs	/^        private IntVect2 _CurrentCell = null;$/;"	f	class:Shanghai.Path.PathDrawer	file:
_CurrentObject	Assets/Scripts/Controllers/CellController.cs	/^        private GameObject _CurrentObject = null;$/;"	f	class:Shanghai.Controllers.CellController	file:
_CurrentTelegram	Assets/Scripts/Controllers/TelegramMachineController.cs	/^        private GameObject _CurrentTelegram;$/;"	f	class:Shanghai.Controllers.TelegramMachineController	file:
_CurrentTime	Assets/Scripts/Shanghai.cs	/^        private float _CurrentTime;$/;"	f	class:Shanghai.Shanghai	file:
_Generator	Assets/Scripts/Shanghai.cs	/^        private EventGenerator _Generator;$/;"	f	class:Shanghai.Shanghai	file:
_Grid	Assets/Scripts/GameModel.cs	/^        private Grid.Grid _Grid;$/;"	f	class:Shanghai.GameModel	file:
_Instance	Assets/Libs/Singleton.cs	/^    protected static T _Instance;$/;"	f	class:MonoSingleton
_IsDragging	Assets/Scripts/Controllers/TelegramController.cs	/^        private bool _IsDragging = false;$/;"	f	class:Shanghai.Controllers.TelegramController	file:
_Key	Assets/Scripts/Controllers/ClientController.cs	/^        private string _Key;$/;"	f	class:Shanghai.Controllers.ClientController	file:
_Key	Assets/Scripts/Controllers/TargetController.cs	/^        private string _Key;$/;"	f	class:Shanghai.Controllers.TargetController	file:
_LastDoNotUse	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^		_LastDoNotUse,	\/\/ Flash export doesn't support Enum.GetNames :($/;"	e	enum:InvBaseItem.Slot	file:
_LastDoNotUse	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^		_LastDoNotUse,	\/\/ Flash export doesn't support Enum.GetNames :($/;"	e	enum:InvGameItem.Quality	file:
_MissionInterval	Assets/Scripts/Shanghai.cs	/^        private float _MissionInterval = 0.0f;$/;"	f	class:Shanghai.Shanghai	file:
_Missions	Assets/Scripts/GameModel.cs	/^        private List<Mission> _Missions = new List<Mission>();$/;"	f	class:Shanghai.GameModel	file:
_Model	Assets/Scripts/EventGenerator.cs	/^        private GameModel _Model;$/;"	f	class:Shanghai.EventGenerator	file:
_Model	Assets/Scripts/Path/PathDrawer.cs	/^        private GameModel _Model;$/;"	f	class:Shanghai.Path.PathDrawer	file:
_Model	Assets/Scripts/Shanghai.cs	/^        private GameModel _Model;$/;"	f	class:Shanghai.Shanghai	file:
_Money	Assets/Scripts/GameModel.cs	/^        private int _Money = 0;$/;"	f	class:Shanghai.GameModel	file:
_OverSource	Assets/Scripts/Controllers/TelegramController.cs	/^        private SourceController _OverSource = null;$/;"	f	class:Shanghai.Controllers.TelegramController	file:
_Path	Assets/Scripts/Path/PathDrawer.cs	/^        private List<IntVect2> _Path = new List<IntVect2>();$/;"	f	class:Shanghai.Path.PathDrawer	file:
_Pipe	Assets/Scripts/Grid/PlayableCell.cs	/^        private PipeType _Pipe = PipeType.NONE;$/;"	f	class:Shanghai.Grid.PlayableCell	file:
_Source	Assets/Scripts/Controllers/TelegramController.cs	/^        private Source _Source;$/;"	f	class:Shanghai.Controllers.TelegramController	file:
_SourceCells	Assets/Scripts/Grid/SourceRow.cs	/^        private List<SourceCell> _SourceCells = new List<SourceCell>();$/;"	f	class:Shanghai.Grid.SourceRow	file:
_SourceInterval	Assets/Scripts/Shanghai.cs	/^        private float _SourceInterval = 0.0f;$/;"	f	class:Shanghai.Shanghai	file:
_SourceRow	Assets/Scripts/Grid/Grid.cs	/^        private SourceRow _SourceRow;$/;"	f	class:Shanghai.Grid.Grid	file:
_State	Assets/Scripts/Shanghai.cs	/^        private GameState _State = GameState.START;$/;"	f	class:Shanghai.Shanghai	file:
_Table	Assets/Scripts/Controllers/ClientsController.cs	/^        private UITable _Table;$/;"	f	class:Shanghai.Controllers.ClientsController	file:
_Table	Assets/Scripts/Controllers/PlayGridController.cs	/^        private UITable _Table;$/;"	f	class:Shanghai.Controllers.PlayGridController	file:
_Table	Assets/Scripts/Controllers/SourceRowController.cs	/^        private UITable _Table;$/;"	f	class:Shanghai.Controllers.SourceRowController	file:
_Table	Assets/Scripts/Controllers/TargetsController.cs	/^        private UITable _Table;$/;"	f	class:Shanghai.Controllers.TargetsController	file:
_Targets	Assets/Scripts/GameModel.cs	/^        private Dictionary<string, Target> _Targets;$/;"	f	class:Shanghai.GameModel	file:
_TelegramIsOver	Assets/Scripts/Controllers/SourceController.cs	/^        private bool _TelegramIsOver = false;$/;"	f	class:Shanghai.Controllers.SourceController	file:
_TelegramPrefab	Assets/Scripts/Controllers/TelegramMachineController.cs	/^        private GameObject _TelegramPrefab;$/;"	f	class:Shanghai.Controllers.TelegramMachineController	file:
_atlasFilterMode	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^	private FilterMode _atlasFilterMode;$/;"	f	class:retinaProAtlas	file:
_atlasName	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^	private string _atlasName;$/;"	f	class:retinaProAtlas	file:
_atlasPadding	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^	private int _atlasPadding;$/;"	f	class:retinaProAtlas	file:
_atlasTextureFormat	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^	private TextureImporterFormat _atlasTextureFormat;$/;"	f	class:retinaProAtlas	file:
_deviceName	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private string 					_deviceName;$/;"	f	class:retinaProDevice	file:
_height	Assets/Addons/RetinaPro/Editor/retinaProScreen.cs	/^	private int _height;$/;"	f	class:retinaProScreen	file:
_internal	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr _internal;$/;"	f	struct:FreeType.FT_FaceRec
_internal	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr _internal;$/;"	f	struct:FreeType.FT_GlyphSlotRec
_internal	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr _internal;$/;"	f	struct:FreeType.FT_SizeRec
_isFont	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^	private bool _isFont;$/;"	f	class:retinaProAtlas	file:
_pixelSize	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private float 					_pixelSize;$/;"	f	class:retinaProDevice	file:
_rootAuto	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private bool 					_rootAuto;$/;"	f	class:retinaProDevice	file:
_rootHeight	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private int						_rootHeight;$/;"	f	class:retinaProDevice	file:
_rootUseBothPortLand	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private bool					_rootUseBothPortLand;$/;"	f	class:retinaProDevice	file:
_rootWidth	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private int 					_rootWidth;$/;"	f	class:retinaProDevice	file:
_screenHeight	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private int 					_screenHeight;$/;"	f	class:retinaProDevice	file:
_screenWidth	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private int 					_screenWidth;$/;"	f	class:retinaProDevice	file:
_screens	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private List<retinaProScreen> 	_screens;$/;"	f	class:retinaProDevice	file:
_sharedInstance	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^    static 			retinaProDataSerialize 		_sharedInstance = null;$/;"	f	class:retinaProDataSerialize	file:
_useForBothLandscapePortrait	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	private bool 					_useForBothLandscapePortrait;$/;"	f	class:retinaProDevice	file:
_useForBothLandscapePortrait	Assets/Addons/RetinaPro/Editor/retinaProScreen.cs	/^	private bool _useForBothLandscapePortrait;$/;"	f	class:retinaProScreen	file:
_width	Assets/Addons/RetinaPro/Editor/retinaProScreen.cs	/^	private int _width;$/;"	f	class:retinaProScreen	file:
absolute	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public int absolute = 0;$/;"	f	class:UIRect.AnchorPoint
action	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	public Action action = Action.PressAndClick;$/;"	f	class:UIKeyBinding
activate	Assets/Addons/NGUI/Scripts/Interaction/UIToggledComponents.cs	/^	public List<MonoBehaviour> activate;$/;"	f	class:UIToggledComponents
activate	Assets/Addons/NGUI/Scripts/Interaction/UIToggledObjects.cs	/^	public List<GameObject> activate;$/;"	f	class:UIToggledObjects
activeAnimation	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	public Animation activeAnimation;$/;"	f	class:UIToggle
activeDeviceIdx	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	int							activeDeviceIdx;$/;"	f	class:retinaProAtlasController	file:
activeFontScale	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	float activeFontScale { get { return (trueTypeFont != null || bitmapFont == null) ? 1f : (float)fontSize \/ bitmapFont.defaultSize; } }$/;"	p	class:UIPopupList
activeFontSize	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	int activeFontSize { get { return (trueTypeFont != null || bitmapFont == null) ? fontSize : bitmapFont.defaultSize; } }$/;"	p	class:UIPopupList
activeHeight	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public int activeHeight$/;"	p	class:UIRoot
activeList	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static public BetterList<UIDrawCall> activeList { get { return mActiveList; } }$/;"	p	class:UIDrawCall
activeScreenIdx	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	int 						activeScreenIdx;$/;"	f	class:retinaProAtlasController	file:
activeSprite	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	public UIWidget activeSprite;$/;"	f	class:UIToggle
activeTextColor	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public Color activeTextColor = Color.white;$/;"	f	class:UIInput
adjustByDPI	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public bool adjustByDPI = false;$/;"	f	class:UIRoot
advance	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Vector advance;$/;"	f	struct:FreeType.FT_GlyphSlotRec
advance	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int advance;	\/\/ How much to move the cursor after printing this character$/;"	f	class:BMGlyph
advance	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public int advance	{ get { return mAdvance; } }$/;"	p	class:BMSymbol
advance	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		public float advance = 0f;$/;"	f	class:NGUIText.GlyphInfo
alignment	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public Alignment alignment = Alignment.Left;$/;"	f	class:NGUIText
alignment	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Alignment alignment$/;"	p	class:UILabel
allow	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static public bool allow$/;"	p	class:NGUISnap
allow4096	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public bool allow4096$/;"	p	class:NGUISettings
allowMultiTouch	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public bool allowMultiTouch = true;$/;"	f	class:UICamera
allowRotations	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public bool allowRotations;$/;"	f	class:UITexturePacker
alpha	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public float alpha$/;"	p	class:UIProgressBar
alpha	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public abstract float alpha { get; set; }$/;"	p	class:UIRect
alpha	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public override float alpha$/;"	p	class:UIWidget
alpha	Assets/Addons/NGUI/Scripts/Tweening/AnimatedAlpha.cs	/^	public float alpha = 1f;$/;"	f	class:AnimatedAlpha
alpha	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	public float alpha { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenAlpha
alpha	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public override float alpha$/;"	p	class:UIPanel
alwaysOnScreen	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public bool alwaysOnScreen = false;$/;"	f	class:UIDrawCall
alwaysOnScreen	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool alwaysOnScreen = false;$/;"	f	class:UIPanel
ambigiousFont	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public Object ambigiousFont$/;"	p	class:NGUISettings
ambigiousFont	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public Object ambigiousFont$/;"	p	class:UIPopupList
ambigiousFont	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public UnityEngine.Object ambigiousFont$/;"	p	class:UILabel
amount	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^	public int amount;$/;"	f	class:InvStat
amountPerDelta	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public float amountPerDelta$/;"	p	class:UITweener
anchorCamera	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public Camera anchorCamera { get { if (!mAnchorsCached) ResetAnchors(); return mMyCam; } }$/;"	p	class:UIRect
anchorOffset	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool anchorOffset = false;$/;"	f	class:UIPanel
animSpeed	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	const float animSpeed = 0.15f;$/;"	f	class:UIPopupList	file:
animateSmoothly	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public bool animateSmoothly = false;$/;"	f	class:UIGrid
animationCurve	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public AnimationCurve animationCurve = new AnimationCurve(new Keyframe(0f, 0f, 0f, 1f), new Keyframe(1f, 1f, 1f, 0f));$/;"	f	class:UITweener
animator	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public Animator animator;$/;"	f	class:UIPlayAnimation
appearSpeed	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	public float appearSpeed = 10f;$/;"	f	class:UITooltip
applyGradient	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public bool applyGradient$/;"	p	class:UILabel
arrangement	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public Arrangement arrangement = Arrangement.Horizontal;$/;"	f	class:UIGrid
ascender	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int ascender;$/;"	f	struct:FreeType.FT_Size_Metrics
ascender	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short ascender;$/;"	f	struct:FreeType.FT_FaceRec
aspectRatio	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public float aspectRatio = 1f;$/;"	f	class:UIWidget
atlas	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public UIAtlas atlas$/;"	p	class:NGUISettings
atlas	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public UIAtlas atlas;$/;"	f	class:UIPopupList
atlas	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public UIAtlas atlas$/;"	p	class:UIFont
atlas	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public UIAtlas atlas$/;"	p	class:UISprite
atlasFilterMode	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^    public FilterMode atlasFilterMode$/;"	p	class:retinaProAtlas
atlasFolder	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public const string atlasFolder = "rp_Atlases\/";$/;"	f	class:retinaProConfig
atlasFolder	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public static string atlasFolder = "rp_Atlases\/";$/;"	f	class:retinaProDataRuntime
atlasList	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public List<retinaProAtlas> atlasList;$/;"	f	class:retinaProDataSerialize
atlasList	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public List<retinaProRuntimeAtlas> atlasList;$/;"	f	class:retinaProDataRuntime
atlasName	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^    public string atlasName$/;"	p	class:retinaProAtlas
atlasPMA	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public bool atlasPMA$/;"	p	class:NGUISettings
atlasPadding	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public int atlasPadding$/;"	p	class:NGUISettings
atlasPadding	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^    public int atlasPadding$/;"	p	class:retinaProAtlas
atlasResourceFolder	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public const string atlasResourceFolder = "\/Resources\/rp_atlases\/";$/;"	f	class:retinaProConfig
atlasTextureFolder	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public const string atlasTextureFolder = "\/Textures\/rp_atlases\/";$/;"	f	class:retinaProConfig
atlasTextureFormat	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^    public TextureImporterFormat atlasTextureFormat$/;"	p	class:retinaProAtlas
atlasTrimming	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public bool atlasTrimming$/;"	p	class:NGUISettings
attachment	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public GameObject attachment;$/;"	f	class:InvBaseItem
audioClip	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	public AudioClip audioClip;$/;"	f	class:UIPlaySound
audioSource	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	public AudioSource audioSource$/;"	p	class:TweenVolume
autoRefreshOnStartup	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public bool autoRefreshOnStartup = true;$/;"	f	class:retinaProAtlasController
autoResizeBoxCollider	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public bool autoResizeBoxCollider = false;$/;"	f	class:UIWidget
autohint	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Generic autohint;$/;"	f	struct:FreeType.FT_FaceRec
available_sizes	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr available_sizes;$/;"	f	struct:FreeType.FT_FaceRec
backdropTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Texture2D backdropTexture$/;"	p	class:NGUIEditorTools
background	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	public UIWidget background;$/;"	f	class:UIItemSlot
background	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public UIWidget background;$/;"	f	class:UIItemStorage
background	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	public UISprite background;$/;"	f	class:UITooltip
backgroundColor	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public Color backgroundColor$/;"	p	class:NGUISettings
backgroundColor	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public Color backgroundColor = Color.white;$/;"	f	class:UIPopupList
backgroundSprite	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public string backgroundSprite;$/;"	f	class:UIPopupList
backgroundWidget	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public UIWidget backgroundWidget { get { return mBG; } set { if (mBG != value) { mBG = value; mIsDirty = true; } } }$/;"	p	class:UIProgressBar
barSize	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	public float barSize$/;"	p	class:UIScrollBar
baseClipRegion	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public Vector4 baseClipRegion$/;"	p	class:UIPanel
baseDataPath	Assets/Addons/RetinaPro/retinaProFileLock.cs	/^	public static string baseDataPath = Application.dataPath;$/;"	f	class:retinaProFileLock
baseItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public InvBaseItem baseItem$/;"	p	class:InvGameItem
baseItemID	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public int baseItemID { get { return mBaseItemID; } }$/;"	p	class:InvGameItem
baseMaterial	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public Material baseMaterial$/;"	p	class:UIDrawCall
baseOffset	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public int baseOffset { get { return mBase; } set { mBase = value; } }$/;"	p	class:BMFont
baseline	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public float baseline = 0f;$/;"	f	class:NGUIText
bbox	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_BBox bbox;$/;"	f	struct:FreeType.FT_FaceRec
binHeight	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public int binHeight = 0;$/;"	f	class:UITexturePacker
binWidth	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public int binWidth = 0;$/;"	f	class:UITexturePacker
bitmap	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Bitmap bitmap;$/;"	f	struct:FreeType.FT_GlyphSlotRec
bitmapFont	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public UIFont bitmapFont;$/;"	f	class:UIPopupList
bitmapFont	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public UIFont bitmapFont;$/;"	f	class:NGUIText
bitmapFont	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public UIFont bitmapFont$/;"	p	class:UILabel
bitmap_left	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int bitmap_left;$/;"	f	struct:FreeType.FT_GlyphSlotRec
bitmap_top	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int bitmap_top;$/;"	f	struct:FreeType.FT_GlyphSlotRec
blankTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Texture2D blankTexture$/;"	p	class:NGUIEditorTools
bmFont	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public BMFont bmFont$/;"	p	class:UIFont
border	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	virtual public Vector4 border { get { return Vector4.zero; } }$/;"	p	class:UIWidget
border	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public override Vector4 border$/;"	p	class:UISprite
borderBottom	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int borderBottom = 0;$/;"	f	class:UISpriteData
borderLeft	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int borderLeft = 0;$/;"	f	class:UISpriteData
borderPadding	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	public Vector2 borderPadding = Vector2.zero;$/;"	f	class:UIStretch
borderRight	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int borderRight = 0;$/;"	f	class:UISpriteData
borderTop	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int borderTop = 0;$/;"	f	class:UISpriteData
bottomAnchor	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public AnchorPoint bottomAnchor = new AnchorPoint();$/;"	f	class:UIRect
bottomRight	Assets/Addons/NGUI/Scripts/UI/UIViewport.cs	/^	public Transform bottomRight;$/;"	f	class:UIViewport
bottomType	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public AdvancedType bottomType = AdvancedType.Sliced;$/;"	f	class:UISprite
bounds	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public virtual Bounds bounds$/;"	p	class:UIScrollView
buffer	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr buffer;$/;"	f	struct:FreeType.FT_Bitmap
buffer	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public List<T> buffer { get { return mList; } }$/;"	p	class:BetterList
cached	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		[System.NonSerialized] public bool cached = false;$/;"	f	class:EventDelegate.Parameter
cachedCamera	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public Camera cachedCamera { get { if (mCam == null) mCam = NGUITools.FindCameraForLayer(gameObject.layer); return mCam; } }$/;"	p	class:UIProgressBar
cachedCamera	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	public Camera cachedCamera { get { if (mCam == null) mCam = camera; return mCam; } }$/;"	p	class:TweenFOV
cachedCamera	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	public Camera cachedCamera { get { if (mCam == null) mCam = camera; return mCam; } }$/;"	p	class:TweenOrthoSize
cachedCamera	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public Camera cachedCamera { get { if (mCam == null) mCam = camera; return mCam; } }$/;"	p	class:UICamera
cachedGameObject	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public GameObject cachedGameObject { get { if (mGo == null) mGo = gameObject; return mGo; } }$/;"	p	class:UIRect
cachedRect	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	public UIRect cachedRect$/;"	p	class:TweenAlpha
cachedTransform	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public Transform cachedTransform { get { if (mTrans == null) mTrans = transform; return mTrans; } }$/;"	p	class:UIProgressBar
cachedTransform	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public Transform cachedTransform { get { if (mTrans == null) mTrans = transform; return mTrans; } }$/;"	p	class:UIDrawCall
cachedTransform	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public Transform cachedTransform { get { if (mTrans == null) mTrans = transform; return mTrans; } }$/;"	p	class:UIRect
cachedTransform	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	public Transform cachedTransform { get { if (mTrans == null) mTrans = transform; return mTrans; } }$/;"	p	class:TweenPosition
cachedTransform	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	public Transform cachedTransform { get { if (mTrans == null) mTrans = transform; return mTrans; } }$/;"	p	class:TweenRotation
cachedTransform	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	public Transform cachedTransform { get { if (mTrans == null) mTrans = transform; return mTrans; } }$/;"	p	class:TweenScale
cachedWidget	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	public UIWidget cachedWidget { get { if (mWidget == null) mWidget = GetComponent<UIWidget>(); return mWidget; } }$/;"	p	class:TweenHeight
cachedWidget	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	public UIWidget cachedWidget { get { if (mWidget == null) mWidget = GetComponent<UIWidget>(); return mWidget; } }$/;"	p	class:TweenWidth
callWhenFinished	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	[HideInInspector][SerializeField] string callWhenFinished;$/;"	f	class:UIPlayAnimation	file:
callWhenFinished	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	[HideInInspector][SerializeField] string callWhenFinished;$/;"	f	class:UIPlayTween	file:
callWhenFinished	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	[HideInInspector] public string callWhenFinished;$/;"	f	class:ActiveAnimation
callWhenFinished	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	[SerializeField][HideInInspector] public string callWhenFinished;$/;"	f	class:SpringPosition
callWhenFinished	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	[HideInInspector] public string callWhenFinished;$/;"	f	class:UITweener
camType	Assets/Addons/NGUI/Scripts/Editor/UICreateNewUIWizard.cs	/^	static public CameraType camType = CameraType.Simple2D;$/;"	f	class:UICreateNewUIWizard
canBeAnchored	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public virtual bool canBeAnchored { get { return true; } }$/;"	p	class:UIRect
canBeAnchored	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public override bool canBeAnchored { get { return mClipping != UIDrawCall.Clipping.None; } }$/;"	p	class:UIPanel
canConvert	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^	static public bool canConvert = true;$/;"	f	class:PropertyReferenceDrawer
canMoveHorizontally	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public bool canMoveHorizontally$/;"	p	class:UIScrollView
canMoveVertically	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public bool canMoveVertically$/;"	p	class:UIScrollView
canRead	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	public bool canRead { get { return (mBuffer != null && mOffset < mBuffer.Length); } }$/;"	p	class:ByteReader
cancelKey0	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public KeyCode cancelKey0 = KeyCode.Escape;$/;"	f	class:UICamera
cancelKey1	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public KeyCode cancelKey1 = KeyCode.JoystickButton1;$/;"	f	class:UICamera
caretColor	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public Color caretColor = new Color(1f, 1f, 1f, 0.8f);$/;"	f	class:UIInput
cellHeight	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public float cellHeight = 200f;$/;"	f	class:UIGrid
cellWidth	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public float cellWidth = 200f;$/;"	f	class:UIGrid
centerType	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public AdvancedType centerType = AdvancedType.Sliced;$/;"	f	class:UISprite
centeredObject	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	public GameObject centeredObject { get { return mCenteredObject; } }$/;"	p	class:UICenterOnChild
channel	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int channel;	\/\/ Channel mask (in most cases this will be 15 (RGBA, 1+2+4+8)$/;"	f	class:BMGlyph
channel	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		public int channel = 0;$/;"	f	class:NGUIText.GlyphInfo
charSize	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public int charSize { get { return mSize; } set { mSize = value; } }$/;"	p	class:BMFont
characterLimit	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public int characterLimit = 0; $/;"	f	class:UIInput
characterMap	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	static CharacterMap characterMap$/;"	p	class:UIFontMaker
charmap	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr charmap;$/;"	f	struct:FreeType.FT_FaceRec
charmaps	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr charmaps;$/;"	f	struct:FreeType.FT_FaceRec
charsPerSecond	Assets/Addons/NGUI/Examples/Scripts/Other/TypewriterEffect.cs	/^	public int charsPerSecond = 40;$/;"	f	class:TypewriterEffect
charsToInclude	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public string charsToInclude$/;"	p	class:NGUISettings
checkAnimation	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	[HideInInspector][SerializeField] Animation checkAnimation;$/;"	f	class:UIToggle	file:
checkAspect	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	void checkAspect(ref retinaProRuntimeScreen rs, float aspect, float deviceAspect, ref int i, ref int s, ref float bestAspectDiff, ref int bestIdx, ref int bestScreenIdx, ref int highestWidth)$/;"	m	class:retinaProAtlasController	file:
checkSprite	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	[HideInInspector][SerializeField] UISprite checkSprite = null;$/;"	f	class:UIToggle	file:
children	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public List<Transform> children$/;"	p	class:UITable
clearSelection	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public bool clearSelection = false;$/;"	f	class:UIPlayAnimation
clickNotification	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public ClickNotification clickNotification = ClickNotification.Always;$/;"	f	class:UICamera.MouseOrTouch
clickTime	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public float clickTime = 0f;	\/\/ The last time a click event was sent out$/;"	f	class:UICamera.MouseOrTouch
clipCount	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public int clipCount$/;"	p	class:UIPanel
clipName	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public string clipName;$/;"	f	class:UIPlayAnimation
clipOffset	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public Vector2 clipOffset$/;"	p	class:UIPanel
clipRange	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public Vector4 clipRange$/;"	p	class:UIPanel
clipSoftness	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public Vector2 clipSoftness$/;"	p	class:UIPanel
clipboard	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public string clipboard$/;"	p	class:NGUITools
clipping	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public UIDrawCall.Clipping clipping$/;"	p	class:UIPanel
clipsChildren	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool clipsChildren { get { return hasCumulativeClipping; } }$/;"	p	class:UIPanel
cloneOnDrag	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	public bool cloneOnDrag = false;$/;"	f	class:UIDragDropItem
color	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public Color color = Color.white;$/;"	f	class:InvBaseItem
color	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public Color color$/;"	p	class:InvGameItem
color	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public Color color$/;"	p	class:NGUISettings
color	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public Color color$/;"	p	class:UIWidget
color	Assets/Addons/NGUI/Scripts/Tweening/AnimatedColor.cs	/^	public Color color = Color.white;$/;"	f	class:AnimatedColor
color	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	public Color color { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenColor
colorMode	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public ColorMode colorMode$/;"	p	class:NGUISettings
colors	Assets/Addons/NGUI/Examples/Scripts/Other/UISliderColors.cs	/^	public Color[] colors = new Color[] { Color.red, Color.yellow, Color.green };$/;"	f	class:UISliderColors
cols	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public BetterList<Color32> cols = new BetterList<Color32>();$/;"	f	class:UIDrawCall
cols	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	public BetterList<Color32> cols = new BetterList<Color32>();$/;"	f	class:UIGeometry
columns	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public int columns = 0;$/;"	f	class:UITable
constraint	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	public Constraint constraint = Constraint.None;$/;"	f	class:UIKeyNavigation
container	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	public GameObject container = null;$/;"	f	class:UIAnchor
container	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	public GameObject container = null;$/;"	f	class:UIStretch
contentPivot	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public UIWidget.Pivot contentPivot = UIWidget.Pivot.TopLeft;$/;"	f	class:UIScrollView
contentRect	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public UIRect contentRect = null;$/;"	f	class:UIDragObject
contours	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr contours;$/;"	f	struct:FreeType.FT_Outline
contrastTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Texture2D contrastTexture$/;"	p	class:NGUIEditorTools
control_data	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr control_data;$/;"	f	struct:FreeType.FT_GlyphSlotRec
control_len	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int control_len;$/;"	f	struct:FreeType.FT_GlyphSlotRec
controller	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public MouseOrTouch controller = new MouseOrTouch();$/;"	f	class:UICamera
createAtlas	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	public static UIAtlas createAtlas(string atlasName, string device, out List<UISpriteData> oldSpriteData)$/;"	m	class:retinaProNGTools
createFont	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	public static UIFont createFont(string atlasName, string fontName, string device)$/;"	m	class:retinaProNGTools
cullContent	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	public bool cullContent = true;$/;"	f	class:UIWrapContent
cullWhileDragging	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool cullWhileDragging = false;$/;"	f	class:UIPanel
current	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	static public UIButton current;$/;"	f	class:UIButton
current	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	static public UIEventTrigger current;$/;"	f	class:UIEventTrigger
current	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	static public UIPlayAnimation current = null;$/;"	f	class:UIPlayAnimation
current	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	static public UIPlayTween current;$/;"	f	class:UIPlayTween
current	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	static public UIPopupList current;$/;"	f	class:UIPopupList
current	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	static public UIProgressBar current;$/;"	f	class:UIProgressBar
current	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	static public UIToggle current;$/;"	f	class:UIToggle
current	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	static public ActiveAnimation current;$/;"	f	class:ActiveAnimation
current	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	static public SpringPanel current;$/;"	f	class:SpringPanel
current	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	static public SpringPosition current;$/;"	f	class:SpringPosition
current	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	static public UITweener current;$/;"	f	class:UITweener
current	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public GameObject current;		\/\/ Current game object under the touch or mouse$/;"	f	class:UICamera.MouseOrTouch
current	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public UICamera current = null;$/;"	f	class:UICamera
current	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	static public UIInput current;$/;"	f	class:UIInput
currentCamera	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public Camera currentCamera = null;$/;"	f	class:UICamera
currentKey	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public KeyCode currentKey = KeyCode.None;$/;"	f	class:UICamera
currentLanguage	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	public string currentLanguage { get { return language; } set { language = value; } }$/;"	p	class:Localization
currentMomentum	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public Vector2 currentMomentum { get { return mMomentum; } set { mMomentum = value; } }$/;"	p	class:UIDraggableCamera
currentMomentum	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public Vector3 currentMomentum { get { return mMomentum; } set { mMomentum = value; mShouldMove = true; } }$/;"	p	class:UIScrollView
currentRay	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public Ray currentRay$/;"	p	class:UICamera
currentScheme	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public ControlScheme currentScheme = ControlScheme.Mouse;$/;"	f	class:UICamera
currentTouch	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public MouseOrTouch currentTouch = null;$/;"	f	class:UICamera
currentTouchID	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public int currentTouchID = -1;$/;"	f	class:UICamera
cursorPosition	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public int cursorPosition { get { return value.Length; } set {} }$/;"	p	class:UIInput
cursorPosition	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public int cursorPosition$/;"	p	class:UIInput
customMovement	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public Vector2 customMovement = new Vector2(1f, 0f);$/;"	f	class:UIScrollView
data	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr data;$/;"	f	struct:FreeType.FT_Generic
databaseID	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	public int databaseID = 0;$/;"	f	class:InvDatabase
db	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^		public InvDatabase db;$/;"	f	struct:InvFindItem.FindResult
deactivate	Assets/Addons/NGUI/Scripts/Interaction/UIToggledComponents.cs	/^	public List<MonoBehaviour> deactivate;$/;"	f	class:UIToggledComponents
deactivate	Assets/Addons/NGUI/Scripts/Interaction/UIToggledObjects.cs	/^	public List<GameObject> deactivate;$/;"	f	class:UIToggledObjects
debug	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public bool debug = false;$/;"	f	class:UICamera
debugAtlasSpriteData	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	public static void debugAtlasSpriteData(ref UIAtlas atlas)$/;"	m	class:retinaProNGTools
debugRaycast	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^	static public bool debugRaycast$/;"	p	class:NGUIDebug
defaultColor	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	public Color defaultColor$/;"	p	class:UIButtonColor
defaultFontSize	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int defaultFontSize { get { return (trueTypeFont != null) ? mFontSize : (mFont != null ? mFont.defaultSize : 16); } }$/;"	p	class:UILabel
defaultSize	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public int defaultSize$/;"	p	class:UIFont
defaultText	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public string defaultText$/;"	p	class:UIInput
degrees	Assets/Addons/NGUI/Examples/Scripts/Other/PanWithMouse.cs	/^	public Vector2 degrees = new Vector2(5f, 3f);$/;"	f	class:PanWithMouse
degrees	Assets/Addons/NGUI/Examples/Scripts/Other/WindowDragTilt.cs	/^	public float degrees = 30f;$/;"	f	class:WindowDragTilt
delay	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public float delay = 0f;$/;"	f	class:UITweener
delta	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public Vector2 delta;			\/\/ Delta since last update$/;"	f	class:UICamera.MouseOrTouch
deltaTime	Assets/Addons/NGUI/Scripts/Internal/RealTime.cs	/^	static public float deltaTime$/;"	p	class:RealTime
depth	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public int depth$/;"	p	class:UIWidget
depth	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public int depth;$/;"	f	struct:UICamera.DepthEntry
depth	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public int depth$/;"	p	class:UIPanel
depthEnd	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public int depthEnd = int.MinValue;$/;"	f	class:UIDrawCall
depthStart	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public int depthStart = int.MaxValue;$/;"	f	class:UIDrawCall
descender	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int descender;$/;"	f	struct:FreeType.FT_Size_Metrics
descender	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short descender;$/;"	f	struct:FreeType.FT_FaceRec
description	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public string description;$/;"	f	class:InvBaseItem
deviceIndex	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	int						deviceIndex;$/;"	f	class:retinaProAtlasWindow	file:
deviceList	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public List<retinaProDevice> deviceList;$/;"	f	class:retinaProDataSerialize
deviceList	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public List<retinaProRuntimeDevice> deviceList;$/;"	f	class:retinaProDataRuntime
dictionary	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public Dictionary<string, string[]> dictionary$/;"	p	class:Localization
direction	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	[HideInInspector][SerializeField] Direction direction = Direction.Upgraded; \/\/ Use 'fillDirection'$/;"	f	class:UISlider	file:
direction	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public Direction direction = Direction.Down;$/;"	f	class:UITable
direction	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	public Direction direction = Direction.SourceUpdatesTarget;$/;"	f	class:PropertyBinding
direction	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public AnimationOrTween.Direction direction { get { return mAmountPerDelta < 0f ? AnimationOrTween.Direction.Reverse : AnimationOrTween.Direction.Forward; } }$/;"	p	class:UITweener
disableDragIfFits	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public bool disableDragIfFits = false;$/;"	f	class:UIScrollView
disableWhenFinished	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public DisableCondition disableWhenFinished = DisableCondition.DoNotDisable;$/;"	f	class:UIPlayAnimation
disableWhenFinished	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public DisableCondition disableWhenFinished = DisableCondition.DoNotDisable;$/;"	f	class:UIPlayTween
disabledColor	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	public Color disabledColor = Color.grey;$/;"	f	class:UIButtonColor
disabledSprite	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	public string disabledSprite;$/;"	f	class:UIButton
disabledSprite	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	public string disabledSprite;$/;"	f	class:UIImageButton
dragCount	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public int dragCount$/;"	p	class:UICamera
dragEffect	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public DragEffect dragEffect = DragEffect.MomentumAndSpring;$/;"	f	class:UIDragObject
dragEffect	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public UIDragObject.DragEffect dragEffect = UIDragObject.DragEffect.MomentumAndSpring;$/;"	f	class:UIDraggableCamera
dragEffect	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public DragEffect dragEffect = DragEffect.MomentumAndSpring;$/;"	f	class:UIScrollView
dragHighlight	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	public bool dragHighlight = false;$/;"	f	class:UIButton
dragHighlight	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	bool dragHighlight = false;$/;"	f	class:UIPlayAnimation	file:
dragMovement	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public Vector3 dragMovement { get { return scale; } set { scale = value; } }$/;"	p	class:UIDragObject
dragStarted	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public bool dragStarted = false;$/;"	f	class:UICamera.MouseOrTouch
draggableCamera	Assets/Addons/NGUI/Scripts/Interaction/UIDragCamera.cs	/^	public UIDraggableCamera draggableCamera;$/;"	f	class:UIDragCamera
draggablePanel	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	[HideInInspector][SerializeField] UIScrollView draggablePanel;$/;"	f	class:UIDragScrollView	file:
dragged	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public GameObject dragged;		\/\/ Game object that's being dragged$/;"	f	class:UICamera.MouseOrTouch
drawCall	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	[HideInInspector][System.NonSerialized] public UIDrawCall drawCall;$/;"	f	class:UIWidget
drawCallClipRange	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public Vector4 drawCallClipRange = new Vector4(0f, 0f, 1f, 1f);$/;"	f	class:UIPanel
drawCallOffset	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public Vector3 drawCallOffset$/;"	p	class:UIPanel
drawCalls	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public BetterList<UIDrawCall> drawCalls = new BetterList<UIDrawCall>();$/;"	f	class:UIPanel
drawColor	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	protected virtual bool drawColor$/;"	p	class:UIWidgetInspector
drawGuides	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public bool drawGuides$/;"	p	class:NGUISettings
drawRegion	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public Vector4 drawRegion$/;"	p	class:UIWidget
drawingDimensions	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public virtual Vector4 drawingDimensions$/;"	p	class:UIWidget
drawingDimensions	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public override Vector4 drawingDimensions$/;"	p	class:UI2DSprite
drawingDimensions	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override Vector4 drawingDimensions$/;"	p	class:UILabel
drawingDimensions	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public override Vector4 drawingDimensions$/;"	p	class:UISprite
drawingDimensions	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	public override Vector4 drawingDimensions$/;"	p	class:UITexture
drawingUVs	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected virtual Vector4 drawingUVs$/;"	p	class:UISprite
driver	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr driver;$/;"	f	struct:FreeType.FT_FaceRec
dualState	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	bool dualState { get { return trigger == Trigger.OnPress || trigger == Trigger.OnHover; } }$/;"	p	class:UIPlayAnimation
duration	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	public float duration = 0.2f;$/;"	f	class:UIButtonColor
duration	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	public float duration = 0.2f;$/;"	f	class:UIButtonOffset
duration	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	public float duration = 0.2f;$/;"	f	class:UIButtonRotation
duration	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	public float duration = 0.2f;$/;"	f	class:UIButtonScale
duration	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public float duration = 1f;$/;"	f	class:UITweener
dynamicFont	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public Font dynamicFont$/;"	p	class:NGUISettings
dynamicFont	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public Font dynamicFont;$/;"	f	class:NGUIText
dynamicFont	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public Font dynamicFont$/;"	p	class:UIFont
dynamicFontStyle	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public FontStyle dynamicFontStyle$/;"	p	class:UIFont
dynamicMaterial	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public Material dynamicMaterial { get { return mDynamicMat; } }$/;"	p	class:UIDrawCall
dynamicTexture	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	Texture dynamicTexture$/;"	p	class:UIFont
eatWhitespace	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static void eatWhitespace( char[] json, ref int index )$/;"	m	class:NGUIJson
edPrefGameViewIdx	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	const string edPrefGameViewIdx = "retinaPro_previewGameViewIdx";$/;"	f	class:retinaProDataSerialize	file:
edPrefPreviewDeviceIdx	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	const string edPrefPreviewDeviceIdx = "retinaPro_previewDeviceIdx";$/;"	f	class:retinaProDataSerialize	file:
edPrefPreviewScreenIdx	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	const string edPrefPreviewScreenIdx = "retinaPro_previewScreenIdx";$/;"	f	class:retinaProDataSerialize	file:
edPrefUtilityRefreshSourceTextures	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	const string edPrefUtilityRefreshSourceTextures = "retinaPro_utilityRefreshSourceTextures";$/;"	f	class:retinaProDataSerialize	file:
editMode	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	public bool editMode = true;$/;"	f	class:PropertyBinding
editorSelectedAtlasIdx	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	int			 			editorSelectedAtlasIdx;$/;"	f	class:retinaProAtlasWindow	file:
effectColor	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Color effectColor$/;"	p	class:UILabel
effectDistance	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Vector2 effectDistance$/;"	p	class:UILabel
effectStyle	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Effect effectStyle$/;"	p	class:UILabel
encoding	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public bool encoding = false;$/;"	f	class:NGUIText
equipment	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/EquipRandomItem.cs	/^	public InvEquipment equipment;$/;"	f	class:EquipRandomItem
equipment	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIEquipmentSlot.cs	/^	public InvEquipment equipment;$/;"	f	class:UIEquipmentSlot
equippedItems	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	public InvGameItem[] equippedItems { get { return mItems; } }$/;"	p	class:InvEquipment
errorSound	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	public AudioClip errorSound;$/;"	f	class:UIItemSlot
eventHandler	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public UICamera eventHandler$/;"	p	class:UICamera
eventReceiver	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	[HideInInspector][SerializeField] GameObject eventReceiver;$/;"	f	class:UIPlayAnimation	file:
eventReceiver	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	[HideInInspector][SerializeField] GameObject eventReceiver;$/;"	f	class:UIPlayTween	file:
eventReceiver	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	[HideInInspector][SerializeField] GameObject eventReceiver;$/;"	f	class:UIPopupList	file:
eventReceiver	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	[HideInInspector][SerializeField] GameObject eventReceiver;$/;"	f	class:UIToggle	file:
eventReceiver	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	[HideInInspector] public GameObject eventReceiver;$/;"	f	class:ActiveAnimation
eventReceiver	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	[SerializeField][HideInInspector] GameObject eventReceiver = null;$/;"	f	class:SpringPosition	file:
eventReceiver	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	[HideInInspector] public GameObject eventReceiver;$/;"	f	class:UITweener
eventReceiverMask	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public LayerMask eventReceiverMask = -1;$/;"	f	class:UICamera
eventTable	Assets/Addons/Messenger/Messenger.cs	/^        private static Dictionary<string, Delegate> eventTable = MessengerInternal.eventTable;$/;"	f	class:Messenger	file:
eventTable	Assets/Addons/Messenger/Messenger.cs	/^        static public Dictionary<string, Delegate> eventTable = new Dictionary<string, Delegate>();$/;"	f	class:MessengerInternal
eventType	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public EventType eventType = EventType.UI;$/;"	f	class:UICamera
eventType1	Assets/Addons/Messenger/MessengerUnitTest.cs	/^        private readonly string eventType1 = "__testEvent1";$/;"	f	class:MessengerUnitTest	file:
eventType2	Assets/Addons/Messenger/MessengerUnitTest.cs	/^        private readonly string eventType2 = "__testEvent2";$/;"	f	class:MessengerUnitTest	file:
expectedType	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		public System.Type expectedType = typeof(void);$/;"	f	class:EventDelegate.Parameter
extensions	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr extensions;$/;"	f	struct:FreeType.FT_FaceRec
face	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr face;$/;"	f	struct:FreeType.FT_GlyphSlotRec
face	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr face;$/;"	f	struct:FreeType.FT_SizeRec
face_flags	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int face_flags;$/;"	f	struct:FreeType.FT_FaceRec
face_index	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int face_index;$/;"	f	struct:FreeType.FT_FaceRec
fallThrough	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public GameObject fallThrough;$/;"	f	class:UICamera
family_name	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr family_name;$/;"	f	struct:FreeType.FT_FaceRec
field	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		public string field;$/;"	f	class:EventDelegate.Parameter
fieldInfo	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		[System.NonSerialized] public FieldInfo fieldInfo;$/;"	f	class:EventDelegate.Parameter
fileAccess	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public bool fileAccess$/;"	p	class:NGUITools
fileIndex	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	int						fileIndex;$/;"	f	class:retinaProAtlasWindow	file:
fileLock	Assets/Addons/RetinaPro/retinaProFileLock.cs	/^	public static readonly object fileLock = new object();$/;"	f	class:retinaProFileLock
fillAmount	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public float fillAmount$/;"	p	class:UISprite
fillCenter	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public bool fillCenter$/;"	p	class:UISprite
fillDirection	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public FillDirection fillDirection$/;"	p	class:UIProgressBar
fillDirection	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public FillDirection fillDirection$/;"	p	class:UISprite
fillGeometry	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public bool fillGeometry = true;$/;"	f	class:UIWidget
fillWithDummyData	Assets/Addons/NGUI/Examples/Scripts/Other/ChatInput.cs	/^	public bool fillWithDummyData = false;$/;"	f	class:ChatInput
filter	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^	static public Type filter = typeof(void);$/;"	f	class:PropertyReferenceDrawer
finalAlpha	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public float finalAlpha = 1f;$/;"	f	class:UIRect
finalClipRegion	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public Vector4 finalClipRegion$/;"	p	class:UIPanel
finalLineHeight	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public float finalLineHeight = 0f;$/;"	f	class:NGUIText
finalRenderQueue	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public int finalRenderQueue$/;"	p	class:UIDrawCall
finalSize	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public int finalSize = 0;$/;"	f	class:NGUIText
finalSpacingX	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public float finalSpacingX = 0f;$/;"	f	class:NGUIText
finalizer	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr finalizer;$/;"	f	struct:FreeType.FT_Generic
fixAll	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	void fixAll()$/;"	m	class:retinaProAtlasController	file:
fixAtlas	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public void fixAtlas(ref UIAtlas atlasRef)$/;"	m	class:retinaProAtlasController
fixAtlasFolders	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	void fixAtlasFolders(ref retinaProAtlas atlasItem)$/;"	m	class:retinaProAtlasWindow	file:
fixAtlasOrFont	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public void fixAtlasOrFont(GameObject go)$/;"	m	class:retinaProAtlasController
fixAtlases	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public void fixAtlases()$/;"	m	class:retinaProAtlasController
fixColliders	Assets/Addons/RetinaPro/retinaProUtil.cs	/^	void fixColliders(GameObject go)$/;"	m	class:retinaProUtil	file:
fixDataFolder	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	void fixDataFolder()$/;"	m	class:retinaProDataSerialize	file:
fixFont	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public void fixFont(ref UIFont fontRef)$/;"	m	class:retinaProAtlasController
fixFonts	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public void fixFonts()$/;"	m	class:retinaProAtlasController
fixPixelPerfect	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	IEnumerator fixPixelPerfect()$/;"	m	class:retinaProAtlasController	file:
fixRoot	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public void fixRoot()$/;"	m	class:retinaProAtlasController
flags	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int flags;$/;"	f	struct:FreeType.FT_Outline
flip	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public Flip flip$/;"	p	class:UISprite
font	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	[HideInInspector][SerializeField] UIFont font; \/\/ Use 'bitmapFont' instead$/;"	f	class:UIPopupList	file:
font	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public UIFont font { get { return bitmapFont; } set { bitmapFont = value; } }$/;"	p	class:UILabel
fontData	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public TextAsset fontData$/;"	p	class:NGUISettings
fontScale	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public float fontScale = 1f;$/;"	f	class:NGUIText
fontSize	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public int fontSize$/;"	p	class:NGUISettings
fontSize	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public int fontSize = 16;$/;"	f	class:UIPopupList
fontSize	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public int fontSize = 16;$/;"	f	class:NGUIText
fontSize	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int fontSize$/;"	p	class:UILabel
fontStyle	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public FontStyle fontStyle$/;"	p	class:NGUISettings
fontStyle	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public FontStyle fontStyle = FontStyle.Normal;$/;"	f	class:UIPopupList
fontStyle	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public FontStyle fontStyle = FontStyle.Normal;$/;"	f	class:NGUIText
fontStyle	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public FontStyle fontStyle$/;"	p	class:UILabel
fontTexture	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public Texture2D fontTexture$/;"	p	class:NGUISettings
forceSquareAtlas	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public bool forceSquareAtlas$/;"	p	class:NGUISettings
foreground	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	[HideInInspector][SerializeField] Transform foreground = null;$/;"	f	class:UISlider	file:
foregroundColor	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public Color foregroundColor$/;"	p	class:NGUISettings
foregroundWidget	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public UIWidget foregroundWidget { get { return mFG; } set { if (mFG != value) { mFG = value; mIsDirty = true; } } }$/;"	p	class:UIProgressBar
format	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Glyph_Format format;$/;"	f	struct:FreeType.FT_GlyphSlotRec
fov	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	public float fov { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenFOV
framerate	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^	public int framerate = 20;$/;"	f	class:UI2DSpriteAnimation
frames	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^	public UnityEngine.Sprite[] frames;$/;"	f	class:UI2DSpriteAnimation
frames	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	public int frames { get { return mSpriteNames.Count; } }$/;"	p	class:UISpriteAnimation
framesPerSecond	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	public int framesPerSecond { get { return mFPS; } set { mFPS = value; } }$/;"	p	class:UISpriteAnimation
freeRectangles	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public List<Rect> freeRectangles = new List<Rect>();$/;"	f	class:UITexturePacker
from	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	public float from = 1f;$/;"	f	class:TweenAlpha
from	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	public Color from = Color.white;$/;"	f	class:TweenColor
from	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	public float from = 45f;$/;"	f	class:TweenFOV
from	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	public int from = 100;$/;"	f	class:TweenHeight
from	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	public float from = 1f;$/;"	f	class:TweenOrthoSize
from	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	public Vector3 from;$/;"	f	class:TweenPosition
from	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	public Vector3 from;$/;"	f	class:TweenRotation
from	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	public Vector3 from = Vector3.one;$/;"	f	class:TweenScale
from	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	public Transform from;$/;"	f	class:TweenTransform
from	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	public float from = 1f;$/;"	f	class:TweenVolume
from	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	public int from = 100;$/;"	f	class:TweenWidth
fullSize	Assets/Addons/NGUI/Scripts/UI/UIViewport.cs	/^	public float fullSize = 1f;$/;"	f	class:UIViewport
functionName	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	public string functionName;$/;"	f	class:UIButtonMessage
functionName	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	[HideInInspector][SerializeField] string functionName = "OnSelectionChange";$/;"	f	class:UIPopupList	file:
functionName	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	[HideInInspector][SerializeField] string functionName = "OnActivate";$/;"	f	class:UIToggle	file:
genAtlas	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	UIAtlas					genAtlas;$/;"	f	class:retinaProAtlasWindow	file:
genAtlasItem	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	retinaProAtlas			genAtlasItem;$/;"	f	class:retinaProAtlasWindow	file:
generateNormals	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool generateNormals = false;$/;"	f	class:UIPanel
generic	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Generic generic;$/;"	f	struct:FreeType.FT_FaceRec
generic	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Generic generic;$/;"	f	struct:FreeType.FT_GlyphSlotRec
generic	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Generic generic;$/;"	f	struct:FreeType.FT_SizeRec
genericEventHandler	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public GameObject genericEventHandler;$/;"	f	class:UICamera
geometry	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public UIGeometry geometry = new UIGeometry();$/;"	f	class:UIWidget
getAtlasSpriteData	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	public static void getAtlasSpriteData(ref UIAtlas atlas, ref List<UISpriteData> sprites)$/;"	m	class:retinaProNGTools
getLastErrorIndex	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	public static int getLastErrorIndex()$/;"	m	class:NGUIJson
getLastErrorSnippet	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	public static string getLastErrorSnippet()$/;"	m	class:NGUIJson
getLastIndexOfNumber	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static int getLastIndexOfNumber( char[] json, int index )$/;"	m	class:NGUIJson
getPreviewDeviceIdx	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public int getPreviewDeviceIdx()$/;"	m	class:retinaProDataSerialize
getPreviewGameViewIdx	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public int getPreviewGameViewIdx()$/;"	m	class:retinaProDataSerialize
getPreviewScreenIdx	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public int getPreviewScreenIdx()$/;"	m	class:retinaProDataSerialize
getUtilityRefreshSourceTextures	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public bool getUtilityRefreshSourceTextures()$/;"	m	class:retinaProDataSerialize
getValidArtFiles	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public static void getValidArtFiles(DirectoryInfo dinfo, out List<FileInfo> files)$/;"	m	class:retinaProConfig
glyph	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr glyph;$/;"	f	struct:FreeType.FT_FaceRec
glyph	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public GlyphInfo glyph = new GlyphInfo();$/;"	f	class:NGUIText
glyphCount	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public int glyphCount { get { return isValid ? mSaved.Count : 0; } }$/;"	p	class:BMFont
glyphs	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public List<BMGlyph> glyphs { get { return mSaved; } }$/;"	p	class:BMFont
go	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^		public GameObject go;$/;"	f	class:NGUIEditorTools.MenuEntry
grabSound	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	public AudioClip grabSound;$/;"	f	class:UIItemSlot
gradient	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public bool gradient = false;$/;"	f	class:NGUIText
gradientBottom	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public Color gradientBottom = Color.white;$/;"	f	class:NGUIText
gradientBottom	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Color gradientBottom$/;"	p	class:UILabel
gradientTexture	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public Texture2D gradientTexture$/;"	p	class:NGUIEditorTools
gradientTop	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public Color gradientTop = Color.white;$/;"	f	class:NGUIText
gradientTop	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Color gradientTop$/;"	p	class:UILabel
group	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	public int group = 0;$/;"	f	class:UIToggle
halfPixelOffset	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool halfPixelOffset { get { return mHalfPixelOffset; } }$/;"	p	class:UIPanel
handleEvents	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	bool handleEvents$/;"	p	class:UIPopupList
handlesColor	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public Color handlesColor$/;"	p	class:UIWidgetInspector
handlesEvents	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	bool handlesEvents { get { return eventHandler == this; } }$/;"	p	class:UICamera
hasBorder	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public bool hasBorder { get { return (borderLeft | borderRight | borderTop | borderBottom) != 0; } }$/;"	p	class:UISpriteData
hasBoxCollider	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public bool hasBoxCollider$/;"	p	class:UIWidget
hasClipping	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool hasClipping { get { return mClipping == UIDrawCall.Clipping.SoftClip; } }$/;"	p	class:UIPanel
hasCumulativeClipping	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool hasCumulativeClipping { get { return clipCount != 0; } }$/;"	p	class:UIPanel
hasPadding	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		public bool hasPadding { get { return paddingLeft != 0f || paddingRight != 0f || paddingTop != 0f || paddingBottom != 0f; } }$/;"	p	class:UIAtlas.Sprite
hasPadding	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public bool hasPadding { get { return (paddingLeft | paddingRight | paddingTop | paddingBottom) != 0; } }$/;"	p	class:UISpriteData
hasSymbols	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public bool hasSymbols { get { return (mReplacement != null) ? mReplacement.hasSymbols : (mSymbols != null && mSymbols.Count != 0); } }$/;"	p	class:UIFont
hasTransformed	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	public bool hasTransformed { get { return (mRtpVerts != null) && (mRtpVerts.size > 0) && (mRtpVerts.size == verts.size); } }$/;"	p	class:UIGeometry
hasVertices	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	public bool hasVertices { get { return (verts.size > 0); } }$/;"	p	class:UIGeometry
hasVertices	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public bool hasVertices { get { return geometry != null && geometry.hasVertices; } }$/;"	p	class:UIWidget
head	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr head;$/;"	f	struct:FreeType.FT_ListRec
height	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int height;$/;"	f	struct:FreeType.FT_Glyph_Metrics
height	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int height;$/;"	f	struct:FreeType.FT_Size_Metrics
height	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short height;$/;"	f	struct:FreeType.FT_FaceRec
height	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int height;	\/\/ Glyph's height in pixels$/;"	f	class:BMGlyph
height	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public int height	{ get { return mHeight; } }$/;"	p	class:BMSymbol
height	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public int height$/;"	p	class:UIWidget
height	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	public int height { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenHeight
height	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public float height { get { return GetViewSize().y; } }$/;"	p	class:UIPanel
height	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int height = 0;$/;"	f	class:UISpriteData
height	Assets/Addons/RetinaPro/Editor/retinaProScreen.cs	/^    public int height$/;"	p	class:retinaProScreen
height	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public int 		height;$/;"	f	class:retinaProRuntimeScreen
hideIfOffScreen	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public bool hideIfOffScreen = false;$/;"	f	class:UIWidget
hideInactive	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public bool hideInactive = true;$/;"	f	class:UIGrid
hideInactive	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public bool hideInactive = true;$/;"	f	class:UITable
highlightColor	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public Color highlightColor = new Color(225f \/ 255f, 200f \/ 255f, 150f \/ 255f, 1f);$/;"	f	class:UIPopupList
highlightSprite	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public string highlightSprite;$/;"	f	class:UIPopupList
hit	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public RaycastHit hit;$/;"	f	struct:UICamera.DepthEntry
hitCheck	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public HitCheck hitCheck;$/;"	f	class:UIWidget
horiAdvance	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int horiAdvance;$/;"	f	struct:FreeType.FT_Glyph_Metrics
horiBearingX	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int horiBearingX;$/;"	f	struct:FreeType.FT_Glyph_Metrics
horiBearingY	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int horiBearingY;$/;"	f	struct:FreeType.FT_Glyph_Metrics
horizontalAxisName	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public string horizontalAxisName = "Horizontal";$/;"	f	class:UICamera
horizontalScrollBar	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public UIProgressBar horizontalScrollBar;$/;"	f	class:UIScrollView
hover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	public Color hover = new Color(225f \/ 255f, 200f \/ 255f, 150f \/ 255f, 1f);$/;"	f	class:UIButtonColor
hover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	public Vector3 hover = Vector3.zero;$/;"	f	class:UIButtonOffset
hover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	public Vector3 hover = Vector3.zero;$/;"	f	class:UIButtonRotation
hover	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	public Vector3 hover = new Vector3(1.1f, 1.1f, 1.1f);$/;"	f	class:UIButtonScale
hoverSprite	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	public string hoverSprite;$/;"	f	class:UIButton
hoverSprite	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	public string hoverSprite;$/;"	f	class:UIImageButton
hoveredObject	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public GameObject hoveredObject;$/;"	f	class:UICamera
iOSDragEmulation	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public bool iOSDragEmulation = true;$/;"	f	class:UIScrollView
icon	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	public UISprite icon;$/;"	f	class:UIItemSlot
iconAtlas	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public UIAtlas iconAtlas;$/;"	f	class:InvBaseItem
iconAtlas	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	public UIAtlas iconAtlas;$/;"	f	class:InvDatabase
iconName	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public string iconName = "";$/;"	f	class:InvBaseItem
id	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^	public Identifier id;$/;"	f	class:InvStat
id16	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public int id16;$/;"	f	class:InvBaseItem
ifDisabledOnPlay	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public EnableCondition ifDisabledOnPlay = EnableCondition.DoNothing;$/;"	f	class:UIPlayAnimation
ifDisabledOnPlay	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public EnableCondition ifDisabledOnPlay = EnableCondition.DoNothing;$/;"	f	class:UIPlayTween
ignoreTimeScale	Assets/Addons/NGUI/Examples/Scripts/Other/LagPosition.cs	/^	public bool ignoreTimeScale = false;$/;"	f	class:LagPosition
ignoreTimeScale	Assets/Addons/NGUI/Examples/Scripts/Other/LagRotation.cs	/^	public bool ignoreTimeScale = false;$/;"	f	class:LagRotation
ignoreTimeScale	Assets/Addons/NGUI/Examples/Scripts/Other/Spin.cs	/^	public bool ignoreTimeScale = false;$/;"	f	class:Spin
ignoreTimeScale	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	public bool ignoreTimeScale = false;$/;"	f	class:SpringPosition
ignoreTimeScale	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public bool ignoreTimeScale = true;$/;"	f	class:UITweener
ignoreTimeScale	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^	public bool ignoreTimeScale = true;$/;"	f	class:UI2DSpriteAnimation
ignoreUIRoot	Assets/Addons/RetinaPro/retinaProIgnoreUIRoot.cs	/^	public bool ignoreUIRoot = true;$/;"	f	class:retinaProIgnoreUIRoot
inactiveList	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static public BetterList<UIDrawCall> inactiveList { get { return mInactiveList; } }$/;"	p	class:UIDrawCall
includeChildren	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	public bool includeChildren = false;$/;"	f	class:UIButtonMessage
includeChildren	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public bool includeChildren = false;$/;"	f	class:UIPlayTween
index	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int index;	\/\/ Index of this glyph (used by BMFont)$/;"	f	class:BMGlyph
initialSize	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	public Vector2 initialSize = Vector2.one;$/;"	f	class:UIStretch
inner	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		public Rect inner = new Rect(0f, 0f, 1f, 1f);$/;"	f	class:UIAtlas.Sprite
inputHasFocus	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public bool inputHasFocus = false;$/;"	f	class:UICamera
inputType	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public InputType inputType = InputType.Standard;$/;"	f	class:UIInput
instance	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	static public UICursor instance;$/;"	f	class:UICursor
instance	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	static public NGUITransformInspector instance;$/;"	f	class:NGUITransformInspector
instance	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	static public SpriteSelector instance;$/;"	f	class:SpriteSelector
instance	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	static public UIAtlasInspector instance;$/;"	f	class:UIAtlasInspector
instance	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	static public UIAtlasMaker instance;$/;"	f	class:UIAtlasMaker
instance	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^	static public UIDrawCallViewer instance;$/;"	f	class:UIDrawCallViewer
instance	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	static public UIPanelTool instance;$/;"	f	class:UIPanelTool
instance	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public UIWidgetInspector instance;$/;"	f	class:UIWidgetInspector
instance	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public Localization instance$/;"	p	class:Localization
instantTween	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	public bool instantTween = false;$/;"	f	class:UIToggle
inverse	Assets/Addons/NGUI/Scripts/Interaction/UIToggledComponents.cs	/^	[HideInInspector][SerializeField] bool inverse = false;$/;"	f	class:UIToggledComponents	file:
inverse	Assets/Addons/NGUI/Scripts/Interaction/UIToggledObjects.cs	/^	[HideInInspector][SerializeField] bool inverse = false;$/;"	f	class:UIToggledObjects	file:
invert	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public bool invert$/;"	p	class:UISprite
inverted	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	public bool inverted { get { return isInverted; } set { } }$/;"	p	class:UISlider
isActive	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public bool isActive { get { return mInstance != null; } }$/;"	p	class:Localization
isActive	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public bool isActive$/;"	p	class:UIDrawCall
isAnchored	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public bool isAnchored$/;"	p	class:UIRect
isAnchoredHorizontally	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public virtual bool isAnchoredHorizontally { get { return leftAnchor.target || rightAnchor.target; } }$/;"	p	class:UIRect
isAnchoredHorizontally	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override bool isAnchoredHorizontally { get { return base.isAnchoredHorizontally || mOverflow == Overflow.ResizeFreely; } }$/;"	p	class:UILabel
isAnchoredVertically	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public virtual bool isAnchoredVertically { get { return bottomAnchor.target || topAnchor.target; } }$/;"	p	class:UIRect
isAnchoredVertically	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override bool isAnchoredVertically$/;"	p	class:UILabel
isAnimated	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public bool isAnimated = true;$/;"	f	class:UIPopupList
isAtlasExist	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	bool isAtlasExist(string atlasName)$/;"	m	class:retinaProAtlasWindow	file:
isAtlasResourceFolderPresent	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public static bool isAtlasResourceFolderPresent()$/;"	m	class:retinaProConfig
isAtlasTextureFolderPresent	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public static bool isAtlasTextureFolderPresent()$/;"	m	class:retinaProConfig
isChecked	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	public bool isChecked { get { return value; } set { this.value = value; } }$/;"	p	class:UIToggle
isClipped	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public bool isClipped { get { return mClipCount != 0; } }$/;"	p	class:UIDrawCall
isDeviceValid	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	public bool isDeviceValid()$/;"	m	class:retinaProDevice
isDirty	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public bool isDirty = false;$/;"	f	class:UIDrawCall
isDragging	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public bool isDragging { get { return mPressed && mDragStarted; } }$/;"	p	class:UIScrollView
isDragging	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public bool isDragging = false;$/;"	f	class:UICamera
isDynamic	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public bool isDynamic { get { return (mReplacement != null) ? mReplacement.isDynamic : (mDynamicFont != null); } }$/;"	p	class:UIFont
isEnabled	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^		public bool isEnabled = false;$/;"	f	class:UIPanelTool.Entry
isEnabled	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	public override bool isEnabled$/;"	p	class:UIButton
isEnabled	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	public virtual bool isEnabled { get { return enabled; } set { enabled = value; } }$/;"	p	class:UIButtonColor
isEnabled	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	public bool isEnabled$/;"	p	class:UIImageButton
isEnabled	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public bool isEnabled$/;"	p	class:EventDelegate
isEnabled	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public bool isEnabled$/;"	p	class:PropertyReference
isFont	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^    public bool isFont$/;"	p	class:retinaProAtlas
isFont	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public bool isFont;$/;"	f	class:retinaProRuntimeAtlas
isFullyAnchored	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public bool isFullyAnchored { get { return leftAnchor.target && rightAnchor.target && topAnchor.target && bottomAnchor.target; } }$/;"	p	class:UIRect
isHorizontal	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected bool isHorizontal { get { return (mFill == FillDirection.LeftToRight || mFill == FillDirection.RightToLeft); } }$/;"	p	class:UIProgressBar
isInverted	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected bool isInverted { get { return (mFill == FillDirection.RightToLeft || mFill == FillDirection.TopToBottom); } }$/;"	p	class:UIProgressBar
isLocalized	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public bool isLocalized = false;$/;"	f	class:UIPopupList
isOneValidDevice	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public static bool isOneValidDevice()$/;"	m	class:retinaProConfig
isOpen	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public bool isOpen { get { return mChild != null; } }$/;"	p	class:UIPopupList
isPlaying	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	public bool isPlaying$/;"	p	class:ActiveAnimation
isPlaying	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	public bool isPlaying { get { return mActive; } }$/;"	p	class:UISpriteAnimation
isPresent	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static public bool isPresent$/;"	p	class:FreeType
isRuntimeDeviceLoaded	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public bool isRuntimeDeviceLoaded()$/;"	m	class:retinaProAtlasController
isScreenValid	Assets/Addons/RetinaPro/Editor/retinaProScreen.cs	/^	public bool isScreenValid()$/;"	m	class:retinaProScreen
isSelected	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public bool isSelected$/;"	p	class:UIInput
isSetupComplete	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public static bool isSetupComplete()$/;"	m	class:retinaProConfig
isValid	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	bool isValid { get { return bitmapFont != null || trueTypeFont != null; } }$/;"	p	class:UIPopupList
isValid	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public bool isValid { get { return (mSaved.Count > 0); } }$/;"	p	class:BMFont
isValid	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public bool isValid$/;"	p	class:EventDelegate
isValid	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public bool isValid { get { return (mTarget != null && !string.IsNullOrEmpty(mName)); } }$/;"	p	class:PropertyReference
isValid	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public bool isValid { get { return mDynamicFont != null || mFont.isValid; } }$/;"	p	class:UIFont
isValid	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public bool isValid { get { return mFont.isValid; } }$/;"	p	class:UIFont
isValid	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	bool isValid { get { return mFont != null || mTrueTypeFont != null; } }$/;"	p	class:UILabel
isValid	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	bool isValid { get { return mFont != null; } }$/;"	p	class:UILabel
isValid	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public bool isValid { get { return GetAtlasSprite() != null; } }$/;"	p	class:UISprite
isValid	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public bool isValid { get { return textLabel != null && textLabel.ambigiousFont != null; } }$/;"	p	class:UITextList
isValid	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public bool isValid { get { return textLabel != null && textLabel.bitmapFont != null; } }$/;"	p	class:UITextList
isVisible	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public bool isVisible { get { return mIsVisibleByPanel && mIsVisibleByAlpha && mIsInFront && finalAlpha > 0.001f && NGUITools.GetActive(this); } }$/;"	p	class:UIWidget
isVisible	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	static public bool isVisible { get { return (mInstance != null && mInstance.mTarget == 1f); } }$/;"	p	class:UITooltip
item	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^		public InvBaseItem item;$/;"	f	struct:InvFindItem.FindResult
itemIDs	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/EquipItems.cs	/^	public int[] itemIDs;$/;"	f	class:EquipItems
itemLevel	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public int itemLevel = 1;$/;"	f	class:InvGameItem
itemSize	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	public int itemSize = 100;$/;"	f	class:UIWrapContent
items	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public List<InvGameItem> items { get { while (mItems.Count < maxItemCount) mItems.Add(null); return mItems; } }$/;"	p	class:UIItemStorage
items	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	public List<InvBaseItem> items = new List<InvBaseItem>();$/;"	f	class:InvDatabase
items	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public List<string> items = new List<string>();$/;"	f	class:UIPopupList
jsonDecode	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	public static object jsonDecode( string json )$/;"	m	class:NGUIJson
jsonEncode	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	public static string jsonEncode( object json )$/;"	m	class:NGUIJson
kAtlas	Assets/Addons/RetinaPro/Editor/retinaProState.cs	/^		kAtlas,$/;"	e	enum:retinaProState.rpState	file:
kAtlasProcess	Assets/Addons/RetinaPro/Editor/retinaProState.cs	/^		kAtlasProcess,$/;"	e	enum:retinaProState.rpState	file:
kDone	Assets/Addons/RetinaPro/Editor/retinaProState.cs	/^		kDone,$/;"	e	enum:retinaProState.rpState	file:
kFont	Assets/Addons/RetinaPro/Editor/retinaProState.cs	/^		kFont,$/;"	e	enum:retinaProState.rpState	file:
kGen	Assets/Addons/RetinaPro/Editor/retinaProState.cs	/^		kGen,$/;"	e	enum:retinaProState.rpState	file:
kWaiting	Assets/Addons/RetinaPro/Editor/retinaProState.cs	/^		kWaiting,$/;"	e	enum:retinaProState.rpState	file:
keepAspectRatio	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public AspectRatioSource keepAspectRatio = AspectRatioSource.Free;$/;"	f	class:UIWidget
keepCrisp	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	bool keepCrisp$/;"	p	class:UILabel
keepCrispWhenShrunk	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Crispness keepCrispWhenShrunk = Crispness.OnDesktop;$/;"	f	class:UILabel
keepWithinPanel	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public bool keepWithinPanel = false;$/;"	f	class:UIGrid
keepWithinPanel	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public bool keepWithinPanel = false;$/;"	f	class:UITable
kerning	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public List<int> kerning;$/;"	f	class:BMGlyph
key	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^	string key { get { return (string.IsNullOrEmpty(keyName)) ? "NGUI State: " + name : keyName; } }$/;"	p	class:UISavedOption
key	Assets/Addons/NGUI/Scripts/UI/UILocalize.cs	/^	public string key;$/;"	f	class:UILocalize
keyCode	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	public KeyCode keyCode = KeyCode.None;$/;"	f	class:UIKeyBinding
keyName	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^	public string keyName;$/;"	f	class:UISavedOption
keyboardType	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public KeyboardType keyboardType = KeyboardType.Default;$/;"	f	class:UIInput
knownLanguages	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public string[] knownLanguages;$/;"	f	class:Localization
label	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	public UILabel label;$/;"	f	class:UIItemSlot
label	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public UILabel label;$/;"	f	class:UIInput
language	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public string language$/;"	p	class:Localization
languages	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	[HideInInspector] public TextAsset[] languages;$/;"	f	class:Localization
last	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public GameObject last;			\/\/ Last object under the touch or mouse$/;"	f	class:UICamera.MouseOrTouch
lastDecode	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static string lastDecode = "";$/;"	f	class:NGUIJson
lastDecodeSuccessful	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	public static bool lastDecodeSuccessful()$/;"	m	class:NGUIJson
lastErrorIndex	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static int lastErrorIndex = -1;$/;"	f	class:NGUIJson
lastHit	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public RaycastHit lastHit;$/;"	f	class:UICamera
lastOrient	Assets/Addons/RetinaPro/Example/refreshPanelTest.cs	/^	ScreenOrientation lastOrient;$/;"	f	class:refreshPanelTest	file:
lastPos	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public Vector2 lastPos;			\/\/ Previous position of the mouse or touch event$/;"	f	class:UICamera.MouseOrTouch
lastTouchPosition	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public Vector2 lastTouchPosition = Vector2.zero;$/;"	f	class:UICamera
layer	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public int layer$/;"	p	class:NGUISettings
leftAnchor	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public AnchorPoint leftAnchor = new AnchorPoint();$/;"	f	class:UIRect
leftType	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public AdvancedType leftType = AdvancedType.Sliced;$/;"	f	class:UISprite
length	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public int length	{ get { if (mLength == 0) mLength = sequence.Length; return mLength; } }$/;"	p	class:BMSymbol
level	Assets/Addons/NGUI/Examples/Scripts/Other/LookAtTarget.cs	/^	public int level = 0;$/;"	f	class:LookAtTarget
levelName	Assets/Addons/NGUI/Examples/Scripts/Other/LoadLevelOnClick.cs	/^	public string levelName;$/;"	f	class:LoadLevelOnClick
libName	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	const string libName = "FreeType";$/;"	f	class:FreeType	file:
library	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr library;$/;"	f	struct:FreeType.FT_GlyphSlotRec
lineHeight	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int lineHeight$/;"	p	class:UILabel
lineHeight	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected float lineHeight { get { return (textLabel != null) ? textLabel.fontSize + textLabel.spacingY : 20f; } }$/;"	p	class:UITextList
lineWidth	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int lineWidth$/;"	p	class:UILabel
linearHoriAdvance	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int linearHoriAdvance;$/;"	f	struct:FreeType.FT_GlyphSlotRec
linearVertAdvance	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int linearVertAdvance;$/;"	f	struct:FreeType.FT_GlyphSlotRec
lines	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^		public string[] lines;	\/\/ Split lines$/;"	f	class:UITextList.Paragraph
list	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	static public InvDatabase[] list$/;"	p	class:InvDatabase
list	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	static public BetterList<UIKeyNavigation> list = new BetterList<UIKeyNavigation>();$/;"	f	class:UIKeyNavigation
list	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	static public BetterList<UIScrollView> list = new BetterList<UIScrollView>();$/;"	f	class:UIScrollView
list	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	static public BetterList<UIToggle> list = new BetterList<UIToggle>();$/;"	f	class:UIToggle
list	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static public BetterList<UIDrawCall> list { get { return mActiveList; } }$/;"	p	class:UIDrawCall
list	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public BetterList<UICamera> list = new BetterList<UICamera>();$/;"	f	class:UICamera
list	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static public BetterList<UIPanel> list = new BetterList<UIPanel>();$/;"	f	class:UIPanel
list	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	static public List<UIRoot> list = new List<UIRoot>();$/;"	f	class:UIRoot
load	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^	public void load(ref BinaryReader readBinary)$/;"	m	class:retinaProAtlas
loadAtlases	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	bool loadAtlases(ref XMLNode nodes)$/;"	m	class:retinaProDataRuntime	file:
loadDevices	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	bool loadDevices(ref XMLNode nodes)$/;"	m	class:retinaProDataRuntime	file:
loadSettings	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public void loadSettings()$/;"	m	class:retinaProDataSerialize
loadSettings	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public bool loadSettings()$/;"	m	class:retinaProDataRuntime
loadVersion	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^	void loadVersion(int version, ref BinaryReader readBinary)$/;"	m	class:retinaProAtlas	file:
loaded	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public bool loaded;$/;"	f	class:retinaProDataRuntime
localCorners	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public abstract Vector3[] localCorners { get; }$/;"	p	class:UIRect
localCorners	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public override Vector3[] localCorners$/;"	p	class:UIWidget
localCorners	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override Vector3[] localCorners$/;"	p	class:UILabel
localCorners	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public override Vector3[] localCorners$/;"	p	class:UIPanel
localSize	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public virtual Vector2 localSize$/;"	p	class:UIWidget
localSize	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override Vector2 localSize$/;"	p	class:UILabel
localizationHasBeenSet	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static public bool localizationHasBeenSet = false;$/;"	f	class:Localization
lookAhead	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static int lookAhead( char[] json, int index )$/;"	m	class:NGUIJson
loop	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	public bool loop { get { return mLoop; } set { mLoop = value; } }$/;"	p	class:UISpriteAnimation
lsb_delta	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int lsb_delta;$/;"	f	struct:FreeType.FT_GlyphSlotRec
m2DPlane	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static Plane m2DPlane = new Plane(Vector3.back, 0f);$/;"	f	class:UICamera	file:
mAbsolute	Assets/Addons/NGUI/Examples/Scripts/Other/LagPosition.cs	/^	Vector3 mAbsolute;$/;"	f	class:LagPosition	file:
mAbsolute	Assets/Addons/NGUI/Examples/Scripts/Other/LagRotation.cs	/^	Quaternion mAbsolute;$/;"	f	class:LagRotation	file:
mAction	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	UIWidgetInspector.Action mAction = UIWidgetInspector.Action.None;$/;"	f	class:UIPanelInspector	file:
mAction	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Action mAction = Action.None;$/;"	f	class:UIWidgetInspector	file:
mActionUnderMouse	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	UIWidgetInspector.Action mActionUnderMouse = UIWidgetInspector.Action.None;$/;"	f	class:UIPanelInspector	file:
mActionUnderMouse	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Action mActionUnderMouse = Action.None;$/;"	f	class:UIWidgetInspector	file:
mActivated	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	bool mActivated = false;$/;"	f	class:UIPlayAnimation	file:
mActivated	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	bool mActivated = false;$/;"	f	class:UIPlayTween	file:
mActive	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	int mActive = 0;$/;"	f	class:UIPlayTween	file:
mActive	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	bool mActive = true;$/;"	f	class:UIDrawCall	file:
mActive	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	bool mActive = true;$/;"	f	class:UISpriteAnimation	file:
mActiveList	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static BetterList<UIDrawCall> mActiveList = new BetterList<UIDrawCall>();$/;"	f	class:UIDrawCall	file:
mActiveTTF	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	Font mActiveTTF = null;$/;"	f	class:UILabel	file:
mAdvance	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	int mAdvance = 0;		\/\/ Symbol's inner width in pixels (sprite.inner.width)$/;"	f	class:BMSymbol	file:
mAlignment	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] Alignment mAlignment = Alignment.Automatic;$/;"	f	class:UILabel	file:
mAllowProcessing	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	bool mAllowProcessing = true;$/;"	f	class:UILabel	file:
mAllowSelection	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	bool mAllowSelection = true;$/;"	f	class:UIPanelInspector	file:
mAllowSelection	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^	bool mAllowSelection = true;$/;"	f	class:UIWidgetContainerEditor	file:
mAllowSelection	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	bool mAllowSelection = true;$/;"	f	class:UIWidgetInspector	file:
mAlpha	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	[HideInInspector][SerializeField] float mAlpha = 1f;$/;"	f	class:UIPanel	file:
mAlphaFrameID	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	int mAlphaFrameID = -1;$/;"	f	class:UIWidget	file:
mAlphaFrameID	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	int mAlphaFrameID = 0;$/;"	f	class:UIPanel	file:
mAmountPerDelta	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	float mAmountPerDelta = 1000f;$/;"	f	class:UITweener	file:
mAnchorType	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected AnchorType mAnchorType = AnchorType.None;$/;"	f	class:UIRectEditor
mAnchorsCached	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	bool mAnchorsCached = false;$/;"	f	class:UIRect	file:
mAngle	Assets/Addons/NGUI/Examples/Scripts/Other/WindowDragTilt.cs	/^	float mAngle = 0f;$/;"	f	class:WindowDragTilt	file:
mAnim	Assets/Addons/NGUI/Examples/Scripts/Other/PlayIdleAnimations.cs	/^	Animation mAnim;$/;"	f	class:PlayIdleAnimations	file:
mAnim	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	Animation mAnim;$/;"	f	class:ActiveAnimation	file:
mAnim	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	Animation mAnim;$/;"	f	class:UIAnchor	file:
mAnim	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	Animation mAnim;$/;"	f	class:UIStretch	file:
mAnimator	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	Animator mAnimator;$/;"	f	class:ActiveAnimation	file:
mApplyGradient	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] bool mApplyGradient = false;$/;"	f	class:UILabel	file:
mArgs	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	object[] mArgs;$/;"	f	class:EventDelegate	file:
mAtlas	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	UIAtlas mAtlas;$/;"	f	class:UICursor	file:
mAtlas	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	UIAtlas mAtlas;$/;"	f	class:UIAtlasInspector	file:
mAtlas	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	[HideInInspector][SerializeField] UIAtlas mAtlas;$/;"	f	class:UIFont	file:
mAtlas	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	[HideInInspector][SerializeField] UIAtlas mAtlas;$/;"	f	class:UISprite	file:
mAttachments	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	InvAttachmentPoint[] mAttachments;$/;"	f	class:InvEquipment	file:
mAutoFind	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	bool mAutoFind = false;$/;"	f	class:UIDragScrollView	file:
mBG	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	[HideInInspector][SerializeField] protected UIWidget mBG;$/;"	f	class:UIProgressBar
mBackdropTex	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static Texture2D mBackdropTex;$/;"	f	class:NGUIEditorTools	file:
mBackground	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	UISprite mBackground;$/;"	f	class:UIPopupList	file:
mBar	Assets/Addons/NGUI/Examples/Scripts/Other/UISliderColors.cs	/^	UIProgressBar mBar;$/;"	f	class:UISliderColors	file:
mBase	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	[HideInInspector][SerializeField] int mBase = 0;			\/\/ Offset from the top of the line to the base of each character$/;"	f	class:BMFont	file:
mBaseItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	InvBaseItem mBaseItem;$/;"	f	class:InvGameItem	file:
mBaseItemID	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	[SerializeField] int mBaseItemID = 0;$/;"	f	class:InvGameItem	file:
mBgBorder	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	float mBgBorder = 0f;$/;"	f	class:UIPopupList	file:
mBlankTex	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected Texture2D mBlankTex = null;$/;"	f	class:UIInput
mBlueDot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static GUIStyle mBlueDot = null;$/;"	f	class:UIWidgetInspector	file:
mBoldOffset	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static float[] mBoldOffset = new float[]$/;"	f	class:NGUIText	file:
mBounds	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	Bounds mBounds;$/;"	f	class:UIDragObject	file:
mBounds	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	Bounds mBounds;$/;"	f	class:UIDraggableCamera	file:
mBounds	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected Bounds mBounds;$/;"	f	class:UIScrollView
mBreaks	Assets/Addons/NGUI/Examples/Scripts/Other/PlayIdleAnimations.cs	/^	List<AnimationClip> mBreaks = new List<AnimationClip>();$/;"	f	class:PlayIdleAnimations	file:
mBuffer	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	byte[] mBuffer;$/;"	f	class:ByteReader	file:
mButton	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mButton = "";$/;"	f	class:UICreateWidgetWizard	file:
mCache	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	List<int[]> mCache = new List<int[]>(maxIndexBufferCache);$/;"	f	class:UIDrawCall	file:
mCache	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static List<int[]> mCache = new List<int[]>(maxIndexBufferCache);$/;"	f	class:UIDrawCall	file:
mCached	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	bool mCached = false;$/;"	f	class:EventDelegate	file:
mCached	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	bool mCached = false;$/;"	f	class:TweenColor	file:
mCached	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	string mCached = "";$/;"	f	class:UIInput	file:
mCachedCallback	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	Callback mCachedCallback;$/;"	f	class:EventDelegate	file:
mCalculatedBounds	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected bool mCalculatedBounds = false;$/;"	f	class:UIScrollView
mCalculatedSize	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	Vector2 mCalculatedSize = Vector2.zero;$/;"	f	class:UILabel	file:
mCallback	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	OnSelectionCallback mCallback;$/;"	f	class:ComponentSelector	file:
mCallback	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	Callback mCallback;$/;"	f	class:SpriteSelector	file:
mCam	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	Camera mCam;$/;"	f	class:UIDraggableCamera	file:
mCam	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected Camera mCam;$/;"	f	class:UIProgressBar
mCam	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	Camera mCam;$/;"	f	class:TweenFOV	file:
mCam	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	Camera mCam;$/;"	f	class:TweenOrthoSize	file:
mCam	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	Camera mCam = null;$/;"	f	class:UICamera	file:
mCam	Assets/Addons/NGUI/Scripts/UI/UIOrthoCamera.cs	/^	Camera mCam;$/;"	f	class:UIOrthoCamera	file:
mCam	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	Camera mCam;$/;"	f	class:UIPanel	file:
mCam	Assets/Addons/NGUI/Scripts/UI/UIViewport.cs	/^	Camera mCam;$/;"	f	class:UIViewport	file:
mCanDrag	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^	bool mCanDrag = false;$/;"	f	class:UIWidgetContainerEditor	file:
mCaret	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected UITexture mCaret = null;$/;"	f	class:UIInput
mCenteredObject	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	GameObject mCenteredObject;$/;"	f	class:UICenterOnChild	file:
mChanged	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected bool mChanged = true;$/;"	f	class:UIRect
mCheck	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mCheck = "";$/;"	f	class:UICreateWidgetWizard	file:
mCheck	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^	UIToggle mCheck;$/;"	f	class:UISavedOption	file:
mCheckBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mCheckBG = "";$/;"	f	class:UICreateWidgetWizard	file:
mChild	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvAttachmentPoint.cs	/^	GameObject mChild;$/;"	f	class:InvAttachmentPoint	file:
mChild	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	GameObject mChild;$/;"	f	class:UIPopupList	file:
mChildren	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	protected List<Transform> mChildren = new List<Transform>();$/;"	f	class:UITable
mChildren	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	BetterList<Transform> mChildren = new BetterList<Transform>();$/;"	f	class:UIWrapContent	file:
mChildren	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected BetterList<UIRect> mChildren = new BetterList<UIRect>();$/;"	f	class:UIRect
mClickTime	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	float mClickTime = 0f;$/;"	f	class:SpriteSelector	file:
mClip	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	string mClip = "";$/;"	f	class:ActiveAnimation	file:
mClipCount	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	int				mClipCount = 0;	\/\/ Number of times the draw call's content is getting clipped$/;"	f	class:UIDrawCall	file:
mClipOffset	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	[SerializeField] Vector2 mClipOffset = Vector2.zero;$/;"	f	class:UIPanel	file:
mClipRange	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	[HideInInspector][SerializeField] Vector4 mClipRange = new Vector4(0f, 0f, 300f, 200f);$/;"	f	class:UIPanel	file:
mClipSoftness	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	[HideInInspector][SerializeField] Vector2 mClipSoftness = new Vector2(4f, 4f);$/;"	f	class:UIPanel	file:
mClipping	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	[HideInInspector][SerializeField] UIDrawCall.Clipping mClipping = UIDrawCall.Clipping.None;$/;"	f	class:UIPanel	file:
mCollider	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected Collider mCollider;$/;"	f	class:UIDragDropItem
mColor	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static Color mColor = Color.white;$/;"	f	class:UICreateWidgetWizard	file:
mColor	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected Color mColor;$/;"	f	class:UIButtonColor
mColor	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	[HideInInspector][SerializeField] protected Color mColor = Color.white;$/;"	f	class:UIWidget
mColors	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static BetterList<Color> mColors = new BetterList<Color>();$/;"	f	class:NGUIText	file:
mConfirmDelete	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvDatabaseInspector.cs	/^	bool mConfirmDelete = false;$/;"	f	class:InvDatabaseInspector	file:
mContrastTex	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static Texture2D mContrastTex;$/;"	f	class:NGUIEditorTools	file:
mCoordinates	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	[HideInInspector][SerializeField] Coordinates mCoordinates = Coordinates.Pixels;$/;"	f	class:UIAtlas	file:
mCorners	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected Vector3[] mCorners = new Vector3[4];$/;"	f	class:UIWidget
mCorners	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static Vector3[] mCorners = new Vector3[4];$/;"	f	class:UIPanel	file:
mCullTime	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	float mCullTime = 0f;$/;"	f	class:UIPanel	file:
mCurrent	Assets/Addons/NGUI/Examples/Scripts/Other/ShaderQuality.cs	/^	int mCurrent = 600;$/;"	f	class:ShaderQuality	file:
mCurrent	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected float mCurrent = 0f;$/;"	f	class:UITooltip
mCurrentSelection	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static GameObject mCurrentSelection = null;$/;"	f	class:UICamera	file:
mCursor	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static MouseCursor mCursor = MouseCursor.Arrow;$/;"	f	class:UIWidgetInspector	file:
mCurve	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	AnimationCurve mCurve = new AnimationCurve(new Keyframe(0f, 0f), new Keyframe(1f, 1f));$/;"	f	class:UIFontInspector	file:
mCustom	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected bool[] mCustom = new bool[] { false, false, false, false };$/;"	f	class:UIRectEditor
mDefaultColor	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected Color mDefaultColor = Color.white;$/;"	f	class:UIInput
mDefaultText	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected string mDefaultText = "";$/;"	f	class:UIInput
mDelNames	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	List<string> mDelNames = new List<string>();$/;"	f	class:UIAtlasMaker	file:
mDelta	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	float mDelta = 0f;$/;"	f	class:UISpriteAnimation	file:
mDensity	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	float mDensity = 1f;$/;"	f	class:UILabel	file:
mDepth	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	[HideInInspector][SerializeField] protected int mDepth = 0;$/;"	f	class:UIWidget
mDepth	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	[HideInInspector][SerializeField] int mDepth = 0;$/;"	f	class:UIPanel	file:
mDict	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	Dictionary<int, BMGlyph> mDict = new Dictionary<int, BMGlyph>();$/;"	f	class:BMFont	file:
mDictionary	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static Dictionary<string, string[]> mDictionary = new Dictionary<string, string[]>();$/;"	f	class:Localization	file:
mDir	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	[HideInInspector][SerializeField] Direction mDir = Direction.Upgraded;$/;"	f	class:UIScrollBar	file:
mDisableDirection	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	Direction mDisableDirection = Direction.Toggle;$/;"	f	class:ActiveAnimation	file:
mDoInit	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected bool mDoInit = true;$/;"	f	class:UIInput
mDrag	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	UIScrollView mDrag;$/;"	f	class:SpringPanel	file:
mDragID	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected int mDragID = -10;$/;"	f	class:UIScrollView
mDragPivot	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	UIWidget.Pivot mDragPivot = UIWidget.Pivot.Center;$/;"	f	class:UIPanelInspector	file:
mDragPivot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	UIWidget.Pivot mDragPivot = UIWidget.Pivot.Center;$/;"	f	class:UIWidgetInspector	file:
mDragScrollView	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected UIDragScrollView mDragScrollView = null;$/;"	f	class:UIDragDropItem
mDragStartOffset	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected Vector2 mDragStartOffset = Vector2.zero;$/;"	f	class:UIScrollView
mDragStarted	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	bool mDragStarted = false;$/;"	f	class:UIDraggableCamera	file:
mDragStarted	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected bool mDragStarted = false;$/;"	f	class:UIScrollView
mDraggedItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	static InvGameItem mDraggedItem;$/;"	f	class:UIItemSlot	file:
mDragging	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	bool mDragging = false;$/;"	f	class:UIDragResize	file:
mDrawRegion	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected Vector4 mDrawRegion = new Vector4(0f, 0f, 1f, 1f);$/;"	f	class:UIWidget
mDrawStart	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	static protected int mDrawStart = 0;$/;"	f	class:UIInput
mDuration	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	float mDuration = 0f;$/;"	f	class:UITweener	file:
mDynamicFont	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	[HideInInspector][SerializeField] Font mDynamicFont;$/;"	f	class:UIFont	file:
mDynamicFontSize	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	[HideInInspector][SerializeField] int mDynamicFontSize = 16;$/;"	f	class:UIFont	file:
mDynamicFontStyle	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	[HideInInspector][SerializeField] FontStyle mDynamicFontStyle = FontStyle.Normal;$/;"	f	class:UIFont	file:
mDynamicMat	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	Material		mDynamicMat;	\/\/ Instantiated material$/;"	f	class:UIDrawCall	file:
mEditedName	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static string mEditedName = null;$/;"	f	class:NGUIEditorTools	file:
mEffectColor	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] Color mEffectColor = Color.black;$/;"	f	class:UILabel	file:
mEffectDistance	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] Vector2 mEffectDistance = Vector2.one;$/;"	f	class:UILabel	file:
mEffectStyle	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] Effect mEffectStyle = Effect.None;$/;"	f	class:UILabel	file:
mEmpty	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static RaycastHit mEmpty = new RaycastHit();$/;"	f	class:UICamera	file:
mEncoding	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] bool mEncoding = true;$/;"	f	class:UILabel	file:
mEntries	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static BetterList<string> mEntries = new BetterList<string>();$/;"	f	class:NGUIContextMenu	file:
mExtensions	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	string[] mExtensions = null;$/;"	f	class:ComponentSelector	file:
mFG	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	[HideInInspector][SerializeField] protected UIWidget mFG;$/;"	f	class:UIProgressBar
mFPS	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	[HideInInspector][SerializeField] int mFPS = 30;$/;"	f	class:UISpriteAnimation	file:
mFaceIndex	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	int mFaceIndex = 0;$/;"	f	class:UIFontMaker	file:
mFactor	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	float mFactor = 0f;$/;"	f	class:UITweener	file:
mField	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	FieldInfo mField = null;$/;"	f	class:PropertyReference	file:
mFill	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	[HideInInspector][SerializeField] protected FillDirection mFill = FillDirection.LeftToRight;$/;"	f	class:UIProgressBar
mFillAmount	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	[HideInInspector][SerializeField] float mFillAmount = 1.0f;$/;"	f	class:UISprite	file:
mFillCenter	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	[HideInInspector][SerializeField] bool mFillCenter = true;$/;"	f	class:UISprite	file:
mFillDir	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static UIScrollBar.FillDirection mFillDir = UIScrollBar.FillDirection.LeftToRight;$/;"	f	class:UICreateWidgetWizard	file:
mFillDirection	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	[HideInInspector][SerializeField] FillDirection mFillDirection = FillDirection.Radial360;$/;"	f	class:UISprite	file:
mFilter	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	MeshFilter		mFilter;		\/\/ Mesh filter for this draw call$/;"	f	class:UIDrawCall	file:
mFlip	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	[HideInInspector][SerializeField] Flip mFlip = Flip.Nothing;$/;"	f	class:UISprite	file:
mFont	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	UIFont mFont;$/;"	f	class:UIFontInspector	file:
mFont	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	[HideInInspector][SerializeField] BMFont mFont = new BMFont();$/;"	f	class:UIFont	file:
mFont	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] UIFont mFont;$/;"	f	class:UILabel	file:
mFontSize	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] int mFontSize = 16;$/;"	f	class:UILabel	file:
mFontStyle	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] FontStyle mFontStyle = FontStyle.Normal;$/;"	f	class:UILabel	file:
mFontType	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^	FontType mFontType;$/;"	f	class:UILabelInspector	file:
mFontUsage	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	static Dictionary<Font, int> mFontUsage = new Dictionary<Font, int>();$/;"	f	class:UILabel	file:
mForced	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	bool mForced = false;$/;"	f	class:UIPanel	file:
mFound	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^	static bool mFound = false;$/;"	f	class:FreeType	file:
mGameSize	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static Vector2 mGameSize = Vector2.one;$/;"	f	class:UIPanel	file:
mGlobalVolume	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static float mGlobalVolume = 1f;$/;"	f	class:NGUITools	file:
mGo	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected GameObject mGo;$/;"	f	class:UIRect
mGradientBottom	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] Color mGradientBottom = new Color(0.7f, 0.7f, 0.7f);$/;"	f	class:UILabel	file:
mGradientTex	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static Texture2D mGradientTex;$/;"	f	class:NGUIEditorTools	file:
mGradientTop	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] Color mGradientTop = Color.white;$/;"	f	class:UILabel	file:
mGreenDot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static GUIStyle mGreenDot = null;$/;"	f	class:UIWidgetInspector	file:
mGreyDot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static GUIStyle mGreyDot = null;$/;"	f	class:UIWidgetInspector	file:
mGrid	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected UIGrid mGrid;$/;"	f	class:UIDragDropItem
mHalfPixelOffset	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	bool mHalfPixelOffset = false;$/;"	f	class:UIPanel	file:
mHandles	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	static int mHandles = -1;$/;"	f	class:UIWidget	file:
mHash	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^	static int mHash = "WidgetContainer".GetHashCode();$/;"	f	class:UIWidgetContainerEditor	file:
mHeight	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	int mHeight = 0;$/;"	f	class:UIDragResize	file:
mHeight	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	[HideInInspector][SerializeField] int mHeight = 0;			\/\/ Original height of the texture$/;"	f	class:BMFont	file:
mHeight	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	int mHeight = 0;		\/\/ Symbol's height in pixels (sprite.outer.height)$/;"	f	class:BMSymbol	file:
mHeight	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	[HideInInspector][SerializeField] protected int mHeight = 100;$/;"	f	class:UIWidget
mHeight	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static int mHeight = 0;$/;"	f	class:UICamera	file:
mHighlight	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	UISprite mHighlight;$/;"	f	class:UIPopupList	file:
mHighlight	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected UITexture mHighlight = null;$/;"	f	class:UIInput
mHighlightedLabel	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	UILabel mHighlightedLabel = null;$/;"	f	class:UIPopupList	file:
mHit	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static DepthEntry mHit = new DepthEntry();$/;"	f	class:UICamera	file:
mHits	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static BetterList<DepthEntry> mHits = new BetterList<DepthEntry>();$/;"	f	class:UICamera	file:
mHorizontal	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	bool mHorizontal = false;$/;"	f	class:UIWrapContent	file:
mHover	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static GameObject mHover;$/;"	f	class:UICamera	file:
mIdle	Assets/Addons/NGUI/Examples/Scripts/Other/PlayIdleAnimations.cs	/^	AnimationClip mIdle;$/;"	f	class:PlayIdleAnimations	file:
mIgnoreCallbacks	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected bool mIgnoreCallbacks = false;$/;"	f	class:UIScrollView
mIgnoreUp	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	bool mIgnoreUp = false;$/;"	f	class:UIKeyBinding	file:
mImage0	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mImage0 = "";$/;"	f	class:UICreateWidgetWizard	file:
mImage1	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mImage1 = "";$/;"	f	class:UICreateWidgetWizard	file:
mImage2	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mImage2 = "";$/;"	f	class:UICreateWidgetWizard	file:
mImage3	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mImage3 = "";$/;"	f	class:UICreateWidgetWizard	file:
mInactiveList	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	static BetterList<UIDrawCall> mInactiveList = new BetterList<UIDrawCall>();$/;"	f	class:UIDrawCall	file:
mIndex	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvDatabaseInspector.cs	/^	static int mIndex = 0;$/;"	f	class:InvDatabaseInspector	file:
mIndex	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^	int mIndex = 0;$/;"	f	class:UI2DSpriteAnimation	file:
mIndex	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	int mIndex = 0;$/;"	f	class:UISpriteAnimation	file:
mIndices	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	int[]			mIndices;		\/\/ Cached indices$/;"	f	class:UIDrawCall	file:
mInitDone	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected bool mInitDone = false;$/;"	f	class:UIButtonColor
mInitDone	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	protected bool mInitDone = false;$/;"	f	class:UIGrid
mInitDone	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	protected bool mInitDone = false;$/;"	f	class:UITable
mInnerUV	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected Rect mInnerUV = new Rect();$/;"	f	class:UISprite
mInput	Assets/Addons/NGUI/Examples/Scripts/Other/ChatInput.cs	/^	UIInput mInput;$/;"	f	class:ChatInput	file:
mInputBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mInputBG = "";$/;"	f	class:UICreateWidgetWizard	file:
mInst	Assets/Addons/NGUI/Scripts/Internal/RealTime.cs	/^	static RealTime mInst;$/;"	f	class:RealTime	file:
mInstance	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static Localization mInstance;$/;"	f	class:Localization	file:
mInstance	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^	static NGUIDebug mInstance = null;$/;"	f	class:NGUIDebug	file:
mInstance	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	static protected UITooltip mInstance;$/;"	f	class:UITooltip
mInvert	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	[HideInInspector][SerializeField] bool mInvert = false;$/;"	f	class:UISprite	file:
mInverted	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	[HideInInspector][SerializeField] protected bool mInverted = false;$/;"	f	class:UISlider
mInvisible	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static Color mInvisible = new Color(0f, 0f, 0f, 0f);$/;"	f	class:NGUIText	file:
mIsActive	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	bool mIsActive = true;$/;"	f	class:UIToggle	file:
mIsDirty	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	static bool mIsDirty = true;$/;"	f	class:InvDatabase	file:
mIsDirty	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected bool mIsDirty = false;$/;"	f	class:UIProgressBar
mIsDragging	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^	bool mIsDragging = false;$/;"	f	class:UIWidgetContainerEditor	file:
mIsInFront	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	bool mIsInFront = true;$/;"	f	class:UIWidget	file:
mIsInput	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	bool mIsInput = false;$/;"	f	class:UIKeyBinding	file:
mIsOver	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	bool mIsOver = false;$/;"	f	class:UIPlaySound	file:
mIsValid	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	bool mIsValid = false;$/;"	f	class:BMSymbol	file:
mIsVisibleByAlpha	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	bool mIsVisibleByAlpha = true;$/;"	f	class:UIWidget	file:
mIsVisibleByPanel	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	bool mIsVisibleByPanel = true;$/;"	f	class:UIWidget	file:
mItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	InvGameItem mItem;$/;"	f	class:UIItemSlot	file:
mItemName	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^	string mItemName = "";$/;"	f	class:InvFindItem	file:
mItems	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	List<InvGameItem> mItems = new List<InvGameItem>();$/;"	f	class:UIItemStorage	file:
mItems	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvEquipment.cs	/^	InvGameItem[] mItems;$/;"	f	class:InvEquipment	file:
mKeyboard	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	static protected TouchScreenKeyboard mKeyboard;$/;"	f	class:UIInput
mKeys	Assets/Addons/NGUI/Scripts/Editor/UILocalizeEditor.cs	/^	BetterList<string> mKeys;$/;"	f	class:UILocalizeEditor	file:
mLabel	Assets/Addons/NGUI/Examples/Scripts/Other/TypewriterEffect.cs	/^	UILabel mLabel;$/;"	f	class:TypewriterEffect	file:
mLabel	Assets/Addons/NGUI/Scripts/Editor/UILabelInspector.cs	/^	UILabel mLabel;$/;"	f	class:UILabelInspector	file:
mLabelList	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	List<UILabel> mLabelList = new List<UILabel>();$/;"	f	class:UIPopupList	file:
mLanguage	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static string mLanguage;$/;"	f	class:Localization	file:
mLanguageIndex	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static int mLanguageIndex = -1;$/;"	f	class:Localization	file:
mLastAlpha	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	float mLastAlpha = 0f;$/;"	f	class:UIWidget	file:
mLastAlpha	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected float mLastAlpha = 0f;$/;"	f	class:UIInput
mLastAtlas	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	UIAtlas mLastAtlas;$/;"	f	class:UIAtlasMaker	file:
mLastDirection	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	Direction mLastDirection = Direction.Toggle;$/;"	f	class:ActiveAnimation	file:
mLastHeight	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	int mLastHeight = 0;$/;"	f	class:UILabel	file:
mLastHeight	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected int mLastHeight = 0;$/;"	f	class:UITextList
mLastIME	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	static protected string mLastIME = "";$/;"	f	class:UIInput
mLastIndex	Assets/Addons/NGUI/Examples/Scripts/Other/PlayIdleAnimations.cs	/^	int mLastIndex = 0;$/;"	f	class:PlayIdleAnimations	file:
mLastPos	Assets/Addons/NGUI/Examples/Scripts/Other/WindowDragTilt.cs	/^	Vector3 mLastPos;$/;"	f	class:WindowDragTilt	file:
mLastPos	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	Vector3 mLastPos;$/;"	f	class:UIDragObject	file:
mLastPos	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected Vector3 mLastPos;$/;"	f	class:UIScrollView
mLastSprite	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static string mLastSprite = null;$/;"	f	class:NGUIEditorTools	file:
mLastValue	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	object mLastValue = null;$/;"	f	class:PropertyBinding	file:
mLastWidth	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	int mLastWidth = 0;$/;"	f	class:UILabel	file:
mLastWidth	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected int mLastWidth = 0;$/;"	f	class:UITextList
mLayer	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	int mLayer = -1;$/;"	f	class:UIPanel	file:
mLegacyEvent	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	LegacyEvent mLegacyEvent;$/;"	f	class:UIPopupList	file:
mLegacyShader	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	bool mLegacyShader = false;$/;"	f	class:UIDrawCall	file:
mLength	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	int mLength = 0;$/;"	f	class:BMSymbol	file:
mLight	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	Light mLight;$/;"	f	class:TweenColor	file:
mLineWidth	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] float mLineWidth = 0;$/;"	f	class:UILabel	file:
mLines	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^	static List<string> mLines = new List<string>();$/;"	f	class:NGUIDebug	file:
mList	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvDatabase.cs	/^	static InvDatabase[] mList;$/;"	f	class:InvDatabase	file:
mList	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	UIPopupList mList;$/;"	f	class:UIPopupListInspector	file:
mList	Assets/Addons/NGUI/Scripts/Interaction/LanguageSelection.cs	/^	UIPopupList mList;$/;"	f	class:LanguageSelection	file:
mList	Assets/Addons/NGUI/Scripts/Interaction/UISavedOption.cs	/^	UIPopupList mList;$/;"	f	class:UISavedOption	file:
mList	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	List<T> mList = new List<T>();$/;"	f	class:BetterList	file:
mList	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	static BetterList<UILabel> mList = new BetterList<UILabel>();$/;"	f	class:UILabel	file:
mListBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mListBG = "";$/;"	f	class:UICreateWidgetWizard	file:
mListFG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mListFG = "";$/;"	f	class:UICreateWidgetWizard	file:
mListHL	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mListHL = "";$/;"	f	class:UICreateWidgetWizard	file:
mListener	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static AudioListener mListener;$/;"	f	class:NGUITools	file:
mLoadSavedValue	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected bool mLoadSavedValue = true;$/;"	f	class:UIInput
mLoaded	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static bool mLoaded = false;$/;"	f	class:UICreateWidgetWizard	file:
mLoaded	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static bool mLoaded = false;$/;"	f	class:NGUITools	file:
mLocalPos	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	Vector3 mLocalPos = Vector3.zero;$/;"	f	class:UIPanelInspector	file:
mLocalPos	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector3 mLocalPos = Vector3.zero;$/;"	f	class:UIWidgetInspector	file:
mLocalPos	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	Vector3 mLocalPos;$/;"	f	class:UIDragResize	file:
mLocalToPanel	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	Matrix4x4 mLocalToPanel;$/;"	f	class:UIWidget	file:
mLoop	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	[HideInInspector][SerializeField] bool mLoop = true;$/;"	f	class:UISpriteAnimation	file:
mMat	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	Material mMat;$/;"	f	class:TweenColor	file:
mMat	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	[HideInInspector][SerializeField] Material mMat;$/;"	f	class:UI2DSprite	file:
mMat	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	[HideInInspector][SerializeField] Material mMat;$/;"	f	class:UIFont	file:
mMat	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	[HideInInspector][SerializeField] Material mMat;$/;"	f	class:UITexture	file:
mMaterial	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	Material		mMaterial;		\/\/ Material used by this screen$/;"	f	class:UIDrawCall	file:
mMaterial	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] Material mMaterial;$/;"	f	class:UILabel	file:
mMatrixFrame	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	int mMatrixFrame = -1;$/;"	f	class:UIWidget	file:
mMatrixFrame	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	int mMatrixFrame = -1;$/;"	f	class:UIPanel	file:
mMax	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	Vector2 mMax = Vector2.zero;$/;"	f	class:UIPanel	file:
mMaxLineCount	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] int mMaxLineCount = 0; \/\/ 0 denotes unlimited$/;"	f	class:UILabel	file:
mMaxLineHeight	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] int mMaxLineHeight = 0;$/;"	f	class:UILabel	file:
mMaxLineWidth	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] int mMaxLineWidth = 0;$/;"	f	class:UILabel	file:
mMenu	Assets/Addons/NGUI/Scripts/Editor/NGUIContextMenu.cs	/^	static GenericMenu mMenu;$/;"	f	class:NGUIContextMenu	file:
mMesh	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	Mesh			mMesh;			\/\/ First generated mesh$/;"	f	class:UIDrawCall	file:
mMethod	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	MethodInfo mMethod;$/;"	f	class:EventDelegate	file:
mMethodName	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	[SerializeField] string mMethodName;$/;"	f	class:EventDelegate	file:
mMin	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	Vector2 mMin = Vector2.zero;$/;"	f	class:UIPanel	file:
mMomentum	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	Vector3 mMomentum = Vector3.zero;$/;"	f	class:UIDragObject	file:
mMomentum	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	Vector2 mMomentum = Vector2.zero;$/;"	f	class:UIDraggableCamera	file:
mMomentum	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected Vector3 mMomentum = Vector3.zero;$/;"	f	class:UIScrollView
mMouse	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static MouseOrTouch[] mMouse = new MouseOrTouch[] { new MouseOrTouch(), new MouseOrTouch(), new MouseOrTouch() };$/;"	f	class:UICamera	file:
mMoved	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	bool mMoved = false;$/;"	f	class:UIWidget	file:
mMultiline	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] bool mMultiline = true;$/;"	f	class:UILabel	file:
mMyCam	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	Camera mMyCam;$/;"	f	class:UIRect	file:
mName	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	[SerializeField] string mName;$/;"	f	class:PropertyReference	file:
mNextBlink	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected float mNextBlink = 0f;$/;"	f	class:UIInput
mNextBreak	Assets/Addons/NGUI/Examples/Scripts/Other/PlayIdleAnimations.cs	/^	float mNextBreak = 0f;$/;"	f	class:PlayIdleAnimations	file:
mNextChar	Assets/Addons/NGUI/Examples/Scripts/Other/TypewriterEffect.cs	/^	float mNextChar = 0f;$/;"	f	class:TypewriterEffect	file:
mNextEvent	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static float mNextEvent = 0f;$/;"	f	class:UICamera	file:
mNextRaycast	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	float mNextRaycast = 0f;$/;"	f	class:UICamera	file:
mNextScheme	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static ControlScheme mNextScheme = ControlScheme.Controller;$/;"	f	class:UICamera	file:
mNextSelection	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static GameObject mNextSelection = null;$/;"	f	class:UICamera	file:
mNguiSprite	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^	UI2DSprite mNguiSprite;$/;"	f	class:UI2DSpriteAnimation	file:
mNormalSprite	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	string mNormalSprite;$/;"	f	class:UIButton	file:
mNotify	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	bool mNotify = false;$/;"	f	class:ActiveAnimation	file:
mNotifying	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static bool mNotifying = false;$/;"	f	class:UICamera	file:
mObject	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	SerializedObject mObject;$/;"	f	class:SpriteSelector	file:
mObjects	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	Object[] mObjects;$/;"	f	class:ComponentSelector	file:
mOffset	Assets/Addons/NGUI/Examples/Scripts/Other/TypewriterEffect.cs	/^	int mOffset = 0;$/;"	f	class:TypewriterEffect	file:
mOffset	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected float mOffset = 0f;$/;"	f	class:UIProgressBar
mOffset	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	int mOffset = 0;$/;"	f	class:ByteReader	file:
mOffsetX	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	int mOffsetX = 0;		\/\/ (outer - inner) in pixels$/;"	f	class:BMSymbol	file:
mOffsetY	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	int mOffsetY = 0;		\/\/ (outer - inner) in pixels$/;"	f	class:BMSymbol	file:
mOldDictionary	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	static Dictionary<string, string> mOldDictionary = new Dictionary<string, string>();$/;"	f	class:Localization	file:
mOldPos	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	Vector3 mOldPos;$/;"	f	class:UIWidget	file:
mOldRot	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	Quaternion mOldRot;$/;"	f	class:UIWidget	file:
mOldScale	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	Vector3 mOldScale;$/;"	f	class:UIWidget	file:
mOldShader	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	Shader mOldShader;$/;"	f	class:UIWidget	file:
mOldTex	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	Texture mOldTex;$/;"	f	class:UIWidget	file:
mOldV0	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	Vector3 mOldV0;$/;"	f	class:UIWidget	file:
mOldV1	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	Vector3 mOldV1;$/;"	f	class:UIWidget	file:
mOrangeDot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static GUIStyle mOrangeDot = null;$/;"	f	class:UIWidgetInspector	file:
mOuterUV	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected Rect mOuterUV = new Rect();$/;"	f	class:UISprite
mOverflow	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] Overflow mOverflow = Overflow.ShrinkContent;$/;"	f	class:UILabel	file:
mPMA	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	int mPMA = -1;$/;"	f	class:UI2DSprite	file:
mPMA	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	int mPMA = -1;$/;"	f	class:UIAtlas	file:
mPMA	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	int mPMA = -1;$/;"	f	class:UIFont	file:
mPMA	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	int mPMA = -1;$/;"	f	class:UITexture	file:
mPacked	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	int mPacked = -1;$/;"	f	class:UIFont	file:
mPanel	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	UIPanel mPanel;$/;"	f	class:UIPanelInspector	file:
mPanel	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	UIPanel mPanel;$/;"	f	class:UIDragObject	file:
mPanel	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	protected UIPanel mPanel;$/;"	f	class:UIGrid
mPanel	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	UIPanel mPanel;$/;"	f	class:UIPopupList	file:
mPanel	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected UIPanel mPanel;$/;"	f	class:UIScrollView
mPanel	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	protected UIPanel mPanel;$/;"	f	class:UITable
mPanel	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	UIPanel mPanel;$/;"	f	class:UIWrapContent	file:
mPanel	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	UIPanel mPanel;$/;"	f	class:SpringPanel	file:
mPanel	Assets/Addons/NGUI/Scripts/Tweening/AnimatedAlpha.cs	/^	UIPanel mPanel;$/;"	f	class:AnimatedAlpha	file:
mPanel	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	UIPanel mPanel;$/;"	f	class:UIStretch	file:
mParagraphs	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected BetterList<Paragraph> mParagraphs = new BetterList<Paragraph>();$/;"	f	class:UITextList
mParameters	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	[SerializeField] Parameter[] mParameters;$/;"	f	class:EventDelegate	file:
mParent	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected Transform mParent;$/;"	f	class:UIDragDropItem
mParent	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	UIRect mParent;$/;"	f	class:UIRect	file:
mParentFound	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected bool mParentFound = false;$/;"	f	class:UIRect
mParentPanel	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	UIPanel mParentPanel = null;$/;"	f	class:UIPanel	file:
mPivot	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	[HideInInspector][SerializeField] protected Pivot mPivot = Pivot.Center;$/;"	f	class:UIWidget
mPivot	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected UIWidget.Pivot mPivot = UIWidget.Pivot.TopLeft;$/;"	f	class:UIInput
mPixelSize	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	[HideInInspector][SerializeField] float mPixelSize = 1f;$/;"	f	class:UIAtlas	file:
mPlane	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	Plane mPlane;$/;"	f	class:UIDragObject	file:
mPlane	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	Plane mPlane;$/;"	f	class:UIDragResize	file:
mPlane	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected Plane mPlane;$/;"	f	class:UIScrollView
mPlayMode	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	protected bool mPlayMode = true;$/;"	f	class:UIWidget
mPos	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	SerializedProperty mPos;$/;"	f	class:NGUITransformInspector	file:
mPos	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	Vector2 mPos = Vector2.zero;$/;"	f	class:SpriteSelector	file:
mPos	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	Vector3 mPos;$/;"	f	class:UIButtonOffset	file:
mPos	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	Vector3 mPos;$/;"	f	class:TweenTransform	file:
mPos	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected Vector3 mPos;$/;"	f	class:UITooltip
mPosition	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected float mPosition = 0f;$/;"	f	class:UIInput
mPrefab	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvAttachmentPoint.cs	/^	GameObject mPrefab;$/;"	f	class:InvAttachmentPoint	file:
mPrefix	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	[HideInInspector][SerializeField] string mPrefix = "";$/;"	f	class:UISpriteAnimation	file:
mPremultiply	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	bool mPremultiply = false;$/;"	f	class:UILabel	file:
mPressTime	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected float mPressTime = 0f;$/;"	f	class:UIDragDropItem
mPressed	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	bool mPressed = false;$/;"	f	class:UIDragObject	file:
mPressed	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	bool mPressed = false;$/;"	f	class:UIDraggableCamera	file:
mPressed	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected bool mPressed = false;$/;"	f	class:UIScrollView
mPrevious	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static GameObject mPrevious;$/;"	f	class:NGUIEditorTools	file:
mPrintedSize	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	int mPrintedSize = 0;$/;"	f	class:UILabel	file:
mProcessedText	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	string mProcessedText = null;$/;"	f	class:UILabel	file:
mProperty	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	SerializedProperty mProperty;$/;"	f	class:SpriteSelector	file:
mProperty	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	PropertyInfo mProperty = null;$/;"	f	class:PropertyReference	file:
mRawDelegate	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	bool mRawDelegate = false;$/;"	f	class:EventDelegate	file:
mRayDebug	Assets/Addons/NGUI/Scripts/Internal/NGUIDebug.cs	/^	static bool mRayDebug = false;$/;"	f	class:NGUIDebug	file:
mRayPos	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	Vector3 mRayPos;$/;"	f	class:UIDragResize	file:
mRb	Assets/Addons/NGUI/Examples/Scripts/Other/Spin.cs	/^	Rigidbody mRb;$/;"	f	class:Spin	file:
mRealDelta	Assets/Addons/NGUI/Scripts/Internal/RealTime.cs	/^	float mRealDelta = 0f;$/;"	f	class:RealTime	file:
mRealTime	Assets/Addons/NGUI/Scripts/Internal/RealTime.cs	/^	float mRealTime = 0f;$/;"	f	class:RealTime	file:
mRebuild	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	bool mRebuild = false;$/;"	f	class:UIPanel	file:
mRebuildMat	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	bool mRebuildMat = true;$/;"	f	class:UIDrawCall	file:
mRect	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	UIRect mRect;$/;"	f	class:TweenAlpha	file:
mRect	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	UIRect mRect;$/;"	f	class:TweenPosition	file:
mRect	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	Rect mRect = new Rect();$/;"	f	class:UIAnchor	file:
mRect	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	Rect mRect;$/;"	f	class:UIStretch	file:
mRect	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	[HideInInspector][SerializeField] Rect mRect = new Rect(0f, 0f, 1f, 1f);$/;"	f	class:UITexture	file:
mRedDot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static GUIStyle mRedDot = null;$/;"	f	class:UIWidgetInspector	file:
mRelative	Assets/Addons/NGUI/Examples/Scripts/Other/LagPosition.cs	/^	Vector3 mRelative;$/;"	f	class:LagPosition	file:
mRelative	Assets/Addons/NGUI/Examples/Scripts/Other/LagRotation.cs	/^	Quaternion mRelative;$/;"	f	class:LagRotation	file:
mRenderQueue	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	int mRenderQueue = 3000;$/;"	f	class:UIDrawCall	file:
mRenderer	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	MeshRenderer	mRenderer;		\/\/ Mesh renderer for this screen$/;"	f	class:UIDrawCall	file:
mReplacement	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	UIAtlas mReplacement = null;$/;"	f	class:UIAtlasInspector	file:
mReplacement	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	UIFont mReplacement = null;$/;"	f	class:UIFontInspector	file:
mReplacement	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	[HideInInspector][SerializeField] UIAtlas mReplacement;$/;"	f	class:UIAtlas	file:
mReplacement	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	[HideInInspector][SerializeField] UIFont mReplacement;$/;"	f	class:UIFont	file:
mReposition	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	protected bool mReposition = false;$/;"	f	class:UIGrid
mReposition	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	protected bool mReposition = false;$/;"	f	class:UITable
mReset	Assets/Addons/NGUI/Examples/Scripts/Other/TypewriterEffect.cs	/^	bool mReset = true;$/;"	f	class:TypewriterEffect	file:
mResized	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	bool mResized = false;$/;"	f	class:UIPanel	file:
mResults	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Editor/InvFindItem.cs	/^	List<FindResult> mResults = new List<FindResult>();$/;"	f	class:InvFindItem	file:
mRoot	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected UIRoot mRoot;$/;"	f	class:UIDragDropItem
mRoot	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	UIRoot mRoot;$/;"	f	class:UIDraggableCamera	file:
mRoot	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	UIRoot mRoot;$/;"	f	class:UIRect	file:
mRoot	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	UIRoot mRoot;$/;"	f	class:UIAnchor	file:
mRoot	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	UIRoot mRoot;$/;"	f	class:UIStretch	file:
mRootSet	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	bool mRootSet = false;$/;"	f	class:UIRect	file:
mRot	Assets/Addons/NGUI/Examples/Scripts/Other/PanWithMouse.cs	/^	Vector2 mRot = Vector2.zero;$/;"	f	class:PanWithMouse	file:
mRot	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	SerializedProperty mRot;$/;"	f	class:NGUITransformInspector	file:
mRot	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	Quaternion mRot;$/;"	f	class:UIButtonRotation	file:
mRot	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	Quaternion mRot;$/;"	f	class:TweenTransform	file:
mRtpNormal	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	Vector3 mRtpNormal;$/;"	f	class:UIGeometry	file:
mRtpTan	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	Vector4 mRtpTan;$/;"	f	class:UIGeometry	file:
mRtpVerts	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	BetterList<Vector3> mRtpVerts = new BetterList<Vector3>();$/;"	f	class:UIGeometry	file:
mSaved	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	[HideInInspector][SerializeField] List<BMGlyph> mSaved = new List<BMGlyph>();$/;"	f	class:BMFont	file:
mScale	Assets/Addons/NGUI/Scripts/Editor/NGUITransformInspector.cs	/^	SerializedProperty mScale;$/;"	f	class:NGUITransformInspector	file:
mScale	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	Vector3 mScale;$/;"	f	class:UIButtonScale	file:
mScale	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	Vector3 mScale;$/;"	f	class:TweenTransform	file:
mScale	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	float mScale = 1f;$/;"	f	class:UILabel	file:
mScroll	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	Vector2 mScroll = Vector2.zero;$/;"	f	class:ComponentSelector	file:
mScroll	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^	Vector2 mScroll = Vector2.zero;$/;"	f	class:UIAtlasMaker	file:
mScroll	Assets/Addons/NGUI/Scripts/Editor/UICameraTool.cs	/^	Vector2 mScroll = Vector2.zero;$/;"	f	class:UICameraTool	file:
mScroll	Assets/Addons/NGUI/Scripts/Editor/UIDrawCallViewer.cs	/^	Vector2 mScroll = Vector2.zero;$/;"	f	class:UIDrawCallViewer	file:
mScroll	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^	Vector2 mScroll = Vector2.zero;$/;"	f	class:UIPanelTool	file:
mScroll	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	Vector3 mScroll = Vector3.zero;$/;"	f	class:UIDragObject	file:
mScroll	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	UIScrollView mScroll;$/;"	f	class:UIDragScrollView	file:
mScroll	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	float mScroll = 0f;$/;"	f	class:UIDraggableCamera	file:
mScroll	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	[HideInInspector][SerializeField] float mScroll = 0f;$/;"	f	class:UIScrollBar	file:
mScroll	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected float mScroll = 0f;$/;"	f	class:UIScrollView
mScroll	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	UIScrollView mScroll;$/;"	f	class:UIWrapContent	file:
mScroll	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected float mScroll = 0f;$/;"	f	class:UITextList
mScrollBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mScrollBG = "";$/;"	f	class:UICreateWidgetWizard	file:
mScrollCL	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static bool mScrollCL = true;$/;"	f	class:UICreateWidgetWizard	file:
mScrollFG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mScrollFG = "";$/;"	f	class:UICreateWidgetWizard	file:
mScrollView	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	UIScrollView mScrollView;$/;"	f	class:UICenterOnChild	file:
mSearched	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	bool mSearched = false;$/;"	f	class:ComponentSelector	file:
mSelectedItem	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	[HideInInspector][SerializeField] string mSelectedItem;$/;"	f	class:UIPopupList	file:
mSelectedSymbol	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	BMSymbol mSelectedSymbol = null;$/;"	f	class:UIFontInspector	file:
mSelectionEnd	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected int mSelectionEnd = 0;$/;"	f	class:UIInput
mSelectionStart	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	protected int mSelectionStart = 0;$/;"	f	class:UIInput
mSeparator	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected char[] mSeparator = new char[] { '\\n' };$/;"	f	class:UITextList
mShader	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	Shader			mShader;		\/\/ Shader used by the dynamically created material$/;"	f	class:UIDrawCall	file:
mShader	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	[HideInInspector][SerializeField] Shader mShader;$/;"	f	class:UI2DSprite	file:
mShader	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	[HideInInspector][SerializeField] Shader mShader;$/;"	f	class:UITexture	file:
mShouldBeProcessed	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	bool mShouldBeProcessed = true;$/;"	f	class:UILabel	file:
mShouldMove	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected bool mShouldMove = false;$/;"	f	class:UIScrollView
mShrinkToFit	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] bool mShrinkToFit = false;$/;"	f	class:UILabel	file:
mSides	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static Vector3[] mSides = new Vector3[4];$/;"	f	class:NGUITools	file:
mSides	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	static Vector3[] mSides = new Vector3[4];$/;"	f	class:UIRect	file:
mSize	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	[HideInInspector][SerializeField] protected float mSize = 1f;$/;"	f	class:UIScrollBar
mSize	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	[HideInInspector][SerializeField] int mSize = 16;			\/\/ How much to move the cursor when moving to the next line$/;"	f	class:BMFont	file:
mSize	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected Vector3 mSize = Vector3.zero;$/;"	f	class:UITooltip
mSizeFrame	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static int mSizeFrame = -1;$/;"	f	class:UIPanel	file:
mSizes	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static BetterList<float> mSizes = new BetterList<float>();$/;"	f	class:NGUIText	file:
mSlider	Assets/Addons/NGUI/Scripts/Interaction/UISoundVolume.cs	/^	UISlider mSlider;$/;"	f	class:UISoundVolume	file:
mSliderBG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mSliderBG = "";$/;"	f	class:UICreateWidgetWizard	file:
mSliderFG	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mSliderFG = "";$/;"	f	class:UICreateWidgetWizard	file:
mSliderTB	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static string mSliderTB = "";$/;"	f	class:UICreateWidgetWizard	file:
mSnapCenter	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static BetterList<Vector3> mSnapCenter = new BetterList<Vector3>();$/;"	f	class:NGUISnap	file:
mSnapCorners	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static BetterList<Vector3> mSnapCorners = new BetterList<Vector3>();$/;"	f	class:NGUISnap	file:
mSnapping	Assets/Addons/NGUI/Scripts/Editor/NGUISnap.cs	/^	static int mSnapping = -1;$/;"	f	class:NGUISnap	file:
mSortWidgets	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	bool mSortWidgets = false;$/;"	f	class:UIPanel	file:
mSortingOrder	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	[HideInInspector][SerializeField] int mSortingOrder = 0;$/;"	f	class:UIPanel	file:
mSource	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	AudioSource mSource;$/;"	f	class:TweenVolume	file:
mSpacingX	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] int mSpacingX = 0;$/;"	f	class:UILabel	file:
mSpacingY	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] int mSpacingY = 0;$/;"	f	class:UILabel	file:
mSprite	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	UISprite mSprite;$/;"	f	class:UICursor	file:
mSprite	Assets/Addons/NGUI/Scripts/Editor/SpriteSelector.cs	/^	UISprite mSprite;$/;"	f	class:SpriteSelector	file:
mSprite	Assets/Addons/NGUI/Scripts/Editor/UI2DSpriteEditor.cs	/^	UI2DSprite mSprite;$/;"	f	class:UI2DSpriteEditor	file:
mSprite	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	UISprite mSprite;$/;"	f	class:UIButton	file:
mSprite	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	UISpriteData mSprite = null;$/;"	f	class:BMSymbol	file:
mSprite	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	[HideInInspector][SerializeField] UnityEngine.Sprite mSprite;$/;"	f	class:UI2DSprite	file:
mSprite	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	UISpriteData mSprite = null;$/;"	f	class:UIFont	file:
mSprite	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	protected UISpriteData mSprite;$/;"	f	class:UISprite
mSprite	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	UISprite mSprite;$/;"	f	class:UISpriteAnimation	file:
mSprite	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	UISprite mSprite;$/;"	f	class:UIStretch	file:
mSpriteName	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	string mSpriteName;$/;"	f	class:UICursor	file:
mSpriteName	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	[HideInInspector][SerializeField] string mSpriteName;$/;"	f	class:BMFont	file:
mSpriteName	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	[HideInInspector][SerializeField] string mSpriteName;$/;"	f	class:UISprite	file:
mSpriteNames	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	List<string> mSpriteNames = new List<string>();$/;"	f	class:UISpriteAnimation	file:
mSpriteSet	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	bool mSpriteSet = false;$/;"	f	class:UISprite	file:
mSprites	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	[HideInInspector][SerializeField] List<UISpriteData> mSprites = new List<UISpriteData>();$/;"	f	class:UIAtlas	file:
mStart	Assets/Addons/NGUI/Examples/Scripts/Other/PanWithMouse.cs	/^	Quaternion mStart;$/;"	f	class:PanWithMouse	file:
mStartBottom	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector2 mStartBottom = Vector2.zero;$/;"	f	class:UIWidgetInspector	file:
mStartCR	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	Vector4 mStartCR = Vector4.zero;$/;"	f	class:UIPanelInspector	file:
mStartDir	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	Vector3 mStartDir = Vector3.right;$/;"	f	class:UIPanelInspector	file:
mStartDir	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector3 mStartDir = Vector3.right;$/;"	f	class:UIWidgetInspector	file:
mStartDrag	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	Vector3 mStartDrag = Vector3.zero;$/;"	f	class:UIPanelInspector	file:
mStartDrag	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^	Vector3 mStartDrag = Vector3.zero;$/;"	f	class:UIWidgetContainerEditor	file:
mStartDrag	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector3 mStartDrag = Vector3.zero;$/;"	f	class:UIWidgetInspector	file:
mStartHeight	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	int mStartHeight = 0;$/;"	f	class:UIWidgetInspector	file:
mStartLeft	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector2 mStartLeft = Vector2.zero;$/;"	f	class:UIWidgetInspector	file:
mStartMouse	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	Vector2 mStartMouse = Vector2.zero;$/;"	f	class:UIPanelInspector	file:
mStartMouse	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^	Vector2 mStartMouse = Vector2.zero;$/;"	f	class:UIWidgetContainerEditor	file:
mStartMouse	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector2 mStartMouse = Vector2.zero;$/;"	f	class:UIWidgetInspector	file:
mStartPos	Assets/Addons/NGUI/Scripts/Editor/UIWidgetContainerEditor.cs	/^	Vector3 mStartPos = Vector3.zero;$/;"	f	class:UIWidgetContainerEditor	file:
mStartRight	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector2 mStartRight = Vector2.zero;$/;"	f	class:UIWidgetInspector	file:
mStartRot	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	Vector3 mStartRot = Vector3.zero;$/;"	f	class:UIPanelInspector	file:
mStartRot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector3 mStartRot = Vector3.zero;$/;"	f	class:UIWidgetInspector	file:
mStartTime	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	float mStartTime = 0f;$/;"	f	class:UITweener	file:
mStartTop	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector2 mStartTop = Vector2.zero;$/;"	f	class:UIWidgetInspector	file:
mStartWidth	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	int mStartWidth = 0;$/;"	f	class:UIWidgetInspector	file:
mStarted	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	bool mStarted = false;$/;"	f	class:UIButtonMessage	file:
mStarted	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	bool mStarted = false;$/;"	f	class:UIButtonOffset	file:
mStarted	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	bool mStarted = false;$/;"	f	class:UIButtonRotation	file:
mStarted	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	bool mStarted = false;$/;"	f	class:UIButtonScale	file:
mStarted	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	bool mStarted = false;$/;"	f	class:UIDragObject	file:
mStarted	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	bool mStarted = false;$/;"	f	class:UIDragScrollView	file:
mStarted	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	bool mStarted = false;$/;"	f	class:UIPlayAnimation	file:
mStarted	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	bool mStarted = false;$/;"	f	class:UIPlayTween	file:
mStarted	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	bool mStarted = false;$/;"	f	class:UIToggle	file:
mStarted	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected bool mStarted = false;$/;"	f	class:UIRect
mStarted	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	bool mStarted = false;$/;"	f	class:UITweener	file:
mStarted	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	bool mStarted = false;$/;"	f	class:UIAnchor	file:
mStarted	Assets/Addons/NGUI/Scripts/UI/UILocalize.cs	/^	bool mStarted = false;$/;"	f	class:UILocalize	file:
mStarted	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	bool mStarted = false;$/;"	f	class:UIStretch	file:
mState	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected State mState = State.Normal;$/;"	f	class:UIButtonColor
mStyle0	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	GUIStyle mStyle0 = null;$/;"	f	class:UIPanelInspector	file:
mStyle1	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	GUIStyle mStyle1 = null;$/;"	f	class:UIPanelInspector	file:
mSv	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	UIScrollView mSv;$/;"	f	class:SpringPosition	file:
mSymbolSequence	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	string mSymbolSequence = "";$/;"	f	class:UIFontInspector	file:
mSymbolSprite	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	string mSymbolSprite = "";$/;"	f	class:UIFontInspector	file:
mSymbols	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	[HideInInspector][SerializeField] List<BMSymbol> mSymbols = new List<BMSymbol>();$/;"	f	class:UIFont	file:
mSymbols	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] NGUIText.SymbolStyle mSymbols = NGUIText.SymbolStyle.Normal;$/;"	f	class:UILabel	file:
mTable	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected UITable mTable;$/;"	f	class:UIDragDropItem
mTable	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	UITable mTable;$/;"	f	class:TweenHeight	file:
mTable	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	UITable mTable;$/;"	f	class:TweenScale	file:
mTable	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	UITable mTable;$/;"	f	class:TweenWidth	file:
mTarget	Assets/Addons/NGUI/Scripts/Editor/UIRectEditor.cs	/^	protected Transform[] mTarget = new Transform[4];$/;"	f	class:UIRectEditor
mTarget	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	[SerializeField] MonoBehaviour mTarget;$/;"	f	class:EventDelegate	file:
mTarget	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	[SerializeField] Component mTarget;$/;"	f	class:PropertyReference	file:
mTarget	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected float mTarget = 0f;$/;"	f	class:UITooltip
mTargetPos	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	Vector3 mTargetPos;$/;"	f	class:UIDragObject	file:
mTemp	Assets/Addons/NGUI/Scripts/Internal/ByteReader.cs	/^	static BetterList<string> mTemp = new BetterList<string>();$/;"	f	class:ByteReader	file:
mTemp	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	List<EventDelegate> mTemp = null;$/;"	f	class:UITweener	file:
mTemp	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static float[] mTemp = new float[4];$/;"	f	class:UIPanel	file:
mTempChar	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static CharacterInfo mTempChar;$/;"	f	class:NGUIText	file:
mTempIndices	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	static BetterList<int> mTempIndices = new BetterList<int>();$/;"	f	class:UILabel	file:
mTempPos	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	static Vector2[] mTempPos = new Vector2[4];$/;"	f	class:UISprite	file:
mTempUVs	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	static Vector2[] mTempUVs = new Vector2[4];$/;"	f	class:UISprite	file:
mTempVerts	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	static BetterList<Vector3> mTempVerts = new BetterList<Vector3>();$/;"	f	class:UILabel	file:
mTex	Assets/Addons/NGUI/Examples/Scripts/Other/DownloadTexture.cs	/^	Texture2D mTex;$/;"	f	class:DownloadTexture	file:
mTex	Assets/Addons/NGUI/Scripts/Editor/UITextureInspector.cs	/^	UITexture mTex;$/;"	f	class:UITextureInspector	file:
mText	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	string mText = "";$/;"	f	class:UIItemSlot	file:
mText	Assets/Addons/NGUI/Examples/Scripts/Other/TypewriterEffect.cs	/^	string mText;$/;"	f	class:TypewriterEffect	file:
mText	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] string mText = "";$/;"	f	class:UILabel	file:
mTexture	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	Texture			mTexture;		\/\/ Main texture used by the material$/;"	f	class:UIDrawCall	file:
mTexture	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	[HideInInspector][SerializeField] Texture mTexture;$/;"	f	class:UITexture	file:
mThreshold	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	float mThreshold = 0f;$/;"	f	class:SpringPosition	file:
mTitle	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	string mTitle;$/;"	f	class:ComponentSelector	file:
mTooltip	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	GameObject mTooltip = null;$/;"	f	class:UICamera	file:
mTooltipTime	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	float mTooltipTime = 0f;$/;"	f	class:UICamera	file:
mTotalLines	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected int mTotalLines = 0;$/;"	f	class:UITextList
mTouchID	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected int mTouchID = int.MinValue;$/;"	f	class:UIDragDropItem
mTouchID	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	int mTouchID = 0;$/;"	f	class:UIDragObject	file:
mTouches	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static Dictionary<int, MouseOrTouch> mTouches = new Dictionary<int, MouseOrTouch>();$/;"	f	class:UICamera	file:
mTrans	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	Transform mTrans;$/;"	f	class:UICursor	file:
mTrans	Assets/Addons/NGUI/Examples/Scripts/Other/LagPosition.cs	/^	Transform mTrans;$/;"	f	class:LagPosition	file:
mTrans	Assets/Addons/NGUI/Examples/Scripts/Other/LagRotation.cs	/^	Transform mTrans;$/;"	f	class:LagRotation	file:
mTrans	Assets/Addons/NGUI/Examples/Scripts/Other/LookAtTarget.cs	/^	Transform mTrans;$/;"	f	class:LookAtTarget	file:
mTrans	Assets/Addons/NGUI/Examples/Scripts/Other/PanWithMouse.cs	/^	Transform mTrans;$/;"	f	class:PanWithMouse	file:
mTrans	Assets/Addons/NGUI/Examples/Scripts/Other/Spin.cs	/^	Transform mTrans;$/;"	f	class:Spin	file:
mTrans	Assets/Addons/NGUI/Examples/Scripts/Other/SpinWithMouse.cs	/^	Transform mTrans;$/;"	f	class:SpinWithMouse	file:
mTrans	Assets/Addons/NGUI/Examples/Scripts/Other/WindowAutoYaw.cs	/^	Transform mTrans;$/;"	f	class:WindowAutoYaw	file:
mTrans	Assets/Addons/NGUI/Examples/Scripts/Other/WindowDragTilt.cs	/^	Transform mTrans;$/;"	f	class:WindowDragTilt	file:
mTrans	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	protected Transform mTrans;$/;"	f	class:UIDragDropItem
mTrans	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	Transform mTrans;$/;"	f	class:UIDragScrollView	file:
mTrans	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	Transform mTrans;$/;"	f	class:UIDraggableCamera	file:
mTrans	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	protected Transform mTrans;$/;"	f	class:UIProgressBar
mTrans	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected Transform mTrans;$/;"	f	class:UIScrollView
mTrans	Assets/Addons/NGUI/Scripts/Interaction/UIWrapContent.cs	/^	Transform mTrans;$/;"	f	class:UIWrapContent	file:
mTrans	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	Transform mTrans;$/;"	f	class:SpringPanel	file:
mTrans	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	Transform		mTrans;			\/\/ Cached transform$/;"	f	class:UIDrawCall	file:
mTrans	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected Transform mTrans;$/;"	f	class:UIRect
mTrans	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	Transform mTrans;$/;"	f	class:SpringPosition	file:
mTrans	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	Transform mTrans;$/;"	f	class:TweenPosition	file:
mTrans	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	Transform mTrans;$/;"	f	class:TweenRotation	file:
mTrans	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	Transform mTrans;$/;"	f	class:TweenScale	file:
mTrans	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	Transform mTrans;$/;"	f	class:TweenTransform	file:
mTrans	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	Transform mTrans;$/;"	f	class:UIAnchor	file:
mTrans	Assets/Addons/NGUI/Scripts/UI/UIOrthoCamera.cs	/^	Transform mTrans;$/;"	f	class:UIOrthoCamera	file:
mTrans	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	Transform mTrans;$/;"	f	class:UIRoot	file:
mTrans	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	Transform mTrans;$/;"	f	class:UIStretch	file:
mTrans	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected Transform mTrans;$/;"	f	class:UITooltip
mTriangles	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	int mTriangles = 0;$/;"	f	class:UIDrawCall	file:
mTrigger	Assets/Addons/NGUI/Scripts/Editor/UIEventTriggerEditor.cs	/^	UIEventTrigger mTrigger;$/;"	f	class:UIEventTriggerEditor	file:
mTrueTypeFont	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	[HideInInspector][SerializeField] Font mTrueTypeFont;$/;"	f	class:UILabel	file:
mTweens	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	UITweener[] mTweens;$/;"	f	class:UIPlayTween	file:
mType	Assets/Addons/NGUI/Scripts/Editor/ComponentSelector.cs	/^	System.Type mType;$/;"	f	class:ComponentSelector	file:
mType	Assets/Addons/NGUI/Scripts/Editor/UIAtlasInspector.cs	/^	AtlasType mType = AtlasType.Normal;$/;"	f	class:UIAtlasInspector	file:
mType	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	UILabelInspector.FontType mType = UILabelInspector.FontType.Unity;$/;"	f	class:UICreateWidgetWizard	file:
mType	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	FontType mType = FontType.Bitmap;$/;"	f	class:UIFontInspector	file:
mType	Assets/Addons/NGUI/Scripts/Editor/UIFontMaker.cs	/^	FontType mType = FontType.GeneratedBitmap;$/;"	f	class:UIFontMaker	file:
mType	Assets/Addons/NGUI/Scripts/Editor/UIPopupListInspector.cs	/^	FontType mType;$/;"	f	class:UIPopupListInspector	file:
mType	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	[HideInInspector][SerializeField] Type mType = Type.Simple;$/;"	f	class:UISprite	file:
mUV	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	Rect mUV;$/;"	f	class:BMSymbol	file:
mUVRect	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	[HideInInspector][SerializeField] Rect mUVRect = new Rect(0f, 0f, 1f, 1f);$/;"	f	class:UIFont	file:
mUnitySprite	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^	UnityEngine.SpriteRenderer mUnitySprite;$/;"	f	class:UI2DSpriteAnimation	file:
mUpdate	Assets/Addons/NGUI/Scripts/UI/UI2DSpriteAnimation.cs	/^	float mUpdate = 0f;$/;"	f	class:UI2DSpriteAnimation	file:
mUpdateAnchors	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	protected bool mUpdateAnchors = false;$/;"	f	class:UIRect
mUpdateFrame	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	int mUpdateFrame = -1;$/;"	f	class:UIRect	file:
mUpdateFrame	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static int mUpdateFrame = -1;$/;"	f	class:UIPanel	file:
mUpdateTime	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	float mUpdateTime = 0f;$/;"	f	class:UIPanel	file:
mUseDynamicFont	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	bool mUseDynamicFont = false;$/;"	f	class:UIPopupList	file:
mUseShader	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	static bool mUseShader = false;$/;"	f	class:UIFontInspector	file:
mUseShader	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static protected bool mUseShader = false;$/;"	f	class:UIWidgetInspector
mUsed	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	BetterList<string> mUsed = new BetterList<string>();$/;"	f	class:Localization	file:
mUsingTTF	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	bool mUsingTTF = true;$/;"	f	class:UILabel	file:
mValue	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	[HideInInspector][SerializeField] protected float mValue = 1f;$/;"	f	class:UIProgressBar
mValue	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	[SerializeField][HideInInspector] protected string mValue;$/;"	f	class:UIInput
mView	Assets/Addons/NGUI/Scripts/Editor/UIFontInspector.cs	/^	static View mView = View.Font;$/;"	f	class:UIFontInspector	file:
mWidget	Assets/Addons/NGUI/Examples/Scripts/Other/SetColorOnSelection.cs	/^	UIWidget mWidget;$/;"	f	class:SetColorOnSelection	file:
mWidget	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	protected UIWidget mWidget;$/;"	f	class:UIWidgetInspector
mWidget	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	protected UIWidget mWidget;$/;"	f	class:UIButtonColor
mWidget	Assets/Addons/NGUI/Scripts/Tweening/AnimatedAlpha.cs	/^	UIWidget mWidget;$/;"	f	class:AnimatedAlpha	file:
mWidget	Assets/Addons/NGUI/Scripts/Tweening/AnimatedColor.cs	/^	UIWidget mWidget;$/;"	f	class:AnimatedColor	file:
mWidget	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	UIWidget mWidget;$/;"	f	class:TweenColor	file:
mWidget	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	UIWidget mWidget;$/;"	f	class:TweenHeight	file:
mWidget	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	UIWidget mWidget;$/;"	f	class:TweenWidth	file:
mWidget	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	UIWidget mWidget;$/;"	f	class:UIStretch	file:
mWidgetType	Assets/Addons/NGUI/Scripts/Editor/UICreateWidgetWizard.cs	/^	static WidgetType mWidgetType = WidgetType.Button;$/;"	f	class:UICreateWidgetWizard	file:
mWidgets	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	protected UIWidget[] mWidgets;$/;"	f	class:UITooltip
mWidth	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	int mWidth = 0;$/;"	f	class:UIDragResize	file:
mWidth	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	[HideInInspector][SerializeField] int mWidth = 0;			\/\/ Original width of the texture$/;"	f	class:BMFont	file:
mWidth	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	int mWidth = 0;			\/\/ Symbol's width in pixels (sprite.outer.width)$/;"	f	class:BMSymbol	file:
mWidth	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	[HideInInspector][SerializeField] protected int mWidth = 100;$/;"	f	class:UIWidget
mWidth	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static int mWidth = 0;$/;"	f	class:UICamera	file:
mWorldPos	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	Vector3 mWorldPos = Vector3.zero;$/;"	f	class:UIPanelInspector	file:
mWorldPos	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	Vector3 mWorldPos = Vector3.zero;$/;"	f	class:UIWidgetInspector	file:
mYellowDot	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static GUIStyle mYellowDot = null;$/;"	f	class:UIWidgetInspector	file:
mainCamera	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public Camera mainCamera$/;"	p	class:UICamera
mainTexture	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public Texture mainTexture$/;"	p	class:UIDrawCall
mainTexture	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public virtual Texture mainTexture$/;"	p	class:UIWidget
mainTexture	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public override Texture mainTexture$/;"	p	class:UI2DSprite
mainTexture	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	public override Texture mainTexture$/;"	p	class:UITexture
manager	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public UIPanel manager;$/;"	f	class:UIDrawCall
manualHeight	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public int manualHeight = 720;$/;"	f	class:UIRoot
material	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public virtual Material material$/;"	p	class:UIWidget
material	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public override Material material$/;"	p	class:UI2DSprite
material	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	[HideInInspector][SerializeField] Material material;$/;"	f	class:UIAtlas	file:
material	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public Material material$/;"	p	class:UIFont
material	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override Material material$/;"	p	class:UILabel
material	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public override Material material { get { return (mAtlas != null) ? mAtlas.spriteMaterial : null; } }$/;"	p	class:UISprite
material	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	public override Material material$/;"	p	class:UITexture
maxColumns	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public int maxColumns = 4;$/;"	f	class:UIItemStorage
maxHeight	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	public int maxHeight = 100000;$/;"	f	class:UIDragResize
maxIndexBufferCache	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	const int maxIndexBufferCache = 10;$/;"	f	class:UIDrawCall	file:
maxItemCount	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public int maxItemCount = 8;$/;"	f	class:UIItemStorage
maxItemLevel	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public int maxItemLevel = 50;$/;"	f	class:InvBaseItem
maxLineCount	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int maxLineCount$/;"	p	class:UILabel
maxLines	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public int maxLines = 0;$/;"	f	class:NGUIText
maxPerLine	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public int maxPerLine = 0;$/;"	f	class:UIGrid
maxRows	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public int maxRows = 4;$/;"	f	class:UIItemStorage
maxWidth	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	public int maxWidth = 100000;$/;"	f	class:UIDragResize
max_advance	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int max_advance;$/;"	f	struct:FreeType.FT_Size_Metrics
max_advance_height	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short max_advance_height;$/;"	f	struct:FreeType.FT_FaceRec
max_advance_width	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short max_advance_width;$/;"	f	struct:FreeType.FT_FaceRec
maximumHeight	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public int maximumHeight = 1536;$/;"	f	class:UIRoot
memory	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr memory;$/;"	f	struct:FreeType.FT_FaceRec
method	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public Method method = Method.Linear;$/;"	f	class:UITweener
methodName	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public string methodName$/;"	p	class:EventDelegate
metrics	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Glyph_Metrics metrics;$/;"	f	struct:FreeType.FT_GlyphSlotRec
metrics	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Size_Metrics metrics;$/;"	f	struct:FreeType.FT_SizeRec
minHeight	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	public int minHeight = 100;$/;"	f	class:UIDragResize
minHeight	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	virtual public int minHeight { get { return 2; } }$/;"	p	class:UIWidget
minHeight	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	override public int minHeight$/;"	p	class:UISprite
minItemLevel	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public int minItemLevel = 1;$/;"	f	class:InvBaseItem
minWidth	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	public int minWidth = 100;$/;"	f	class:UIDragResize
minWidth	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	virtual public int minWidth { get { return 2; } }$/;"	p	class:UIWidget
minWidth	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	override public int minWidth$/;"	p	class:UISprite
minimumHeight	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public int minimumHeight = 320;$/;"	f	class:UIRoot
modifier	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvStat.cs	/^	public Modifier modifier;$/;"	f	class:InvStat
modifier	Assets/Addons/NGUI/Scripts/Interaction/UIKeyBinding.cs	/^	public Modifier modifier = Modifier.None;$/;"	f	class:UIKeyBinding
momentumAmount	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public float momentumAmount = 35f;$/;"	f	class:UIDragObject
momentumAmount	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public float momentumAmount = 35f;$/;"	f	class:UIDraggableCamera
momentumAmount	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public float momentumAmount = 35f;$/;"	f	class:UIScrollView
mouseClickThreshold	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public float mouseClickThreshold = 10f;$/;"	f	class:UICamera
mouseDragThreshold	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public float mouseDragThreshold = 4f;$/;"	f	class:UICamera
movement	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public Movement movement = Movement.Horizontal;$/;"	f	class:UIScrollView
multiLine	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public bool multiLine$/;"	p	class:UILabel
n_contours	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short n_contours;$/;"	f	struct:FreeType.FT_Outline
n_points	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short n_points;$/;"	f	struct:FreeType.FT_Outline
name	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public string name;$/;"	f	class:InvBaseItem
name	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public string name$/;"	p	class:InvGameItem
name	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^		public string name;$/;"	f	class:NGUIEditorTools.MenuEntry
name	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^		public string name;$/;"	f	class:PropertyReferenceDrawer.Entry
name	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public string name$/;"	p	class:PropertyReference
name	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		public string name = "Unity Bug";$/;"	f	class:UIAtlas.Sprite
name	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public string name = "Sprite";$/;"	f	class:UISpriteData
name	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public string name$/;"	p	class:retinaProDevice
name	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public string 							name;$/;"	f	class:retinaProRuntimeDevice
name	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public string name;$/;"	f	class:retinaProRuntimeAtlas
namePrefix	Assets/Addons/NGUI/Scripts/UI/UISpriteAnimation.cs	/^	public string namePrefix { get { return mPrefix; } set { if (mPrefix != value) { mPrefix = value; RebuildSpriteList(); } } }$/;"	p	class:UISpriteAnimation
next	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr next;$/;"	f	struct:FreeType.FT_GlyphSlotRec
nextPageThreshold	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	public float nextPageThreshold = 0f;$/;"	f	class:UICenterOnChild
nextSprite	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public UnityEngine.Sprite nextSprite;$/;"	f	class:UI2DSprite
nextToken	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static int nextToken( char[] json, ref int index )$/;"	m	class:NGUIJson
nextUnusedDepth	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static public int nextUnusedDepth$/;"	p	class:UIPanel
normalSprite	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	public string normalSprite$/;"	p	class:UIButton
normalSprite	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	public string normalSprite;$/;"	f	class:UIImageButton
norms	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public BetterList<Vector3> norms = new BetterList<Vector3>();$/;"	f	class:UIDrawCall
num_charmaps	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int num_charmaps;$/;"	f	struct:FreeType.FT_FaceRec
num_faces	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int num_faces;$/;"	f	struct:FreeType.FT_FaceRec
num_fixed_sizes	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int num_fixed_sizes;$/;"	f	struct:FreeType.FT_FaceRec
num_glyphs	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int num_glyphs;$/;"	f	struct:FreeType.FT_FaceRec
num_grays	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short num_grays;$/;"	f	struct:FreeType.FT_Bitmap
num_subglyphs	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public uint num_subglyphs;$/;"	f	struct:FreeType.FT_GlyphSlotRec
numberOfSteps	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public int numberOfSteps = 0;$/;"	f	class:UIProgressBar
obj	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		public Object obj;$/;"	f	class:EventDelegate.Parameter
observedItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIEquipmentSlot.cs	/^	override protected InvGameItem observedItem$/;"	p	class:UIEquipmentSlot
observedItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	abstract protected InvGameItem observedItem { get; }$/;"	p	class:UIItemSlot
observedItem	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIStorageSlot.cs	/^	override protected InvGameItem observedItem$/;"	p	class:UIStorageSlot
offsetX	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int offsetX;	\/\/ Offset to apply to the cursor's left position before drawing this glyph$/;"	f	class:BMGlyph
offsetX	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public int offsetX	{ get { return mOffsetX; } }$/;"	p	class:BMSymbol
offsetY	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int offsetY; \/\/ Offset to apply to the cursor's top position before drawing this glyph$/;"	f	class:BMGlyph
offsetY	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public int offsetY	{ get { return mOffsetY; } }$/;"	p	class:BMSymbol
oldSpriteData	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	List<UISpriteData>	 	oldSpriteData;			\/\/ used to save sprite data associated with an atlas while we are refreshing the atlas$/;"	f	class:retinaProAtlasWindow	file:
onChange	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public List<EventDelegate> onChange = new List<EventDelegate>();$/;"	f	class:UIPopupList
onChange	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public List<EventDelegate> onChange = new List<EventDelegate>();$/;"	f	class:UIProgressBar
onChange	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	public List<EventDelegate> onChange = new List<EventDelegate>();$/;"	f	class:UIToggle
onChange	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public OnDimensionsChanged onChange;$/;"	f	class:UIWidget
onChange	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public List<EventDelegate> onChange = new List<EventDelegate>();$/;"	f	class:UIInput
onClick	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	public List<EventDelegate> onClick = new List<EventDelegate>();$/;"	f	class:UIButton
onClick	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onClick = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onClick	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public bool onClick			= false;$/;"	f	class:UIForwardEvents
onClick	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	public GameObject onClick;$/;"	f	class:UIKeyNavigation
onClick	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public VoidDelegate onClick;$/;"	f	class:UIEventListener
onClipMove	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public OnClippingMoved onClipMove;$/;"	f	class:UIPanel
onCustomInput	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public OnCustomInput onCustomInput;$/;"	f	class:UICamera
onDeselect	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onDeselect = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onDoubleClick	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onDoubleClick = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onDoubleClick	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public bool onDoubleClick	= false;$/;"	f	class:UIForwardEvents
onDoubleClick	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public VoidDelegate onDoubleClick;$/;"	f	class:UIEventListener
onDown	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	public GameObject onDown;$/;"	f	class:UIKeyNavigation
onDrag	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public bool onDrag			= false;$/;"	f	class:UIForwardEvents
onDrag	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public VectorDelegate onDrag;$/;"	f	class:UIEventListener
onDragFinished	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public OnDragFinished onDragFinished;$/;"	f	class:UIProgressBar
onDragFinished	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public OnDragFinished onDragFinished;$/;"	f	class:UIScrollView
onDragOut	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onDragOut = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onDragOver	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onDragOver = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onDrop	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public bool onDrop			= false;$/;"	f	class:UIForwardEvents
onDrop	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public ObjectDelegate onDrop;$/;"	f	class:UIEventListener
onFinished	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	public SpringPanel.OnFinished onFinished;$/;"	f	class:UICenterOnChild
onFinished	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public List<EventDelegate> onFinished = new List<EventDelegate>();$/;"	f	class:UIPlayAnimation
onFinished	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public List<EventDelegate> onFinished = new List<EventDelegate>();$/;"	f	class:UIPlayTween
onFinished	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	public List<EventDelegate> onFinished = new List<EventDelegate>();$/;"	f	class:ActiveAnimation
onFinished	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	public OnFinished onFinished;$/;"	f	class:SpringPanel
onFinished	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	public OnFinished onFinished;$/;"	f	class:SpringPosition
onFinished	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public List<EventDelegate> onFinished = new List<EventDelegate>();$/;"	f	class:UITweener
onGeometryUpdated	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public OnGeometryUpdated onGeometryUpdated;$/;"	f	class:UIPanel
onHover	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public bool onHover			= false;$/;"	f	class:UIForwardEvents
onHover	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public BoolDelegate onHover;$/;"	f	class:UIEventListener
onHoverOut	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onHoverOut = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onHoverOver	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onHoverOver = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onKey	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public KeyCodeDelegate onKey;$/;"	f	class:UIEventListener
onLeft	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	public GameObject onLeft;$/;"	f	class:UIKeyNavigation
onPress	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onPress = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onPress	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public bool onPress			= false;$/;"	f	class:UIForwardEvents
onPress	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public BoolDelegate onPress;$/;"	f	class:UIEventListener
onRelease	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onRelease = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onReposition	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public OnReposition onReposition;$/;"	f	class:UIGrid
onReposition	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public OnReposition onReposition;$/;"	f	class:UITable
onRight	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	public GameObject onRight;$/;"	f	class:UIKeyNavigation
onScreenResize	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public OnScreenResize onScreenResize;$/;"	f	class:UICamera
onScroll	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public bool onScroll		= false;$/;"	f	class:UIForwardEvents
onScroll	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public FloatDelegate onScroll;$/;"	f	class:UIEventListener
onSelect	Assets/Addons/NGUI/Scripts/Interaction/UIEventTrigger.cs	/^	public List<EventDelegate> onSelect = new List<EventDelegate>();$/;"	f	class:UIEventTrigger
onSelect	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public bool onSelect		= false;$/;"	f	class:UIForwardEvents
onSelect	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public BoolDelegate onSelect;$/;"	f	class:UIEventListener
onSelectionChange	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public LegacyEvent onSelectionChange { get { return mLegacyEvent; } set { mLegacyEvent = value; } }$/;"	p	class:UIPopupList
onSubmit	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public bool onSubmit		= false;$/;"	f	class:UIForwardEvents
onSubmit	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public VoidDelegate onSubmit;$/;"	f	class:UIEventListener
onSubmit	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public List<EventDelegate> onSubmit = new List<EventDelegate>();$/;"	f	class:UIInput
onUp	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	public GameObject onUp;$/;"	f	class:UIKeyNavigation
onValidate	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public OnValidate onValidate;$/;"	f	class:UIInput
oneShot	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public bool oneShot = false;$/;"	f	class:EventDelegate
optionCanBeNone	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	public bool optionCanBeNone = false;$/;"	f	class:UIToggle
orthoSize	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	public float orthoSize { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenOrthoSize
other	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr other;$/;"	f	struct:FreeType.FT_GlyphSlotRec
outer	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		public Rect outer = new Rect(0f, 0f, 1f, 1f);$/;"	f	class:UIAtlas.Sprite
outline	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_Outline outline;$/;"	f	struct:FreeType.FT_GlyphSlotRec
overflowMethod	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Overflow overflowMethod$/;"	p	class:UILabel
overflowStyle	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public UILabel.Overflow overflowStyle$/;"	p	class:NGUISettings
packedFontShader	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public bool packedFontShader$/;"	p	class:UIFont
padBottom	Assets/Addons/NGUI/Examples/Scripts/Other/EnvelopContent.cs	/^	public int padBottom = 0;$/;"	f	class:EnvelopContent
padLeft	Assets/Addons/NGUI/Examples/Scripts/Other/EnvelopContent.cs	/^	public int padLeft = 0;$/;"	f	class:EnvelopContent
padRight	Assets/Addons/NGUI/Examples/Scripts/Other/EnvelopContent.cs	/^	public int padRight = 0;$/;"	f	class:EnvelopContent
padTop	Assets/Addons/NGUI/Examples/Scripts/Other/EnvelopContent.cs	/^	public int padTop = 0;$/;"	f	class:EnvelopContent
padding	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public int padding = 10;$/;"	f	class:UIItemStorage
padding	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public Vector2 padding = new Vector3(4f, 4f);$/;"	f	class:UIPopupList
padding	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public Vector2 padding = Vector2.zero;$/;"	f	class:UITable
paddingBottom	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		public float paddingBottom	= 0f;$/;"	f	class:UIAtlas.Sprite
paddingBottom	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int paddingBottom = 0;$/;"	f	class:UISpriteData
paddingLeft	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		public float paddingLeft	= 0f;$/;"	f	class:UIAtlas.Sprite
paddingLeft	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int paddingLeft = 0;$/;"	f	class:UISpriteData
paddingRight	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		public float paddingRight	= 0f;$/;"	f	class:UIAtlas.Sprite
paddingRight	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int paddingRight = 0;$/;"	f	class:UISpriteData
paddingTop	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		public float paddingTop		= 0f;$/;"	f	class:UIAtlas.Sprite
paddingTop	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int paddingTop = 0;$/;"	f	class:UISpriteData
paddingX	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^		public bool paddingX;$/;"	f	struct:UITexturePacker.Storage
paddingY	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^		public bool paddingY;$/;"	f	struct:UITexturePacker.Storage
padlock	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	static readonly object padlock = new object();$/;"	f	class:retinaProDataSerialize	file:
palette	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr palette;$/;"	f	struct:FreeType.FT_Bitmap
palette_mode	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public sbyte palette_mode;$/;"	f	struct:FreeType.FT_Bitmap
panel	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^		public UIPanel panel;$/;"	f	class:UIPanelTool.Entry
panel	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public UIPanel panel { get { return mPanel; } }$/;"	p	class:UIScrollView
panel	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public UIPanel panel;$/;"	f	class:UIDrawCall
panel	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public UIPanel panel;$/;"	f	class:UIWidget
panel	Assets/Addons/RetinaPro/Example/refreshPanelTest.cs	/^	public UIPanel	panel;$/;"	f	class:refreshPanelTest
paragraphHistory	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public int paragraphHistory = 50;$/;"	f	class:UITextList
parameter	Assets/Addons/NGUI/Scripts/Internal/UIEventListener.cs	/^	public object parameter;$/;"	f	class:UIEventListener
parameters	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public Parameter[] parameters$/;"	p	class:EventDelegate
parent	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public UIRect parent$/;"	p	class:UIRect
parentPanel	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public UIPanel parentPanel { get { return mParentPanel; } }$/;"	p	class:UIPanel
parentWhenFinished	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	public bool parentWhenFinished = false;$/;"	f	class:TweenTransform
parseArray	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static ArrayList parseArray( char[] json, ref int index )$/;"	m	class:NGUIJson
parseNumber	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static double parseNumber( char[] json, ref int index )$/;"	m	class:NGUIJson
parseObject	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static Hashtable parseObject( char[] json, ref int index )$/;"	m	class:NGUIJson
parseString	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static string parseString( char[] json, ref int index )$/;"	m	class:NGUIJson
parseValue	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static object parseValue( char[] json, ref int index, ref bool success )$/;"	m	class:NGUIJson
partialSprite	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public string partialSprite$/;"	p	class:NGUISettings
path	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^		public string path;$/;"	f	class:NGUISelectionTools.AssetEntry
pathToFreeType	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public string pathToFreeType$/;"	p	class:NGUISettings
pitch	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int pitch;$/;"	f	struct:FreeType.FT_Bitmap
pitch	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	[Range(0f, 2f)] public float pitch = 1f;$/;"	f	class:UIPlaySound
pitch	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	public float pitch = 1f;$/;"	f	class:UIPlaySound
pivot	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public UIWidget.Pivot pivot$/;"	p	class:NGUISettings
pivot	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	public UIWidget.Pivot pivot = UIWidget.Pivot.BottomRight;$/;"	f	class:UIDragResize
pivot	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public UIWidget.Pivot pivot = UIWidget.Pivot.TopLeft;$/;"	f	class:UIGrid
pivot	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public Pivot pivot$/;"	p	class:UIWidget
pivotOffset	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public Vector2 pivotOffset { get { return NGUIMath.GetPivotOffset(pivot); } }$/;"	p	class:UIWidget
pivotPoints	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static public UIWidget.Pivot[] pivotPoints =$/;"	f	class:UIWidgetInspector
pixPerfect	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	static void pixPerfect()$/;"	m	class:retinaProNGTools	file:
pixPerfect2	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	static void pixPerfect2()$/;"	m	class:retinaProNGTools	file:
pixelDensity	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public float pixelDensity = 1f;$/;"	f	class:NGUIText
pixelOffset	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	public Vector2 pixelOffset = Vector2.zero;$/;"	f	class:UIAnchor
pixelSize	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public float pixelSize$/;"	p	class:UIAtlas
pixelSize	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public float pixelSize$/;"	p	class:retinaProDevice
pixelSize	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public float 							pixelSize;$/;"	f	class:retinaProRuntimeDevice
pixelSizeAdjustment	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public float pixelSizeAdjustment { get { return GetPixelSizeAdjustment(Screen.height); } }$/;"	p	class:UIRoot
pixelSnap	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	public bool pixelSnap = false;$/;"	f	class:UIButton
pixelSnap	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	public bool pixelSnap = true;$/;"	f	class:UIImageButton
pixel_mode	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public sbyte pixel_mode;$/;"	f	struct:FreeType.FT_Bitmap
placeSound	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemSlot.cs	/^	public AudioClip placeSound;$/;"	f	class:UIItemSlot
playDirection	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public Direction playDirection = Direction.Forward;$/;"	f	class:UIPlayAnimation
playDirection	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public Direction playDirection = Direction.Forward;$/;"	f	class:UIPlayTween
playbackTime	Assets/Addons/NGUI/Scripts/Internal/ActiveAnimation.cs	/^	float playbackTime$/;"	p	class:ActiveAnimation
points	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr points;$/;"	f	struct:FreeType.FT_Outline
pos	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public Vector2 pos;				\/\/ Current position of the mouse or touch event$/;"	f	class:UICamera.MouseOrTouch
position	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public Position position = Position.Auto;$/;"	f	class:UIPopupList
position	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	public Vector3 position { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenPosition
prefab	Assets/Addons/NGUI/Examples/Scripts/Other/ExampleDragDropItem.cs	/^	public GameObject prefab;$/;"	f	class:ExampleDragDropItem
premultipliedAlpha	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public bool premultipliedAlpha$/;"	p	class:UI2DSprite
premultipliedAlpha	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public bool premultipliedAlpha$/;"	p	class:UIAtlas
premultipliedAlpha	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	public bool premultipliedAlpha$/;"	p	class:UITexture
premultipliedAlphaShader	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public bool premultipliedAlphaShader$/;"	p	class:UIFont
premultiply	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public bool premultiply = false;$/;"	f	class:NGUIText
pressStarted	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public bool pressStarted = false;$/;"	f	class:UICamera.MouseOrTouch
pressed	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	public Color pressed = new Color(183f \/ 255f, 163f \/ 255f, 123f \/ 255f, 1f);$/;"	f	class:UIButtonColor
pressed	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	public Vector3 pressed = new Vector3(2f, -2f);$/;"	f	class:UIButtonOffset
pressed	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	public Vector3 pressed = Vector3.zero;$/;"	f	class:UIButtonRotation
pressed	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	public Vector3 pressed = new Vector3(1.05f, 1.05f, 1.05f);$/;"	f	class:UIButtonScale
pressed	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public GameObject pressed;		\/\/ Last game object to receive OnPress$/;"	f	class:UICamera.MouseOrTouch
pressedCam	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public Camera pressedCam;		\/\/ Camera that the OnPress(true) was fired with$/;"	f	class:UICamera.MouseOrTouch
pressedSprite	Assets/Addons/NGUI/Scripts/Interaction/UIButton.cs	/^	public string pressedSprite;$/;"	f	class:UIButton
pressedSprite	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	public string pressedSprite;$/;"	f	class:UIImageButton
previousSelection	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static public GameObject previousSelection { get { return mPrevious; } }$/;"	p	class:NGUIEditorTools
printedSize	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Vector2 printedSize$/;"	p	class:UILabel
processedText	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public string processedText$/;"	p	class:UILabel
progressPeriod	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	float 					progressPeriod;$/;"	f	class:retinaProAtlasWindow	file:
progressPortion	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	float 					progressPortion;$/;"	f	class:retinaProAtlasWindow	file:
progressString	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	string 					progressString;$/;"	f	class:retinaProAtlasWindow	file:
propInfo	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		[System.NonSerialized] public PropertyInfo propInfo;$/;"	f	class:EventDelegate.Parameter
quality	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public Quality quality = Quality.Sturdy;$/;"	f	class:InvGameItem
range	Assets/Addons/NGUI/Examples/Scripts/Other/PanWithMouse.cs	/^	public float range = 1f;$/;"	f	class:PanWithMouse
rangeDistance	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public float rangeDistance = -1f;$/;"	f	class:UICamera
rawPivot	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public Pivot rawPivot$/;"	p	class:UIWidget
rawValue	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	[HideInInspector][SerializeField] float rawValue = 1f; \/\/ Use 'value'$/;"	f	class:UISlider	file:
raycastDepth	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public int raycastDepth$/;"	p	class:UIWidget
rect	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^		public Rect rect;$/;"	f	struct:UITexturePacker.Storage
rect	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public UIRect rect;$/;"	f	class:UIRect.AnchorPoint
rectHeight	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public int rectHeight = 1000000;$/;"	f	class:NGUIText
rectWidth	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public int rectWidth = 1000000;$/;"	f	class:NGUIText
refresh	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	public static void refresh()$/;"	m	class:retinaProNGTools
refreshActiveDevice	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public void refreshActiveDevice()$/;"	m	class:retinaProAtlasController
refreshAll	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public void refreshAll()$/;"	m	class:retinaProAtlasController
refreshAllWidgetsPixelPerfect	Assets/Addons/RetinaPro/retinaProUtil.cs	/^	public void refreshAllWidgetsPixelPerfect(GameObject go)$/;"	m	class:retinaProUtil
refreshColliders	Assets/Addons/RetinaPro/retinaProUtil.cs	/^	IEnumerator refreshColliders(GameObject go)$/;"	m	class:retinaProUtil	file:
refreshOrientation	Assets/Addons/RetinaPro/Example/refreshPanelTest.cs	/^	void refreshOrientation()$/;"	m	class:refreshPanelTest	file:
refreshPanelTest	Assets/Addons/RetinaPro/Example/refreshPanelTest.cs	/^public class refreshPanelTest : MonoBehaviour {$/;"	c
refreshProgressPeriod	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	void refreshProgressPeriod()$/;"	m	class:retinaProAtlasWindow	file:
refreshReferencesForDevice	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	public static void refreshReferencesForDevice(retinaProDevice deviceItem, int screenIndex, int gameViewOrientation)$/;"	m	class:retinaProNGTools
refreshVisible	Assets/Addons/RetinaPro/retinaProUtil.cs	/^	public void refreshVisible(GameObject go)$/;"	m	class:retinaProUtil
refreshWidgetPixelPerfect	Assets/Addons/RetinaPro/retinaProUtil.cs	/^	public static void refreshWidgetPixelPerfect(GameObject go)$/;"	m	class:retinaProUtil
relative	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public float relative = 0f;$/;"	f	class:UIRect.AnchorPoint
relativeOffset	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	public Vector2 relativeOffset = Vector2.zero;$/;"	f	class:UIAnchor
relativePositionOnReset	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	[SerializeField][HideInInspector] Vector2 relativePositionOnReset = Vector2.zero;$/;"	f	class:UIScrollView	file:
relativeSize	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public Vector2 relativeSize { get { return Vector2.one; } }$/;"	p	class:UIWidget
relativeSize	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	public Vector2 relativeSize = Vector2.one;$/;"	f	class:UIStretch
renderQueue	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public int renderQueue$/;"	p	class:UIDrawCall
renderQueue	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public RenderQueue renderQueue = RenderQueue.Automatic;$/;"	f	class:UIPanel
reparentTarget	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropContainer.cs	/^	public Transform reparentTarget;$/;"	f	class:UIDragDropContainer
replacement	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public UIAtlas replacement$/;"	p	class:UIAtlas
replacement	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public UIFont replacement$/;"	p	class:UIFont
repositionNow	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public bool repositionNow { set { if (value) { mReposition = true; enabled = true; } } }$/;"	p	class:UIGrid
repositionNow	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public bool repositionNow { set { if (value) { mReposition = true; enabled = true; } } }$/;"	p	class:UITable
reserved	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public uint reserved;$/;"	f	struct:FreeType.FT_GlyphSlotRec
resetIfDisabled	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public bool resetIfDisabled = false;$/;"	f	class:UIPlayTween
resetOnPlay	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public bool resetOnPlay = false;$/;"	f	class:UIPlayAnimation
resetOnPlay	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public bool resetOnPlay = false;$/;"	f	class:UIPlayTween
restrictWithinPanel	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public bool restrictWithinPanel = false;$/;"	f	class:UIDragObject
restrictWithinPanel	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public bool restrictWithinPanel = true;$/;"	f	class:UIScrollView
restriction	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropItem.cs	/^	public Restriction restriction = Restriction.None;$/;"	f	class:UIDragDropItem
retinaProAtlas	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^	public retinaProAtlas()$/;"	m	class:retinaProAtlas
retinaProAtlas	Assets/Addons/RetinaPro/Editor/retinaProAtlas.cs	/^public class retinaProAtlas$/;"	c
retinaProAtlasController	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^public class retinaProAtlasController : MonoBehaviour {$/;"	c
retinaProAtlasWindow	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^public class retinaProAtlasWindow : EditorWindow {$/;"	c
retinaProButtonActivate	Assets/Addons/RetinaPro/retinaProButtonActivate.cs	/^public class retinaProButtonActivate : MonoBehaviour {$/;"	c
retinaProConfig	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^public static class retinaProConfig$/;"	c
retinaProDatFile	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public const string retinaProDatFile = "RetinaProData.txt";$/;"	f	class:retinaProConfig
retinaProDatFolder	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public const string retinaProDatFolder = "\/RetinaPro\/Resources";$/;"	f	class:retinaProConfig
retinaProDataRuntime	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public retinaProDataRuntime()$/;"	m	class:retinaProDataRuntime
retinaProDataRuntime	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^public class retinaProDataRuntime$/;"	c
retinaProDataSerialize	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public retinaProDataSerialize()$/;"	m	class:retinaProDataSerialize
retinaProDataSerialize	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^public class retinaProDataSerialize$/;"	c
retinaProDevice	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^	public retinaProDevice()$/;"	m	class:retinaProDevice
retinaProDevice	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^public class retinaProDevice$/;"	c
retinaProDeviceWindow	Assets/Addons/RetinaPro/Editor/retinaProDeviceWindow.cs	/^public class retinaProDeviceWindow : EditorWindow {$/;"	c
retinaProFileLock	Assets/Addons/RetinaPro/retinaProFileLock.cs	/^public class retinaProFileLock {$/;"	c
retinaProIgnoreUIRoot	Assets/Addons/RetinaPro/retinaProIgnoreUIRoot.cs	/^public class retinaProIgnoreUIRoot : MonoBehaviour {$/;"	c
retinaProNGTools	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^public class retinaProNGTools : ScriptableObject {$/;"	c
retinaProParent	Assets/Addons/RetinaPro/retinaProParent.cs	/^public class retinaProParent : MonoBehaviour {$/;"	c
retinaProPreviewWindow	Assets/Addons/RetinaPro/Editor/retinaProPreviewWindow.cs	/^public class retinaProPreviewWindow : EditorWindow {$/;"	c
retinaProRuntimeAtlas	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^public class retinaProRuntimeAtlas $/;"	c
retinaProRuntimeDevice	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public retinaProRuntimeDevice()$/;"	m	class:retinaProRuntimeDevice
retinaProRuntimeDevice	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^public class retinaProRuntimeDevice $/;"	c
retinaProRuntimeScreen	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^public class retinaProRuntimeScreen$/;"	c
retinaProScreen	Assets/Addons/RetinaPro/Editor/retinaProScreen.cs	/^	public retinaProScreen()$/;"	m	class:retinaProScreen
retinaProScreen	Assets/Addons/RetinaPro/Editor/retinaProScreen.cs	/^public class retinaProScreen$/;"	c
retinaProState	Assets/Addons/RetinaPro/Editor/retinaProState.cs	/^public class retinaProState$/;"	c
retinaProUtil	Assets/Addons/RetinaPro/retinaProUtil.cs	/^public class retinaProUtil : MonoBehaviour {$/;"	c
rightAnchor	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public AnchorPoint rightAnchor = new AnchorPoint(1f);$/;"	f	class:UIRect
rightType	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public AdvancedType rightType = AdvancedType.Sliced;$/;"	f	class:UISprite
root	Assets/Addons/NGUI/Scripts/Interaction/UIDragDropRoot.cs	/^	static public Transform root;$/;"	f	class:UIDragDropRoot
root	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public UIRoot root$/;"	p	class:UIRect
rootAuto	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public bool rootAuto$/;"	p	class:retinaProDevice
rootAuto	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public bool 							rootAuto;$/;"	f	class:retinaProRuntimeDevice
rootForBounds	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public Transform rootForBounds;$/;"	f	class:UIDraggableCamera
rootHeight	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public int rootHeight$/;"	p	class:retinaProDevice
rootHeight	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public int								rootHeight;$/;"	f	class:retinaProRuntimeDevice
rootUseBothPortLand	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public bool rootUseBothPortLand$/;"	p	class:retinaProDevice
rootUseBothPortLand	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public bool 							rootUseBothPortLand;$/;"	f	class:retinaProRuntimeDevice
rootWidth	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public int rootWidth$/;"	p	class:retinaProDevice
rootWidth	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public int 								rootWidth;$/;"	f	class:retinaProRuntimeDevice
rotatePlacedObject	Assets/Addons/NGUI/Examples/Scripts/Other/ExampleDragDropSurface.cs	/^	public bool rotatePlacedObject = false;$/;"	f	class:ExampleDragDropSurface
rotated	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^		public bool rotated = false;$/;"	f	class:UIAtlas.Sprite
rotatedUVs	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		public bool rotatedUVs = false;$/;"	f	class:NGUIText.GlyphInfo
rotation	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	public Quaternion rotation { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenRotation
rotationsPerSecond	Assets/Addons/NGUI/Examples/Scripts/Other/Spin.cs	/^	public Vector3 rotationsPerSecond = new Vector3(0f, 0.1f, 0f);$/;"	f	class:Spin
rows	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int rows;$/;"	f	struct:FreeType.FT_Bitmap
rpState	Assets/Addons/RetinaPro/Editor/retinaProState.cs	/^	public enum rpState$/;"	g	class:retinaProState
rsb_delta	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int rsb_delta;$/;"	f	struct:FreeType.FT_GlyphSlotRec
rt	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	retinaProDataRuntime		rt;$/;"	f	class:retinaProAtlasController	file:
runOnlyOnce	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	public bool runOnlyOnce = true;$/;"	f	class:UIAnchor
runOnlyOnce	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	public bool runOnlyOnce = true;$/;"	f	class:UIStretch
s_GetInstanceIDFromGUID	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^	static MethodInfo s_GetInstanceIDFromGUID;$/;"	f	class:NGUIEditorTools	file:
s_GetSizeOfMainGameView	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	static System.Reflection.MethodInfo s_GetSizeOfMainGameView;$/;"	f	class:UIPanel	file:
s_Hash	Assets/Addons/NGUI/Scripts/Editor/UIPanelInspector.cs	/^	static int s_Hash = "PanelHash".GetHashCode();$/;"	f	class:UIPanelInspector	file:
s_Hash	Assets/Addons/NGUI/Scripts/Editor/UIWidgetInspector.cs	/^	static int s_Hash = "WidgetHash".GetHashCode();$/;"	f	class:UIWidgetInspector	file:
s_Hash	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	static int s_Hash = "EventDelegate".GetHashCode();$/;"	f	class:EventDelegate	file:
s_Hash	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	static int s_Hash = "PropertyBinding".GetHashCode();$/;"	f	class:PropertyReference	file:
s_c0	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static Color32 s_c0, s_c1;$/;"	f	class:NGUIText	file:
s_c1	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static Color32 s_c0, s_c1;$/;"	f	class:NGUIText	file:
saveSettings	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public void saveSettings()$/;"	m	class:retinaProDataSerialize
saveSettingsWithoutLock	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	void saveSettingsWithoutLock()$/;"	m	class:retinaProDataSerialize	file:
savedAs	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public string savedAs;$/;"	f	class:UIInput
scale	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	[SerializeField] protected Vector3 scale = new Vector3(1f, 1f, 0f);$/;"	f	class:UIDragObject
scale	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public Vector2 scale = Vector2.one;$/;"	f	class:UIDraggableCamera
scale	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	[HideInInspector][SerializeField] Vector3 scale = new Vector3(1f, 0f, 0f);$/;"	f	class:UIScrollView	file:
scale	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	public Vector3 scale { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenScale
scalingStyle	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public Scaling scalingStyle = Scaling.PixelPerfect;$/;"	f	class:UIRoot
scalingTransitions	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	public bool scalingTransitions = true;$/;"	f	class:UITooltip
screenHeight	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public int screenHeight$/;"	p	class:retinaProDevice
screenWidth	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public int screenWidth$/;"	p	class:retinaProDevice
screens	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public List<retinaProScreen> screens$/;"	p	class:retinaProDevice
screens	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public List<retinaProRuntimeScreen>		screens;$/;"	f	class:retinaProRuntimeDevice
scrollAxisName	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public string scrollAxisName = "Mouse ScrollWheel";$/;"	f	class:UICamera
scrollBar	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public UIProgressBar scrollBar;$/;"	f	class:UITextList
scrollHeight	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	protected int scrollHeight$/;"	p	class:UITextList
scrollMomentum	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public Vector3 scrollMomentum = Vector3.zero;$/;"	f	class:UIDragObject
scrollValue	Assets/Addons/NGUI/Scripts/Interaction/UIScrollBar.cs	/^	public float scrollValue { get { return this.value; } set { this.value = value; } }$/;"	p	class:UIScrollBar
scrollValue	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public float scrollValue$/;"	p	class:UITextList
scrollView	Assets/Addons/NGUI/Scripts/Interaction/UIDragScrollView.cs	/^	public UIScrollView scrollView;$/;"	f	class:UIDragScrollView
scrollWheelFactor	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	[SerializeField][HideInInspector] float scrollWheelFactor = 0f;$/;"	f	class:UIDragObject	file:
scrollWheelFactor	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public float scrollWheelFactor = 0f;$/;"	f	class:UIDraggableCamera
scrollWheelFactor	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public float scrollWheelFactor = 0.25f;$/;"	f	class:UIScrollView
selectOnClick	Assets/Addons/NGUI/Scripts/Interaction/UIButtonKeys.cs	/^	public UIButtonKeys selectOnClick;$/;"	f	class:UIButtonKeys
selectOnDown	Assets/Addons/NGUI/Scripts/Interaction/UIButtonKeys.cs	/^	public UIButtonKeys selectOnDown;$/;"	f	class:UIButtonKeys
selectOnLeft	Assets/Addons/NGUI/Scripts/Interaction/UIButtonKeys.cs	/^	public UIButtonKeys selectOnLeft;$/;"	f	class:UIButtonKeys
selectOnRight	Assets/Addons/NGUI/Scripts/Interaction/UIButtonKeys.cs	/^	public UIButtonKeys selectOnRight;$/;"	f	class:UIButtonKeys
selectOnTab	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public GameObject selectOnTab;$/;"	f	class:UIInput
selectOnUp	Assets/Addons/NGUI/Scripts/Interaction/UIButtonKeys.cs	/^	public UIButtonKeys selectOnUp;$/;"	f	class:UIButtonKeys
selected	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public bool selected { get { return isSelected; } set { isSelected = value; } }$/;"	p	class:UIInput
selectedObject	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public GameObject selectedObject$/;"	p	class:UICamera
selectedSprite	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public string selectedSprite$/;"	p	class:NGUISettings
selection	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public string selection { get { return value; } set { this.value = value; } }$/;"	p	class:UIPopupList
selection	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	static public UIInput selection;$/;"	f	class:UIInput
selectionColor	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public Color selectionColor = new Color(1f, 223f \/ 255f, 141f \/ 255f, 0.5f);$/;"	f	class:UIInput
selectionEnd	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public int selectionEnd { get { return value.Length; } set {} }$/;"	p	class:UIInput
selectionEnd	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public int selectionEnd$/;"	p	class:UIInput
selectionStart	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public int selectionStart { get { return value.Length; } set {} }$/;"	p	class:UIInput
selectionStart	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public int selectionStart$/;"	p	class:UIInput
sequence	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public string sequence;$/;"	f	class:BMSymbol
serializeArray	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static bool serializeArray( ArrayList anArray, StringBuilder builder )$/;"	m	class:NGUIJson
serializeDictionary	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static bool serializeDictionary( Dictionary<string,string> dict, StringBuilder builder )$/;"	m	class:NGUIJson
serializeNumber	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static void serializeNumber( double number, StringBuilder builder )$/;"	m	class:NGUIJson
serializeObject	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static bool serializeObject( Hashtable anObject, StringBuilder builder )$/;"	m	class:NGUIJson
serializeObjectOrArray	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static bool serializeObjectOrArray( object objectOrArray, StringBuilder builder )$/;"	m	class:NGUIJson
serializeString	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static void serializeString( string aString, StringBuilder builder )$/;"	m	class:NGUIJson
serializeValue	Assets/Addons/NGUI/Scripts/Editor/NGUIJson.cs	/^	protected static bool serializeValue( object value, StringBuilder builder )$/;"	m	class:NGUIJson
setPreviewDeviceIdx	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public int setPreviewDeviceIdx(int idx)$/;"	m	class:retinaProDataSerialize
setPreviewGameViewIdx	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public int setPreviewGameViewIdx(int idx)$/;"	m	class:retinaProDataSerialize
setPreviewScreenIdx	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public int setPreviewScreenIdx(int idx)$/;"	m	class:retinaProDataSerialize
setRootManualHeight	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	public static void setRootManualHeight(int manualHeight)$/;"	m	class:retinaProNGTools
setUtilityRefreshSourceTextures	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public void setUtilityRefreshSourceTextures(bool refresh)$/;"	m	class:retinaProDataSerialize
shader	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public Shader shader$/;"	p	class:UIDrawCall
shader	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public virtual Shader shader$/;"	p	class:UIWidget
shader	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public override Shader shader$/;"	p	class:UI2DSprite
shader	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	public override Shader shader$/;"	p	class:UITexture
sharedInstance	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	public static retinaProDataSerialize sharedInstance$/;"	p	class:retinaProDataSerialize
sharedInstance	Assets/Addons/RetinaPro/retinaProAtlasController.cs	/^	public static retinaProAtlasController sharedInstance;$/;"	f	class:retinaProAtlasController
sharedInstance	Assets/Addons/RetinaPro/retinaProUtil.cs	/^	public static 				retinaProUtil 		sharedInstance = null;$/;"	f	class:retinaProUtil
shouldBeProcessed	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	bool shouldBeProcessed$/;"	p	class:UILabel
shouldMove	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	protected virtual bool shouldMove$/;"	p	class:UIScrollView
shouldMoveHorizontally	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public virtual bool shouldMoveHorizontally$/;"	p	class:UIScrollView
shouldMoveVertically	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public virtual bool shouldMoveVertically$/;"	p	class:UIScrollView
showAllDCs	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public bool showAllDCs$/;"	p	class:NGUISettings
showAtlasUI	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	void showAtlasUI()$/;"	m	class:retinaProAtlasWindow	file:
showDeviceUI	Assets/Addons/RetinaPro/Editor/retinaProDeviceWindow.cs	/^	void showDeviceUI()$/;"	m	class:retinaProDeviceWindow	file:
showEditorPreviewUI	Assets/Addons/RetinaPro/Editor/retinaProPreviewWindow.cs	/^	void showEditorPreviewUI()$/;"	m	class:retinaProPreviewWindow	file:
showFilesUI	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	bool showFilesUI(ref retinaProAtlas atlasItem)$/;"	m	class:retinaProAtlasWindow	file:
showFoldersUI	Assets/Addons/RetinaPro/Editor/retinaProAtlasWindow.cs	/^	bool showFoldersUI(ref retinaProAtlas atlasItem)$/;"	m	class:retinaProAtlasWindow	file:
showHandles	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	static public bool showHandles$/;"	p	class:UIWidget
showHandlesWithMoveTool	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	static public bool showHandlesWithMoveTool$/;"	p	class:UIWidget
showInPanelTool	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool showInPanelTool = true;$/;"	f	class:UIPanel
showScrollBars	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public ShowCondition showScrollBars = ShowCondition.OnlyIfNeeded;$/;"	f	class:UIScrollView
showSetupUI	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public static void showSetupUI()$/;"	m	class:retinaProConfig
showTooltips	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public bool showTooltips = true;$/;"	f	class:UICamera
showValidDeviceNeededUI	Assets/Addons/RetinaPro/Editor/retinaProConfig.cs	/^	public static void showValidDeviceNeededUI()$/;"	m	class:retinaProConfig
shrinkPortraitUI	Assets/Addons/NGUI/Scripts/UI/UIRoot.cs	/^	public bool shrinkPortraitUI = false;$/;"	f	class:UIRoot
shrinkToFit	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public bool shrinkToFit$/;"	p	class:UILabel
side	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	public Side side = Side.Center;$/;"	f	class:UIAnchor
size	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr size;$/;"	f	struct:FreeType.FT_FaceRec
size	Assets/Addons/NGUI/Scripts/Internal/BetterList.cs	/^	public int size { get { return mList.Count; } }$/;"	p	class:BetterList
size	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public int size$/;"	p	class:UIFont
sizes_list	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public FT_ListRec sizes_list;$/;"	f	struct:FreeType.FT_FaceRec
sliderValue	Assets/Addons/NGUI/Scripts/Interaction/UISlider.cs	/^	public float sliderValue { get { return this.value; } set { this.value = value; } }$/;"	p	class:UISlider
slot	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIEquipmentSlot.cs	/^	public InvBaseItem.Slot slot;$/;"	f	class:UIEquipmentSlot
slot	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIStorageSlot.cs	/^	public int slot = 0;$/;"	f	class:UIStorageSlot
slot	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvAttachmentPoint.cs	/^	public InvBaseItem.Slot slot;$/;"	f	class:InvAttachmentPoint
slot	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public Slot slot = Slot.None;$/;"	f	class:InvBaseItem
smoothDragStart	Assets/Addons/NGUI/Scripts/Interaction/UIDraggableCamera.cs	/^	public bool smoothDragStart = true;$/;"	f	class:UIDraggableCamera
smoothDragStart	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public bool smoothDragStart = true;$/;"	f	class:UIScrollView
sorted	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	[HideInInspector][SerializeField] bool sorted = false;$/;"	f	class:UIGrid	file:
sorted	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	[HideInInspector][SerializeField] bool sorted = false;$/;"	f	class:UITable	file:
sorting	Assets/Addons/NGUI/Scripts/Interaction/UIGrid.cs	/^	public Sorting sorting = Sorting.None;$/;"	f	class:UIGrid
sorting	Assets/Addons/NGUI/Scripts/Interaction/UITable.cs	/^	public Sorting sorting = Sorting.None;$/;"	f	class:UITable
sortingOrder	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public int sortingOrder$/;"	p	class:UIDrawCall
sortingOrder	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public int sortingOrder$/;"	p	class:UIPanel
soundVolume	Assets/Addons/NGUI/Scripts/Internal/NGUITools.cs	/^	static public float soundVolume$/;"	p	class:NGUITools
source	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	public PropertyReference source;$/;"	f	class:PropertyBinding
sourceCamera	Assets/Addons/NGUI/Scripts/UI/UIViewport.cs	/^	public Camera sourceCamera;$/;"	f	class:UIViewport
spacing	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public int spacing = 128;$/;"	f	class:UIItemStorage
spacingX	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public float spacingX = 0f;$/;"	f	class:NGUIText
spacingX	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int spacingX$/;"	p	class:UILabel
spacingY	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public float spacingY = 0f;$/;"	f	class:NGUIText
spacingY	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public int spacingY$/;"	p	class:UILabel
speed	Assets/Addons/NGUI/Examples/Scripts/Other/LagPosition.cs	/^	public Vector3 speed = new Vector3(10f, 10f, 10f);$/;"	f	class:LagPosition
speed	Assets/Addons/NGUI/Examples/Scripts/Other/LagRotation.cs	/^	public float speed = 10f;$/;"	f	class:LagRotation
speed	Assets/Addons/NGUI/Examples/Scripts/Other/LookAtTarget.cs	/^	public float speed = 8f;$/;"	f	class:LookAtTarget
speed	Assets/Addons/NGUI/Examples/Scripts/Other/SpinWithMouse.cs	/^	public float speed = 1f;$/;"	f	class:SpinWithMouse
springStrength	Assets/Addons/NGUI/Scripts/Interaction/UICenterOnChild.cs	/^	public float springStrength = 8f;$/;"	f	class:UICenterOnChild
sprite	Assets/Addons/NGUI/Examples/Scripts/Other/UISliderColors.cs	/^	public UISprite sprite;$/;"	f	class:UISliderColors
sprite	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public UISpriteData sprite$/;"	p	class:UIFont
sprite2D	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public Sprite sprite2D$/;"	p	class:NGUISettings
sprite2D	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public UnityEngine.Sprite sprite2D$/;"	p	class:UI2DSprite
spriteList	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public List<UISpriteData> spriteList$/;"	p	class:UIAtlas
spriteMaterial	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public Material spriteMaterial$/;"	p	class:UIAtlas
spriteName	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public string spriteName { get { return mSpriteName; } set { mSpriteName = value; } }$/;"	p	class:BMFont
spriteName	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public string spriteName;$/;"	f	class:BMSymbol
spriteName	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public string spriteName$/;"	p	class:UIFont
spriteName	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public string spriteName$/;"	p	class:UISprite
sprites	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	[HideInInspector][SerializeField] List<Sprite> sprites = new List<Sprite>();$/;"	f	class:UIAtlas	file:
startingLanguage	Assets/Addons/NGUI/Scripts/Internal/Localization.cs	/^	[HideInInspector] public string startingLanguage = "English";$/;"	f	class:Localization
startingRenderQueue	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public int startingRenderQueue = 3000;$/;"	f	class:UIPanel
startsActive	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	public bool startsActive = false;$/;"	f	class:UIToggle
startsChecked	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	[HideInInspector][SerializeField] bool startsChecked = false; \/\/ Use 'startsActive' instead$/;"	f	class:UIToggle	file:
startsSelected	Assets/Addons/NGUI/Scripts/Interaction/UIKeyNavigation.cs	/^	public bool startsSelected = false;$/;"	f	class:UIKeyNavigation
statMultiplier	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvGameItem.cs	/^	public float statMultiplier$/;"	p	class:InvGameItem
state	Assets/Addons/NGUI/Scripts/Interaction/UIButtonActivate.cs	/^    public bool state = true;$/;"	f	class:UIButtonActivate
state	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	public State state { get { return mState; } set { SetState(value, false); } }$/;"	p	class:UIButtonColor
state	Assets/Addons/RetinaPro/Editor/retinaProState.cs	/^	public static rpState			state;$/;"	f	class:retinaProState
state	Assets/Addons/RetinaPro/retinaProButtonActivate.cs	/^	public bool state = true;$/;"	f	class:retinaProButtonActivate
stats	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/System/InvBaseItem.cs	/^	public List<InvStat> stats = new List<InvStat>();$/;"	f	class:InvBaseItem
steeperCurves	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public bool steeperCurves = false;$/;"	f	class:UITweener
stickyPress	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public bool stickyPress { get { return true; } }$/;"	p	class:UICamera
stickyTooltip	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public bool stickyTooltip = true;$/;"	f	class:UICamera
storage	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIStorageSlot.cs	/^	public UIItemStorage storage;$/;"	f	class:UIStorageSlot
stream	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr stream;$/;"	f	struct:FreeType.FT_FaceRec
strength	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	public float strength = 10f;$/;"	f	class:SpringPanel
strength	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	public float strength = 10f;$/;"	f	class:SpringPosition
style	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public Style style = Style.Once;$/;"	f	class:UITweener
style	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	public Style style = Style.None;$/;"	f	class:UIStretch
style	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public Style style = Style.Text;$/;"	f	class:UITextList
style_flags	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int style_flags;$/;"	f	struct:FreeType.FT_FaceRec
style_name	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr style_name;$/;"	f	struct:FreeType.FT_FaceRec
subglyphs	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr subglyphs;$/;"	f	struct:FreeType.FT_GlyphSlotRec
submitKey0	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public KeyCode submitKey0 = KeyCode.Return;$/;"	f	class:UICamera
submitKey1	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public KeyCode submitKey1 = KeyCode.JoystickButton0;$/;"	f	class:UICamera
supportEncoding	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public bool supportEncoding$/;"	p	class:UILabel
symbolStyle	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public SymbolStyle symbolStyle;$/;"	f	class:NGUIText
symbolStyle	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public NGUIText.SymbolStyle symbolStyle$/;"	p	class:UILabel
symbols	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public List<BMSymbol> symbols { get { return (mReplacement != null) ? mReplacement.symbols : mSymbols; } }$/;"	p	class:UIFont
tags	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr tags;$/;"	f	struct:FreeType.FT_Outline
tail	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public IntPtr tail;$/;"	f	struct:FreeType.FT_ListRec
tans	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public BetterList<Vector4> tans = new BetterList<Vector4>();$/;"	f	class:UIDrawCall
target	Assets/Addons/NGUI/Examples/Scripts/Other/LookAtTarget.cs	/^	public Transform target;$/;"	f	class:LookAtTarget
target	Assets/Addons/NGUI/Examples/Scripts/Other/SpinWithMouse.cs	/^	public Transform target;$/;"	f	class:SpinWithMouse
target	Assets/Addons/NGUI/Scripts/Editor/PropertyReferenceDrawer.cs	/^		public Component target;$/;"	f	class:PropertyReferenceDrawer.Entry
target	Assets/Addons/NGUI/Scripts/Interaction/UIButtonActivate.cs	/^    public GameObject target;$/;"	f	class:UIButtonActivate
target	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	public GameObject target;$/;"	f	class:UIButtonMessage
target	Assets/Addons/NGUI/Scripts/Interaction/UIDragObject.cs	/^	public Transform target;$/;"	f	class:UIDragObject
target	Assets/Addons/NGUI/Scripts/Interaction/UIDragResize.cs	/^	public UIWidget target;$/;"	f	class:UIDragResize
target	Assets/Addons/NGUI/Scripts/Interaction/UIForwardEvents.cs	/^	public GameObject target;$/;"	f	class:UIForwardEvents
target	Assets/Addons/NGUI/Scripts/Interaction/UIImageButton.cs	/^	public UISprite target;$/;"	f	class:UIImageButton
target	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public Animation target;$/;"	f	class:UIPlayAnimation
target	Assets/Addons/NGUI/Scripts/Interaction/UIToggledComponents.cs	/^	[HideInInspector][SerializeField] MonoBehaviour target;$/;"	f	class:UIToggledComponents	file:
target	Assets/Addons/NGUI/Scripts/Interaction/UIToggledObjects.cs	/^	[HideInInspector][SerializeField] GameObject target;$/;"	f	class:UIToggledObjects	file:
target	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^	public MonoBehaviour target$/;"	p	class:EventDelegate
target	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	public PropertyReference target;$/;"	f	class:PropertyBinding
target	Assets/Addons/NGUI/Scripts/Internal/PropertyReference.cs	/^	public Component target$/;"	p	class:PropertyReference
target	Assets/Addons/NGUI/Scripts/Internal/SpringPanel.cs	/^	public Vector3 target = Vector3.zero;$/;"	f	class:SpringPanel
target	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public Transform target;$/;"	f	class:UIRect.AnchorPoint
target	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	public Vector3 target = Vector3.zero;$/;"	f	class:SpringPosition
target	Assets/Addons/RetinaPro/retinaProButtonActivate.cs	/^	public GameObject target;$/;"	f	class:retinaProButtonActivate
targetCam	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^		public Camera targetCam;$/;"	f	class:UIRect.AnchorPoint
targetRoot	Assets/Addons/NGUI/Examples/Scripts/Other/EnvelopContent.cs	/^	public Transform targetRoot;$/;"	f	class:EnvelopContent
template	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UIItemStorage.cs	/^	public GameObject template;$/;"	f	class:UIItemStorage
temporaryTexture	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^		public bool temporaryTexture = false;$/;"	f	class:UIAtlasMaker.SpriteEntry
tex	Assets/Addons/NGUI/Scripts/Editor/UIAtlasMaker.cs	/^		public Texture2D tex;$/;"	f	class:UIAtlasMaker.SpriteEntry
texHeight	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public int texHeight { get { return mHeight; } set { mHeight = value; } }$/;"	p	class:BMFont
texHeight	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public int texHeight$/;"	p	class:UIFont
texWidth	Assets/Addons/NGUI/Scripts/Internal/BMFont.cs	/^	public int texWidth { get { return mWidth; } set { mWidth = value; } }$/;"	p	class:BMFont
texWidth	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public int texWidth$/;"	p	class:UIFont
text	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public string text { get { return this.value; } set { this.value = value; } }$/;"	p	class:UIInput
text	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public string text$/;"	p	class:UILabel
text	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^		public string text;		\/\/ Original text$/;"	f	class:UITextList.Paragraph
text	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	public UILabel text;$/;"	f	class:UITooltip
textColor	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public Color textColor = Color.white;$/;"	f	class:UIPopupList
textLabel	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	[HideInInspector][SerializeField] UILabel textLabel;$/;"	f	class:UIPopupList	file:
textLabel	Assets/Addons/NGUI/Scripts/UI/UITextList.cs	/^	public UILabel textLabel;$/;"	f	class:UITextList
textList	Assets/Addons/NGUI/Examples/Scripts/Other/ChatInput.cs	/^	public UITextList textList;$/;"	f	class:ChatInput
textScale	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	[HideInInspector][SerializeField] float textScale = 0f;$/;"	f	class:UIPopupList	file:
texture	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public Texture texture$/;"	p	class:NGUISettings
texture	Assets/Addons/NGUI/Scripts/UI/UIAtlas.cs	/^	public Texture texture { get { return (mReplacement != null) ? mReplacement.texture : (material != null ? material.mainTexture as Texture : null); } }$/;"	p	class:UIAtlas
texture	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public Texture2D texture$/;"	p	class:UIFont
thumb	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public Transform thumb;$/;"	f	class:UIProgressBar
time	Assets/Addons/NGUI/Scripts/Internal/RealTime.cs	/^	static public float time$/;"	p	class:RealTime
tint	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public Color tint = Color.white;$/;"	f	class:NGUIText
to	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	public float to = 1f;$/;"	f	class:TweenAlpha
to	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	public Color to = Color.white;$/;"	f	class:TweenColor
to	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	public float to = 45f;$/;"	f	class:TweenFOV
to	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	public int to = 100;$/;"	f	class:TweenHeight
to	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	public float to = 1f;$/;"	f	class:TweenOrthoSize
to	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	public Vector3 to;$/;"	f	class:TweenPosition
to	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	public Vector3 to;$/;"	f	class:TweenRotation
to	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	public Vector3 to = Vector3.one;$/;"	f	class:TweenScale
to	Assets/Addons/NGUI/Scripts/Tweening/TweenTransform.cs	/^	public Transform to;$/;"	f	class:TweenTransform
to	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	public float to = 1f;$/;"	f	class:TweenVolume
to	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	public int to = 100;$/;"	f	class:TweenWidth
tooltipDelay	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public float tooltipDelay = 1f;$/;"	f	class:UICamera
topAnchor	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public AnchorPoint topAnchor = new AnchorPoint(1f);$/;"	f	class:UIRect
topLeft	Assets/Addons/NGUI/Scripts/UI/UIViewport.cs	/^	public Transform topLeft;$/;"	f	class:UIViewport
topType	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public AdvancedType topType = AdvancedType.Sliced;$/;"	f	class:UISprite
totalDelta	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public Vector2 totalDelta;		\/\/ Delta since the event started being tracked$/;"	f	class:UICamera.MouseOrTouch
touchBegan	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^		public bool touchBegan = true;$/;"	f	class:UICamera.MouseOrTouch
touchClickThreshold	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public float touchClickThreshold = 40f;$/;"	f	class:UICamera
touchCount	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	static public int touchCount$/;"	p	class:UICamera
touchDragThreshold	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public float touchDragThreshold = 40f;$/;"	f	class:UICamera
triangles	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	public int triangles { get { return (mMesh != null) ? mTriangles : 0; } }$/;"	p	class:UIDrawCall
trigger	Assets/Addons/NGUI/Scripts/Interaction/UIButtonMessage.cs	/^	public Trigger trigger = Trigger.OnClick;$/;"	f	class:UIButtonMessage
trigger	Assets/Addons/NGUI/Scripts/Interaction/UIPlayAnimation.cs	/^	public Trigger trigger = Trigger.OnClick;$/;"	f	class:UIPlayAnimation
trigger	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	public Trigger trigger = Trigger.OnClick;$/;"	f	class:UIPlaySound
trigger	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public Trigger trigger = Trigger.OnClick;$/;"	f	class:UIPlayTween
trueTypeFont	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public Font trueTypeFont;$/;"	f	class:UIPopupList
trueTypeFont	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public Font trueTypeFont$/;"	p	class:UILabel
tweenFactor	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public float tweenFactor { get { return mFactor; } set { mFactor = Mathf.Clamp01(value); } }$/;"	p	class:UITweener
tweenGroup	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public int tweenGroup = 0;$/;"	f	class:UIPlayTween
tweenGroup	Assets/Addons/NGUI/Scripts/Tweening/UITweener.cs	/^	public int tweenGroup = 0;$/;"	f	class:UITweener
tweenTarget	Assets/Addons/NGUI/Scripts/Interaction/UIButtonColor.cs	/^	public GameObject tweenTarget;$/;"	f	class:UIButtonColor
tweenTarget	Assets/Addons/NGUI/Scripts/Interaction/UIButtonOffset.cs	/^	public Transform tweenTarget;$/;"	f	class:UIButtonOffset
tweenTarget	Assets/Addons/NGUI/Scripts/Interaction/UIButtonRotation.cs	/^	public Transform tweenTarget;$/;"	f	class:UIButtonRotation
tweenTarget	Assets/Addons/NGUI/Scripts/Interaction/UIButtonScale.cs	/^	public Transform tweenTarget;$/;"	f	class:UIButtonScale
tweenTarget	Assets/Addons/NGUI/Scripts/Interaction/UIPlayTween.cs	/^	public GameObject tweenTarget;$/;"	f	class:UIPlayTween
type	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		public System.Type type { get { return typeof(void); } }$/;"	p	class:EventDelegate.Parameter
type	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		public System.Type type$/;"	p	class:EventDelegate.Parameter
type	Assets/Addons/NGUI/Scripts/UI/UISprite.cs	/^	public virtual Type type$/;"	p	class:UISprite
types	Assets/Addons/NGUI/Scripts/Editor/NGUISelectionTools.cs	/^		public List<System.Type> types = new List<System.Type>();$/;"	f	class:NGUISelectionTools.AssetEntry
u0	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		public Vector2 u0;$/;"	f	class:NGUIText.GlyphInfo
u1	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		public Vector2 u1;$/;"	f	class:NGUIText.GlyphInfo
uiCamera	Assets/Addons/NGUI/Examples/Scripts/InventorySystem/Game/UICursor.cs	/^	public Camera uiCamera;$/;"	f	class:UICursor
uiCamera	Assets/Addons/NGUI/Examples/Scripts/Other/WindowAutoYaw.cs	/^	public Camera uiCamera;$/;"	f	class:WindowAutoYaw
uiCamera	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	public Camera uiCamera = null;$/;"	f	class:UIAnchor
uiCamera	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	public Camera uiCamera = null;$/;"	f	class:UIStretch
uiCamera	Assets/Addons/NGUI/Scripts/UI/UITooltip.cs	/^	public Camera uiCamera;$/;"	f	class:UITooltip
underline_position	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short underline_position;$/;"	f	struct:FreeType.FT_FaceRec
underline_thickness	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public short underline_thickness;$/;"	f	struct:FreeType.FT_FaceRec
units_per_EM	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public ushort units_per_EM;$/;"	f	struct:FreeType.FT_FaceRec
unityPacking	Assets/Addons/NGUI/Scripts/Editor/NGUISettings.cs	/^	static public bool unityPacking$/;"	p	class:NGUISettings
update	Assets/Addons/NGUI/Scripts/Internal/PropertyBinding.cs	/^	public UpdateCondition update = UpdateCondition.OnUpdate;$/;"	f	class:PropertyBinding
updateAnchors	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public AnchorUpdate updateAnchors = AnchorUpdate.OnUpdate;$/;"	f	class:UIRect
updateAtlasSpriteData	Assets/Addons/RetinaPro/Editor/retinaProNGTools.cs	/^	public static void updateAtlasSpriteData(ref UIAtlas atlas, ref List<UISpriteData> sprites)$/;"	m	class:retinaProNGTools
updateOrder	Assets/Addons/NGUI/Examples/Scripts/Other/LagPosition.cs	/^	public int updateOrder = 0;$/;"	f	class:LagPosition
updateOrder	Assets/Addons/NGUI/Examples/Scripts/Other/LagRotation.cs	/^	public int updateOrder = 0;$/;"	f	class:LagRotation
updateOrder	Assets/Addons/NGUI/Examples/Scripts/Other/WindowAutoYaw.cs	/^	public int updateOrder = 0;$/;"	f	class:WindowAutoYaw
updateOrder	Assets/Addons/NGUI/Examples/Scripts/Other/WindowDragTilt.cs	/^	public int updateOrder = 0;$/;"	f	class:WindowDragTilt
updateScreens	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	void updateScreens()$/;"	m	class:retinaProDataSerialize	file:
updateScrollView	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	public bool updateScrollView = false;$/;"	f	class:SpringPosition
updateTable	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	public bool updateTable = false;$/;"	f	class:TweenHeight
updateTable	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	public bool updateTable = false;$/;"	f	class:TweenScale
updateTable	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	public bool updateTable = false;$/;"	f	class:TweenWidth
url	Assets/Addons/NGUI/Examples/Scripts/Other/DownloadTexture.cs	/^	public string url = "http:\/\/www.yourwebsite.com\/logo.png";$/;"	f	class:DownloadTexture
useController	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public bool useController = true;$/;"	f	class:UICamera
useForBothLandscapePortrait	Assets/Addons/RetinaPro/Editor/retinaProDevice.cs	/^    public bool useForBothLandscapePortrait$/;"	p	class:retinaProDevice
useForBothLandscapePortrait	Assets/Addons/RetinaPro/Editor/retinaProScreen.cs	/^    public bool useForBothLandscapePortrait$/;"	p	class:retinaProScreen
useForBothLandscapePortrait	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public bool 	useForBothLandscapePortrait;$/;"	f	class:retinaProRuntimeScreen
useKeyboard	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public bool useKeyboard = true;$/;"	f	class:UICamera
useMouse	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public bool useMouse = true;$/;"	f	class:UICamera
useSymbols	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^	static public bool useSymbols = false;$/;"	f	class:NGUIText
useTouch	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public bool useTouch = true;$/;"	f	class:UICamera
usedForUI	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool usedForUI { get { return (mCam != null && mCam.isOrthoGraphic); } }$/;"	p	class:UIPanel
usedRectangles	Assets/Addons/NGUI/Scripts/Editor/UITexturePacker.cs	/^	public List<Rect> usedRectangles = new List<Rect>();$/;"	f	class:UITexturePacker
uvRect	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public Rect uvRect	{ get { return mUV; } }$/;"	p	class:BMSymbol
uvRect	Assets/Addons/NGUI/Scripts/UI/UI2DSprite.cs	/^	public Rect uvRect$/;"	p	class:UI2DSprite
uvRect	Assets/Addons/NGUI/Scripts/UI/UIFont.cs	/^	public Rect uvRect$/;"	p	class:UIFont
uvRect	Assets/Addons/NGUI/Scripts/UI/UITexture.cs	/^	public Rect uvRect$/;"	p	class:UITexture
uvs	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public BetterList<Vector2> uvs = new BetterList<Vector2>();$/;"	f	class:UIDrawCall
uvs	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	public BetterList<Vector2> uvs = new BetterList<Vector2>();$/;"	f	class:UIGeometry
v0	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		public Vector2 v0;$/;"	f	class:NGUIText.GlyphInfo
v1	Assets/Addons/NGUI/Scripts/Internal/NGUIText.cs	/^		public Vector2 v1;$/;"	f	class:NGUIText.GlyphInfo
validation	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public Validation validation = Validation.None;$/;"	f	class:UIInput
value	Assets/Addons/NGUI/Scripts/Interaction/UIPopupList.cs	/^	public string value$/;"	p	class:UIPopupList
value	Assets/Addons/NGUI/Scripts/Interaction/UIProgressBar.cs	/^	public float value$/;"	p	class:UIProgressBar
value	Assets/Addons/NGUI/Scripts/Interaction/UIToggle.cs	/^	public bool value$/;"	p	class:UIToggle
value	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		public object value { get { return obj; } }$/;"	p	class:EventDelegate.Parameter
value	Assets/Addons/NGUI/Scripts/Internal/EventDelegate.cs	/^		public object value$/;"	p	class:EventDelegate.Parameter
value	Assets/Addons/NGUI/Scripts/Tweening/TweenAlpha.cs	/^	public float value { get { return cachedRect.alpha; } set { cachedRect.alpha = value; } }$/;"	p	class:TweenAlpha
value	Assets/Addons/NGUI/Scripts/Tweening/TweenColor.cs	/^	public Color value$/;"	p	class:TweenColor
value	Assets/Addons/NGUI/Scripts/Tweening/TweenFOV.cs	/^	public float value { get { return cachedCamera.fieldOfView; } set { cachedCamera.fieldOfView = value; } }$/;"	p	class:TweenFOV
value	Assets/Addons/NGUI/Scripts/Tweening/TweenHeight.cs	/^	public int value { get { return cachedWidget.height; } set { cachedWidget.height = value; } }$/;"	p	class:TweenHeight
value	Assets/Addons/NGUI/Scripts/Tweening/TweenOrthoSize.cs	/^	public float value$/;"	p	class:TweenOrthoSize
value	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	public Vector3 value$/;"	p	class:TweenPosition
value	Assets/Addons/NGUI/Scripts/Tweening/TweenRotation.cs	/^	public Quaternion value { get { return cachedTransform.localRotation; } set { cachedTransform.localRotation = value; } }$/;"	p	class:TweenRotation
value	Assets/Addons/NGUI/Scripts/Tweening/TweenScale.cs	/^	public Vector3 value { get { return cachedTransform.localScale; } set { cachedTransform.localScale = value; } }$/;"	p	class:TweenScale
value	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	public float value$/;"	p	class:TweenVolume
value	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	public int value { get { return cachedWidget.width; } set { cachedWidget.width = value; } }$/;"	p	class:TweenWidth
value	Assets/Addons/NGUI/Scripts/UI/UIInput.cs	/^	public string value$/;"	p	class:UIInput
value	Assets/Addons/NGUI/Scripts/UI/UILocalize.cs	/^	public string value$/;"	p	class:UILocalize
vertAdvance	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int vertAdvance;$/;"	f	struct:FreeType.FT_Glyph_Metrics
vertBearingX	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int vertBearingX;$/;"	f	struct:FreeType.FT_Glyph_Metrics
vertBearingY	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int vertBearingY;$/;"	f	struct:FreeType.FT_Glyph_Metrics
verticalAxisName	Assets/Addons/NGUI/Scripts/UI/UICamera.cs	/^	public string verticalAxisName = "Vertical";$/;"	f	class:UICamera
verticalScrollBar	Assets/Addons/NGUI/Scripts/Interaction/UIScrollView.cs	/^	public UIProgressBar verticalScrollBar;$/;"	f	class:UIScrollView
verts	Assets/Addons/NGUI/Scripts/Internal/UIDrawCall.cs	/^	[HideInInspector][System.NonSerialized] public BetterList<Vector3> verts = new BetterList<Vector3>();$/;"	f	class:UIDrawCall
verts	Assets/Addons/NGUI/Scripts/Internal/UIGeometry.cs	/^	public BetterList<Vector3> verts = new BetterList<Vector3>();$/;"	f	class:UIGeometry
volume	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	[Range(0f, 1f)] public float volume = 1f;$/;"	f	class:UIPlaySound
volume	Assets/Addons/NGUI/Scripts/Interaction/UIPlaySound.cs	/^	public float volume = 1f;$/;"	f	class:UIPlaySound
volume	Assets/Addons/NGUI/Scripts/Tweening/TweenVolume.cs	/^	public float volume { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenVolume
wasCalled	Assets/Addons/Messenger/MessengerUnitTest.cs	/^        bool wasCalled = false;$/;"	f	class:MessengerUnitTest	file:
widgetContainer	Assets/Addons/NGUI/Scripts/UI/UIAnchor.cs	/^	[HideInInspector][SerializeField] UIWidget widgetContainer;$/;"	f	class:UIAnchor	file:
widgetContainer	Assets/Addons/NGUI/Scripts/UI/UIStretch.cs	/^	[HideInInspector][SerializeField] UIWidget widgetContainer;$/;"	f	class:UIStretch	file:
widgets	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^		public List<UIWidget> widgets = new List<UIWidget>();$/;"	f	class:UIPanelTool.Entry
widgets	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public BetterList<UIWidget> widgets = new BetterList<UIWidget>();$/;"	f	class:UIPanel
widgetsAreStatic	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public bool widgetsAreStatic = false;$/;"	f	class:UIPanel
widgetsEnabled	Assets/Addons/NGUI/Scripts/Editor/UIPanelTool.cs	/^		public bool widgetsEnabled = false;$/;"	f	class:UIPanelTool.Entry
width	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int width;$/;"	f	struct:FreeType.FT_Bitmap
width	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int width;$/;"	f	struct:FreeType.FT_Glyph_Metrics
width	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int width;	\/\/ Glyph's width in pixels$/;"	f	class:BMGlyph
width	Assets/Addons/NGUI/Scripts/Internal/BMSymbol.cs	/^	public int width	{ get { return mWidth; } }$/;"	p	class:BMSymbol
width	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public int width$/;"	p	class:UIWidget
width	Assets/Addons/NGUI/Scripts/Tweening/TweenWidth.cs	/^	public int width { get { return this.value; } set { this.value = value; } }$/;"	p	class:TweenWidth
width	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public float width { get { return GetViewSize().x; } }$/;"	p	class:UIPanel
width	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int width = 0;$/;"	f	class:UISpriteData
width	Assets/Addons/RetinaPro/Editor/retinaProScreen.cs	/^    public int width$/;"	p	class:retinaProScreen
width	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	public int 		width;$/;"	f	class:retinaProRuntimeScreen
worldCorners	Assets/Addons/NGUI/Scripts/Internal/UIRect.cs	/^	public abstract Vector3[] worldCorners { get; }$/;"	p	class:UIRect
worldCorners	Assets/Addons/NGUI/Scripts/Internal/UIWidget.cs	/^	public override Vector3[] worldCorners$/;"	p	class:UIWidget
worldCorners	Assets/Addons/NGUI/Scripts/UI/UILabel.cs	/^	public override Vector3[] worldCorners$/;"	p	class:UILabel
worldCorners	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public override Vector3[] worldCorners$/;"	p	class:UIPanel
worldSpace	Assets/Addons/NGUI/Scripts/Tweening/SpringPosition.cs	/^	public bool worldSpace = false;$/;"	f	class:SpringPosition
worldSpace	Assets/Addons/NGUI/Scripts/Tweening/TweenPosition.cs	/^	public bool worldSpace = false;$/;"	f	class:TweenPosition
worldToLocal	Assets/Addons/NGUI/Scripts/UI/UIPanel.cs	/^	public Matrix4x4 worldToLocal = Matrix4x4.identity;$/;"	f	class:UIPanel
x	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int x;$/;"	f	struct:FreeType.FT_Vector
x	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^		public int x;$/;"	f	struct:NGUIEditorTools.IntVector
x	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int x;		\/\/ Offset from the left side of the texture to the left side of the glyph$/;"	f	class:BMGlyph
x	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int x = 0;$/;"	f	class:UISpriteData
x	Assets/Libs/IntVect2.cs	/^    public int x;$/;"	f	class:IntVect2
xMax	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int xMax;$/;"	f	struct:FreeType.FT_BBox
xMin	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int xMin;$/;"	f	struct:FreeType.FT_BBox
x_ppem	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public ushort x_ppem;$/;"	f	struct:FreeType.FT_Size_Metrics
x_scale	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int x_scale;$/;"	f	struct:FreeType.FT_Size_Metrics
y	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int y;$/;"	f	struct:FreeType.FT_Vector
y	Assets/Addons/NGUI/Scripts/Editor/NGUIEditorTools.cs	/^		public int y;$/;"	f	struct:NGUIEditorTools.IntVector
y	Assets/Addons/NGUI/Scripts/Internal/BMGlyph.cs	/^	public int y;		\/\/ Offset from the top of the texture to the top of the glyph$/;"	f	class:BMGlyph
y	Assets/Addons/NGUI/Scripts/UI/UISpriteData.cs	/^	public int y = 0;$/;"	f	class:UISpriteData
y	Assets/Libs/IntVect2.cs	/^    public int y;$/;"	f	class:IntVect2
yMax	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int yMax;$/;"	f	struct:FreeType.FT_BBox
yMin	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int yMin;$/;"	f	struct:FreeType.FT_BBox
y_ppem	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public ushort y_ppem;$/;"	f	struct:FreeType.FT_Size_Metrics
y_scale	Assets/Addons/NGUI/Scripts/Editor/FreeType.cs	/^		public int y_scale;$/;"	f	struct:FreeType.FT_Size_Metrics
yawAmount	Assets/Addons/NGUI/Examples/Scripts/Other/WindowAutoYaw.cs	/^	public float yawAmount = 20f;$/;"	f	class:WindowAutoYaw
~retinaProDataRuntime	Assets/Addons/RetinaPro/retinaProDataRuntime.cs	/^	~retinaProDataRuntime()$/;"	m	class:retinaProDataRuntime	file:
~retinaProDataSerialize	Assets/Addons/RetinaPro/Editor/retinaProDataSerialize.cs	/^	~retinaProDataSerialize()$/;"	m	class:retinaProDataSerialize	file:
